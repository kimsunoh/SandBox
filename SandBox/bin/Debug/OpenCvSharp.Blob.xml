<?xml version="1.0"?>
<doc>
    <assembly>
        "OpenCvSharp.Blob"
    </assembly>
    <members>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlobs,OpenCvSharp.IplImage,OpenCvSharp.IplImage,&lt;unknown type&gt;,System.Double)">
            <summary>
Draws or prints information about blobs. (cvRenderBlobs)
</summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blobs">List of blobs.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_BLOB_RENDER_COLOR|CV_BLOB_RENDER_CENTROID|CV_BLOB_RENDER_BOUNDING_BOX|CV_BLOB_RENDER_ANGLE.</param>
            <param name="alpha">If mode CV_BLOB_RENDER_COLOR is used. 1.0 indicates opaque and 0.0 translucent (1.0 by default).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlobs,OpenCvSharp.IplImage,OpenCvSharp.IplImage,&lt;unknown type&gt;)">
            <summary>
Draws or prints information about blobs. (cvRenderBlobs)
</summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blobs">List of blobs.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_BLOB_RENDER_COLOR|CV_BLOB_RENDER_CENTROID|CV_BLOB_RENDER_BOUNDING_BOX|CV_BLOB_RENDER_ANGLE.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlobs,OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
Draws or prints information about blobs. (cvRenderBlobs)
</summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blobs">List of blobs.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.Angle(OpenCvSharp.Blob.CvBlob)">
            <summary>
Calculates angle orientation of a blob.
This function uses central moments so cvCentralMoments should have been called before for this blob. (cvAngle)
</summary>
            <param name="blob">Blob.</param>
            <returns>Angle orientation in radians.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.CentralMoments(OpenCvSharp.Blob.CvBlob,OpenCvSharp.IplImage)">
            <summary>
Calculates central moment for a blob.
Central moments will be stored in blob structure. (cvCentralMoments)
</summary>
            <param name="blob">Blob.</param>
            <param name="img">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.Centroid(OpenCvSharp.Blob.CvBlob)">
            <summary>
Calculates centroid.
Centroid will be returned and stored in the blob structure. (cvCentroid)
</summary>
            <param name="blob">Blob whose centroid will be calculated.</param>
            <returns>Centroid.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.FilterByArea(OpenCvSharp.Blob.CvBlobs,System.UInt32,System.UInt32)">
            <summary>
Filter blobs by area. 
Those blobs whose areas are not in range will be erased from the input list of blobs. (cvFilterByArea)
</summary>
            <param name="blobs">List of blobs.</param>
            <param name="minArea">Minimun area.</param>
            <param name="maxArea">Maximun area.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.GreaterBlob(OpenCvSharp.Blob.CvBlobs)">
            <summary>
Find greater blob. (cvGreaterBlob)
</summary>
            <param name="blobs">List of blobs.</param>
            <returns>Label of greater blob.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.ReleaseBlobs(OpenCvSharp.Blob.CvBlobs)">
            <summary>
Clear blobs structure. (cvReleaseBlobs)
</summary>
            <param name="blobs">List of blobs.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.FilterLabels(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlobs)">
            <summary>
Draw a binary image with the blobs that have been given. (cvFilterLabels)
</summary>
            <param name="imgIn">Input image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="imgOut">Output binary image (depth=IPL_DEPTH_8U and num. channels=1).</param>
            <param name="blobs">List of blobs to be drawn.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.Label(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlobs)">
            <summary>
Label the connected parts of a binary image. (cvLabel)
</summary>
            <param name="img">Input binary image (depth=IPL_DEPTH_8U and num. channels=1).</param>
            <param name="imgOut">Output image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blobs">List of blobs.</param>
            <returns>Number of pixels that has been labeled.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.FilterByArea(System.UInt32,System.UInt32)">
            <summary>
Filter blobs by area. 
Those blobs whose areas are not in range will be erased from the input list of blobs. (cvFilterByArea)
</summary>
            <param name="minArea">Minimun area.</param>
            <param name="maxArea">Maximun area.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.IplImage,&lt;unknown type&gt;,System.Double)">
            <summary>
Draws or prints information about blobs. (cvRenderBlobs)
</summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_BLOB_RENDER_COLOR|CV_BLOB_RENDER_CENTROID|CV_BLOB_RENDER_BOUNDING_BOX|CV_BLOB_RENDER_ANGLE.</param>
            <param name="alpha">If mode CV_BLOB_RENDER_COLOR is used. 1.0 indicates opaque and 0.0 translucent (1.0 by default).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.IplImage,&lt;unknown type&gt;)">
            <summary>
Draws or prints information about blobs. (cvRenderBlobs)
</summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_BLOB_RENDER_COLOR|CV_BLOB_RENDER_CENTROID|CV_BLOB_RENDER_BOUNDING_BOX|CV_BLOB_RENDER_ANGLE.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
Draws or prints information about blobs. (cvRenderBlobs)
</summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Release">
            <summary>
Clear blobs structure. (cvReleaseBlobs)
</summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.GreaterBlob">
            <summary>
Find greater blob. (cvGreaterBlob)
</summary>
            <returns>Label of greater blob.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.FilterLabels(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
Draw a binary image with the blobs that have been given. (cvFilterLabels)
</summary>
            <param name="imgIn">Input image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="imgOut">Output binary image (depth=IPL_DEPTH_8U and num. channels=1).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Label(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
Label the connected parts of a binary image. (cvLabel)
</summary>
            <param name="img">Input binary image (depth=IPL_DEPTH_8U and num. channels=1).</param>
            <param name="imgOut">Output image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <returns>Number of pixels that has been labeled.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Dispose">
            <summary>
Destructor
</summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Finalize">
            <summary>
Finalizer
</summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.#ctor">
            <summary>
Constructor
</summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobLib.DepthLabel">
            <summary>
Size of a label in bits.
</summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvBlobLib">
            <summary>
functions of cvblob library
</summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Enumerator.Reset">
            <summary>
Sets the enumerator to its initial position, which is before the first element
in the collection.
</summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Enumerator.MoveNext">
            <summary>
Advances the enumerator to the next element of the collection.
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.Enumerator.CurrentObject">
            <summary>
Gets the current element in the collection.
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.Enumerator.Current">
            <summary>
Gets the element in the collection at the current position of the enumerator.
</summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvBlobs.Enumerator">
            <summary>
implementation of IEnumerator
</summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.GetEnumeratorNonGeneric">
            <summary>
Returns an enumerator that iterates through a collection. 
</summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.GetEnumerator">
            <summary>
Returns an enumerator that iterates through a collection. 
</summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Remove(System.Collections.Generic.KeyValuePair`2{System.UInt32,OpenCvSharp.Blob.CvBlob})">
            <summary>
Removes the first occurrence of a specific object from the ICollection&lt;T&gt;. 
</summary>
            <param name="item">The object to remove from the ICollection&lt;T&gt;.</param>
            <returns>true if item was successfully removed from the ICollection&lt;T&gt;; otherwise, false. 
This method also returns false if item is not found in the original ICollection&lt;T&gt;. </returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.IsReadOnly">
            <summary>
Gets a value indicating whether the ICollection&lt;T&gt; is read-only.
</summary>
            <returns>true if the ICollection&lt;T&gt; is read-only; otherwise, false. 
In the default implementation of Collection&lt;T&gt;, this property always returns false.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.Count">
            <summary>
Gets the number of elements contained in the ICollection;T&gt;.
</summary>
            <returns>The number of elements contained in the ICollection;T&gt;..</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.CopyTo(System.Collections.Generic.KeyValuePair`2{System.UInt32,OpenCvSharp.Blob.CvBlob}[],System.Int32)">
            <summary>
Copies the elements of the ICollection&lt;T&gt; to an Array, starting at a particular Array index.
</summary>
            <param name="ary">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="aryIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Contains(System.Collections.Generic.KeyValuePair`2{System.UInt32,OpenCvSharp.Blob.CvBlob})">
            <summary>
Determines whether the ICollection&lt;T&gt; contains a specific value. 
</summary>
            <param name="item">The object to locate in the ICollection&lt;T&gt;.</param>
            <returns>true if item is found in the ICollection&lt;T&gt;; otherwise, false. </returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Clear">
            <summary>
Removes all items from the ICollection&lt;T&gt;. 
</summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Add(System.Collections.Generic.KeyValuePair`2{System.UInt32,OpenCvSharp.Blob.CvBlob})">
            <summary>
Adds an item to the ICollection&lt;T&gt;.
</summary>
            <param name="item">The object to add to the ICollection&lt;T&gt;.</param>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.Item(System.UInt32)">
            <summary>
Gets or sets the value associated with the specified key.
</summary>
            <param name="key">The key of the value to get or set.</param>
            <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a KeyNotFoundException, and a set operation creates a new element with the specified key.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.Values">
            <summary>
Gets an ICollection&lt;T&gt; containing the values in the IDictionary&lt;TKey,TValue&gt;.
</summary>
            <returns>An ICollection&lt;T&gt; containing the values in the IDictionary&lt;TKey,TValue&gt;.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.TryGetValue(System.UInt32,OpenCvSharp.Blob.CvBlob@)">
            <summary>
Gets the value associated with the specified key. 
</summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the object that implements IDictionary contains an element with the specified key; otherwise, false. </returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Remove(System.UInt32)">
            <summary>
Removes the element with the specified key from the IDictionary&lt;TKey,TValue&gt;.
</summary>
            <param name="key">The key of the element to remove.</param>
            <returns> true if the element is successfully found and removed; otherwise, false. This method returns false if key is not found in the IDictionary&lt;TKey, TValue&gt;.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.Keys">
            <summary>
Gets an ICollection&lt;T&gt; containing the keys of the IDictionary&lt;TKey,TValue&gt;.
</summary>
            <returns>An ICollection&lt;T&gt; containing the keys of the IDictionary&lt;TKey,TValue&gt;.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.ContainsKey(System.UInt32)">
            <summary>
Determines whether the IDictionary contains an element with the specified key. 
</summary>
            <param name="key">The key to locate in the IDictionary&lt;TKey,TValue&gt;.</param>
            <returns>true if the IDictionary&lt;TKey,TValue&gt; contains an element with the key; otherwise, false. </returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Add(System.UInt32,OpenCvSharp.Blob.CvBlob)">
            <summary>
Adds the specified key and value to the dictionary.
</summary>
            <param name="key">The object to use as the key.</param>
            <param name="value">The object to use as the value.</param>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.Ptr">
            <summary>
CvBlobs pointer (std::map&lt;CvLabel,CvBlob *&gt;*)
</summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobs.ptr">
            <summary>
CvBlobs pointer (std::map&lt;CvLabel,CvBlob *&gt;*)
</summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvBlobs">
            <summary>
List of blobs.
A map is used to access each blob from its label number.
</summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvBlobsEnumeratorVariables">
            <summary>
members of CvBlobs::Enumerator
</summary>
        </member>
        <member name="T:OpenCvSharp.Blob.RenderBlobsMode">
            <summary>
Render mode of cvRenderBlobs
</summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlob.CalcAngle">
            <summary>
Calculates angle orientation of a blob.
This function uses central moments so cvCentralMoments should have been called before for this blob. (cvAngle)
</summary>
            <returns>Angle orientation in radians.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlob.CalcCentralMoments(OpenCvSharp.IplImage)">
            <summary>
Calculates central moment for a blob.
Central moments will be stored in blob structure. (cvCentralMoments)
</summary>
            <param name="img">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlob.CalcCentroid">
            <summary>
Calculates centroid.
Centroid will be returned and stored in the blob structure. (cvCentroid)
</summary>
            <returns>Centroid.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob._Rank">
            <summary>
Rank of the union-find data estructure
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob._Parent">
            <summary>
Parent of the union-find data estructure
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.U02">
            <summary>
Central moment 02
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.U20">
            <summary>
Central moment 20
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.U11">
            <summary>
Central moment 11
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.CentralMoments">
            <summary>
True if central moments are being calculated
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M02">
            <summary>
Moment 02
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M20">
            <summary>
Moment 20
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M11">
            <summary>
Moment 11
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M01">
            <summary>
Moment 01
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M10">
            <summary>
Moment 10
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.Centroid">
            <summary>
Centroid
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.MaxY">
            <summary>
Y max
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.MinY">
            <summary>
Y min
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.MaxX">
            <summary>
X max
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.MinX">
            <summary>
X min
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M00">
            <summary>
Area (moment 00)
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.Area">
            <summary>
Area (moment 00)
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.Label">
            <summary>
Label assigned to the blob
</summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlob.#ctor(CvBlob*)">
            <summary>
constructor
</summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.Ptr">
            <summary>
CvBlob pointer
</summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlob.ptr">
            <summary>
CvBlob pointer
</summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvBlob">
            <summary>
Struct that contain information about one blob.
</summary>
        </member>
        <member name="M:cvAngle(CvBlob*)">
\fn double cvAngle(CvBlob *blob)
\brief Calculates angle orientation of a blob.
This function uses central moments so cvCentralMoments should have been called before for this blob.
\param blob Blob.
\return Angle orientation in radians.
\see cvCentralMoments
\see CvBlob
</member>
        <member name="M:cvCentralMoments(CvBlob*,_IplImage!System.Runtime.CompilerServices.IsConst*)">
\fn void cvCentralMoments(CvBlob *blob, const IplImage *img)
\brief Calculates central moment for a blob.
Central moments will be stored in blob structure.
\param blob Blob.
\param img Label image (depth=IPL_DEPTH_LABEL and num. channels=1).
\see CvBlob
\see cvLabel
</member>
        <member name="M:cvCentroid(CvBlob*)">
\fn inline CvPoint2D64f cvCentroid(CvBlob *blob)
\brief Calculates centroid.
Centroid will be returned and stored in the blob structure.
\param blob Blob whose centroid will be calculated.
\return Centroid.
\see CvBlob
</member>
        <member name="M:cvFilterLabels(_IplImage*,_IplImage*,std.map&lt;System.UInt32,CvBlob**&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
\fn void cvFilterLabels(IplImage *imgIn, IplImage *imgOut, CvBlobs blobs)
\brief Draw a binary image with the blobs that have been given.
\param imgIn Input image (depth=IPL_DEPTH_LABEL and num. channels=1).
\param imgOut Output binary image (depth=IPL_DEPTH_8U and num. channels=1).
\param blobs List of blobs to be drawn.
\see cvLabel
</member>
        <member name="F:CvBlob._rank">
Rank of the union-find data estructure.
</member>
        <member name="F:CvBlob._parent">
Parent of the union-find data estructure.
</member>
        <member name="T:CvBlob">
\def IPL_DEPTH_LABEL
\brief Size of a label in bits.
\see CvLabel
\brief Struct that contain information about one blob.
</member>
        <member name="D:CvLabel">
\brief Type of label.
\see IPL_DEPTH_LABEL
</member>
        <!-- Discarding badly formed XML document comment for member 'D:CvBlobs'. -->
        <!-- Discarding badly formed XML document comment for member 'D:CvLabelBlob'. -->
        <!-- Discarding badly formed XML document comment for member 'M:cvLabel(_IplImage*,_IplImage*,std.map<System.UInt32,CvBlob**>*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:cvReleaseBlobs(std.map<System.UInt32,CvBlob**>*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:cvGreaterBlob(std.map<System.UInt32,CvBlob**>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:cvFilterByArea(std.map<System.UInt32,CvBlob**>*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:cvRenderBlobs(_IplImage!System.Runtime.CompilerServices.IsConst*,std.map<System.UInt32,CvBlob**>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,_IplImage*,_IplImage*,System.UInt16,System.Double)'. -->
    </members>
</doc>