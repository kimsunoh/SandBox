<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenCvSharp</name>
    </assembly>
    <members>
        <member name="T:OpenCvSharp.Win32API">
            <summary>
            Win32API Wrapper
            </summary>
        </member>
        <member name="M:OpenCvSharp.Win32API.FillMemory(System.IntPtr,System.Int32,System.Byte)">
            <summary>
            
            </summary>
            <param name="Destination">메모리 블록</param>
            <param name="Length">메모리 블록 사이즈</param>
            <param name="Fill">쓰고 싶은 값</param>
        </member>
        <member name="M:OpenCvSharp.Win32API.SetDIBitsToDevice(System.IntPtr,System.Int32,System.Int32,System.UInt32,System.UInt32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.IntPtr,OpenCvSharp.Win32API.BITMAPINFO@,System.UInt32)">
            <summary>
            
            </summary>
            <param name="hdc">디바이스 콘텍스트의 핸들</param>
            <param name="XDest">전송처 장방형의 좌상구석의 x 좌표</param>
            <param name="YDest">전송처 장방형의 좌상구석의 y 좌표</param>
            <param name="dwWidth">전송원장방형의 폭</param>
            <param name="dwHeight">전송원장방형의 높이</param>
            <param name="XSrc">전송원장방형의 왼쪽 하단 모서리의 x 좌표</param>
            <param name="YSrc">전송원장방형의 왼쪽 하단 모서리의 y 좌표</param>
            <param name="uStartScan">배열내의 최초의 주사행</param>
            <param name="cScanLines">주사행의 수</param>
            <param name="lpvBits">DIB 비트로부터 되는 배열</param>
            <param name="lpbmi">비트 맵 정보</param>
            <param name="fuColorUse">RGB 치 또는 팔레트 인덱스</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Win32API.SetStretchBltMode(System.IntPtr,System.Int32)">
            <summary>
            지정된 디바이스 콘텍스트의 비트 맵 신축 모드를 설정합니다
            </summary>
            <param name="hdc">디바이스 콘텍스트의 핸들</param>
            <param name="iStretchMode">비트 맵의 신축 모드</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Win32API.StretchDIBits(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,OpenCvSharp.Win32API.BITMAPINFO@,System.UInt32,System.UInt32)">
            <summary>
            지정된 디바이스 독립 비트 맵(DIB) 내의 장방형 피크셀의 색데이터를, 지정된 장방형에 카피합니다.
            카피처 장방형이 카피원장방형보다 큰 경우, 이 함수는 카피처 장방형에 맞추고, 색데이터의 행으로 열을 확대합니다.
            카피처 장방형이 카피원장방형보다 작은 경우, 이 함수는 지정된 라스터 오퍼레이션을 사용하고, 행과 열을 축소합니다.
            </summary>
            <param name="hdc">디바이스 콘텍스트의 핸들</param>
            <param name="XDest">카피처 장방형의 좌상구석의 x 좌표</param>
            <param name="YDest">카피처 장방형의 좌상구석의 y 좌표</param>
            <param name="nDestWidth">카피처 장방형의 폭</param>
            <param name="nDestHeight">카피처 장방형의 높이</param>
            <param name="XSrc">카피원장방형의 좌상구석의 x 좌표</param>
            <param name="YSrc">카피원장방형의 좌상구석의 x 좌표</param>
            <param name="nSrcWidth">카피원장방형의 폭</param>
            <param name="nSrcHeight">카피원장방형의 높이</param>
            <param name="lpBits">비트 맵의 비트</param>
            <param name="lpBitsInfo">비트 맵의 데이터</param>
            <param name="iUsage">데이터의 종류</param>
            <param name="dwRop">라스터 오퍼레이션 코드</param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CvTrackbar">
            <summary>
            CvWindow에 붙여 조작하는 트랙바
            </summary>
        </member>
        <member name="T:OpenCvSharp.DisposableObject">
            <summary>
            해제 처리를 실시하는 클래스를 계승하기 위한 기본 클래스
            </summary>
        </member>
        <member name="M:OpenCvSharp.DisposableObject.#ctor">
            <summary>
            디폴트 constructor　 　
            </summary>
        </member>
        <member name="M:OpenCvSharp.DisposableObject.#ctor(System.Boolean)">
            <summary>
            해제의 참 거짓을 지정해 초기화
            </summary>
            <param name="isEnabledDispose">GC로 해제한다면 true</param>
        </member>
        <member name="M:OpenCvSharp.DisposableObject.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.DisposableObject.Finalize">
            <summary>
            /// Destructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.DisposableObject.AllocGCHandle(System.Object)">
            <summary>
            cvSetData로 할당하는 배열 데이터를 GCHandle로 고정되어야 한다
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:OpenCvSharp.DisposableObject.AllocMemory(System.Int32)">
            <summary>
            지정한 사이즈의 양의 메모리를 할당한다.
            Dispose시에 해제한다
            </summary>
            <param name="size">할당한 메모리</param>
        </member>
        <member name="M:OpenCvSharp.DisposableObject.NotifyMemoryPressure(System.Int64)">
            <summary>
            언매너지드 메모리를 확보한 메모 리사이즈를 통지한다.
            
            실제로 확보한다면 AllocMemory 쪽을 사용한다.
            확보는 cvCreateXXX가 할 경우는 여기를 사용한다
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:OpenCvSharp.DisposableObject.IsDisposed">
            <summary>
            자원의 해제가 끝난 상태인지 어떤지를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.DisposableObject.IsEnabledDispose">
            <summary>
            GC에 의한 자동적인 해제를 실시할지를 취득·설정한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.DisposableObject.DataHandle">
            <summary>
            cvSetData로 할당한 GCHandle
            </summary>
        </member>
        <member name="P:OpenCvSharp.DisposableObject.AllocatedMemory">
            <summary>
            cvCreateXXX 라고 하는 함수가 없게 자기 부담으로 구조체분의 메모리를 확보하는 경우,
            그 주소를 넣어 두는 장소
            </summary>
        </member>
        <member name="P:OpenCvSharp.DisposableObject.AllocatedMemorySize">
            <summary>
            AllocatedMemory에 확보되고 있는 메모리의 사이즈
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvTrackbar.#ctor(System.String,System.String)">
            <summary>
            초기화(눈금은0~100, 콜백 없음)
            </summary>
            <param name="name">트랙바의 이름</param>
            <param name="window">트랙바의 부모 윈도우</param>
        </member>
        <member name="M:OpenCvSharp.CvTrackbar.#ctor(System.String,System.String,OpenCvSharp.CvTrackbarCallback)">
            <summary>
            초기화(눈금은0~100)
            </summary>
            <param name="name">트랙바의 이름</param>
            <param name="window">트랙바의 부모 윈도우명</param>
            <param name="callback">슬라이더의 위치가 변경될 때마다 불려 가는 Delegate</param>
        </member>
        <member name="M:OpenCvSharp.CvTrackbar.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            초기화 (콜백 없음)
            </summary>
            <param name="name">트랙바의 이름</param>
            <param name="window">트랙바의 부모윈도우명</param>
            <param name="value">슬라이더의 초기 위치</param>
            <param name="max">슬라이더의 최대치.최소치는 항상 0.</param>
        </member>
        <member name="M:OpenCvSharp.CvTrackbar.#ctor(System.String,System.String,System.Int32,System.Int32,OpenCvSharp.CvTrackbarCallback)">
            <summary>
            초기화
            </summary>
            <param name="name">트랙바의 이름</param>
            <param name="window">트랙바의 부모 윈도우명</param>
            <param name="value">슬라이더의 초기 위치</param>
            <param name="max">슬라이더의 최대치.최소치는 항상 0.</param>
            <param name="callback">슬라이더의 위치가 변경될 때마다 불려 가는 Delegate</param>
        </member>
        <member name="M:OpenCvSharp.CvTrackbar.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTrackbar.TrackbarName">
            <summary>
            트럭 바의 이름을 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTrackbar.WindowName">
            <summary>
            부모 윈도우의 이름을 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTrackbar.Pos">
            <summary>
            트랙바의 현재의 값을 취득·설정한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTrackbar.Max">
            <summary>
            트랙바의 눈금의 최대치를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTrackbar.Callback">
            <summary>
            슬라이더가 움직였을 때의 콜백 이벤트 Delegate를 취득한다
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvPoint2D32f">
            <summary>
            부동 소수점형(단정도) 좌표계에 의한 2 차원의 점
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint2D32f.SizeOf">
            <summary>
            sizeof(CvPoint2D32f)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint2D32f.X">
            <summary>
            x좌표
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint2D32f.Y">
            <summary>
            y좌표
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D32f.#ctor(System.Single,System.Single)">
            <summary>
            초기화
            </summary>
            <param name="x">x좌표</param>
            <param name="y">y좌표</param>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D32f.op_Implicit(OpenCvSharp.CvPoint2D32f)~System.Drawing.PointF">
            <summary>
            System.Drawing.PointF의 묵시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D32f.op_Implicit(System.Drawing.PointF)~OpenCvSharp.CvPoint2D32f">
            <summary>
            System.Drawing.PointF의 묵시적 캐스트
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D32f.op_Implicit(OpenCvSharp.CvPoint2D32f)~OpenCvSharp.CvPoint">
            <summary>
            CvPoint의 묵시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D32f.op_Explicit(OpenCvSharp.CvPoint)~OpenCvSharp.CvPoint2D32f">
            <summary>
            CvPoint의 명시적 캐스트
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D32f.Equals(OpenCvSharp.CvPoint2D32f)">
            <summary>
            지정한 CvPoint2D32f의 좌표와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D32f.op_Equality(OpenCvSharp.CvPoint2D32f,OpenCvSharp.CvPoint2D32f)">
            <summary>
            == 연산자의 overload.x,y좌표치가 동일하면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D32f.op_Inequality(OpenCvSharp.CvPoint2D32f,OpenCvSharp.CvPoint2D32f)">
            <summary>
            != 연산자의 overload.x,y좌표치가 동일하지 않으면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D32f.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D32f.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D32f.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.StereoBMPreset">
            <summary>
            미리 정의된, CreateStereoBMState의 파라미터의 ID.
            </summary>
        </member>
        <member name="F:OpenCvSharp.StereoBMPreset.Basic">
            <summary>
            [CV_STEREO_BM_BASIC]
            </summary>
        </member>
        <member name="F:OpenCvSharp.StereoBMPreset.FishEye">
            <summary>
            [CV_STEREO_BM_FISH_EYE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.StereoBMPreset.Narrow">
            <summary>
            [CV_STEREO_BM_NARROW]
            </summary>
        </member>
        <member name="T:OpenCvSharp.MulSpectrumsFlag">
            <summary>
            cvMulSpectrums의 변환 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.MulSpectrumsFlag.Rows">
            <summary>
            배열의 각 행을 개별의 스펙트럼으로서 취급한다.
            [CV_DXT_ROWS]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MulSpectrumsFlag.MulConj">
            <summary>
            곱셈 전에 2번째의 입력 배열의 공역을 계산한다.
            [CV_DXT_MUL_CONJ]
            </summary>
        </member>
        <member name="T:OpenCvSharp.FlipMode">
            <summary>
            배열의 반전 방법
            </summary>
        </member>
        <member name="F:OpenCvSharp.FlipMode.X">
            <summary>
            x축주위에서의 반전
            </summary>
        </member>
        <member name="F:OpenCvSharp.FlipMode.Y">
            <summary>
            y축주위에서의 반전
            </summary>
        </member>
        <member name="F:OpenCvSharp.FlipMode.XY">
            <summary>
            양축주위에서의 반전
            </summary>
        </member>
        <member name="T:OpenCvSharp.DCTFlag">
            <summary>
            cvDCT의 변환 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.DCTFlag.Forward">
            <summary>
            1 차원 또는 2 차원의 시퀸스 변환을 실시한다. 결과의 스캘링은 실시하지 않는다. 
            [CV_DXT_FORWARD]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DCTFlag.Inverse">
            <summary>
            1 차원 또는 2 차원의 역변환을 실시한다. 결과의 스캘링은 실시하지 않는다. 
            Forward 와 Inverse 는, 물론 동시에는 지정할 수 없다.
            [CV_DXT_INVERSE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DCTFlag.Rows">
            <summary>
            입력 배열의 각각의 행에 대해서 독립에, 순서 변환 혹은 역변환을 실시한다. 
            이 플래그는 복수의 벡터의 동시 변환을 허가한다,
            오버헤드(하나의 계산의 몇배도 커지기도 한다)를 줄이기 위해서나,
            3 차원 이상의 고차원에 대해서 변환을 실시하기 위해서 사용된다.
            [CV_DXT_ROWS]
            </summary>
        </member>
        <member name="T:OpenCvSharp.ContourRetrieval">
            <summary>
            윤곽의 추출 모드 
            </summary>
        </member>
        <member name="F:OpenCvSharp.ContourRetrieval.External">
            <summary>
            가장 외측의 윤곽만 추출 
            [CV_RETR_EXTERNAL]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ContourRetrieval.List">
            <summary>
            모든 윤곽을 추출해 리스트에 추가 
            [CV_RETR_LIST]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ContourRetrieval.CComp">
            <summary>
            모든 윤곽을 추출해 두 개의 레벨을 가지는 계층 구조를 구성한다. 1번째의 레벨은 연결 성분의 외측의 경계선 2번째의 레벨은 구멍(연결 성분의 안쪽에 존재한다)의 경계선 
            [CV_RETR_CCOMP]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ContourRetrieval.Tree">
            <summary>
            모든 윤곽을 추출해 분기한 윤곽을 완전하게 표현하는 계층 구조를 구성한다 
            [CV_RETR_TREE]
            </summary>
        </member>
        <member name="T:OpenCvSharp.BorderType">
            <summary>
            cvCopyMakeBorder로 지정하는 경계선의 타입
            </summary>
        </member>
        <member name="F:OpenCvSharp.BorderType.Constant">
            <summary>
            경계는 이 함수의 마지막 파라미터로서 건네받은 정수 value 로 채운다. 
            [IPL_BORDER_CONSTANT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.BorderType.Replicate">
            <summary>
            화상의 가장(most) 상/하의 행과 가장(most) 좌/우의 열(화상 영역의 제일 외측의 값)을 이용해 경계선을 생성한다.
            [IPL_BORDER_REPLICATE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.BorderType.Reflict">
            <summary>
            Not Supported 
            [IPL_BORDER_REFLECT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.BorderType.Wrap">
            <summary>
            Not Supported 
            [IPL_BORDER_WRAP]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSet">
            <summary>
            노드의 집합
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSeq">
            <summary>
            확장 가능한 요소의 시퀸스
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvTreeNode`1">
            <summary>
            트리 노드
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvArr">
            <summary>
            IplImage, CvMat등의 각종 배열 데이터의 기본 클래스. 실체는 void*
            </summary>
        </member>
        <member name="T:OpenCvSharp.DisposableCvObject">
            <summary>
            자원을 해제해야 할 OpenCV의 클래스에 계승시키는 기본 클래스
            </summary>
        </member>
        <member name="T:OpenCvSharp.ICvPtrHolder">
            <summary>
            OpenCV의 네이티브 데이터 포인터를 가지는 것을 나타내는 인터페이스
            </summary>
        </member>
        <member name="P:OpenCvSharp.ICvPtrHolder.CvPtr">
            <summary>
            Unmanaged OpenCV data pointer
            </summary>
        </member>
        <member name="F:OpenCvSharp.DisposableCvObject._ptr">
            <summary>
            Data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.DisposableCvObject.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.DisposableCvObject.#ctor(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.DisposableCvObject.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isEnabledDispose"></param>
        </member>
        <member name="M:OpenCvSharp.DisposableCvObject.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
            <param name="isEnabledDispose"></param>
        </member>
        <member name="P:OpenCvSharp.DisposableCvObject.CvPtr">
            <summary>
            OpenCV의 구조체에의 네이티브 포인터
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.AbsDiff(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 차이의 절대치를 계산한다.
            dst(I) = abs(src1(I) - src2(I)).
            </summary>
            <param name="src2">2번째의 입력 화상</param>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Abs(OpenCvSharp.CvArr)">
            <summary>
            배열의 요소의 절대치를 계산한다. 
            dst(I) = abs(src(I)).
            모든 배열은 같은 타입 같은 사이즈(또는 같은 ROI 사이즈)이여야 한다.
            </summary>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AbsDiffS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar)">
            <summary>
            배열의 요소와 정수와의 차이의 절대치를 계산한다. 
            dst(I) = abs(src(I) - value).
            </summary>
            <param name="dst">출력 화상</param>
            <param name="value">스칼라</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Acc(OpenCvSharp.CvArr)">
            <summary>
            누산기에 프레임을 가산한다
            </summary>
            <param name="sum">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Acc(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            누산기에 프레임을 가산한다
            </summary>
            <param name="sum">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형.</param>
            <param name="mask">옵션의 처리 마스크.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AdaptiveThreshold(OpenCvSharp.CvArr,System.Double)">
            <summary>
            AdaptiveThreshold 실시해, 그레이 스케일 화상을 2진 화상으로 변환한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="max_value">threshold_type 가 Binary 혹은 BinaryInv 때에 이용하는 최대치</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AdaptiveThreshold(OpenCvSharp.CvArr,System.Double,OpenCvSharp.AdaptiveThresholdType)">
            <summary>
            AdaptiveThreshold 실시해, 그레이 스케일 화상을 2진 화상으로 변환한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="max_value">threshold_type이 Binary 혹은 BinaryInv 때에 이용하는 최대치</param>
            <param name="adaptive_method">AdaptiveThreshold에 사용하는 알고리즘</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AdaptiveThreshold(OpenCvSharp.CvArr,System.Double,OpenCvSharp.AdaptiveThresholdType,OpenCvSharp.ThresholdType)">
            <summary>
            AdaptiveThreshold를 실시해, 그레이 스케일 화상을 2진 화상으로 변환한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="max_value">threshold_type 가 Binary 혹은 BinaryInv 때에 이용하는 최대치</param>
            <param name="adaptive_method">AdaptiveThreshold에 사용하는 알고리즘</param>
            <param name="threshold_type">AdaptiveThreshold 처리의 종류. Binary나 BinaryInv의 어느 쪽인지</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AdaptiveThreshold(OpenCvSharp.CvArr,System.Double,OpenCvSharp.AdaptiveThresholdType,OpenCvSharp.ThresholdType,System.Int32)">
            <summary>
            AdaptiveThreshold를 실시해, 그레이 스케일 화상을 2진 화상으로 변환한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="max_value">threshold_type 가 Binary 혹은 BinaryInv 때에 이용하는 최대치</param>
            <param name="adaptive_method">AdaptiveThreshold로 사용하는 알고리즘</param>
            <param name="threshold_type">AdaptiveThreshold 처리의 종류. Binary나 BinaryInv의 어느 쪽인지</param>
            <param name="block_size">픽셀의 AdaptiveThreshold을 계산하기 위해서 이용하는 인접 영역의 사이즈： 3, 5, 7, ... </param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AdaptiveThreshold(OpenCvSharp.CvArr,System.Double,OpenCvSharp.AdaptiveThresholdType,OpenCvSharp.ThresholdType,System.Int32,System.Double)">
            <summary>
            AdaptiveThreshold를 실시해, 그레이 스케일 화상을 2진 화상으로 변환한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="max_value">threshold_type 가 Binary 혹은 BinaryInv 때에 이용하는 최대치</param>
            <param name="adaptive_method">AdaptiveThreshold로 사용하는 알고리즘</param>
            <param name="threshold_type">AdaptiveThreshold 처리의 종류. Binary나 BinaryInv의 어느 쪽인지</param>
            <param name="block_size">픽셀의 AdaptiveThreshold 계산하기 위해서 이용하는 인접 영역의 사이즈： 3, 5, 7, ... </param>
            <param name="param1">각 알고리듬에 대응하는 파라미터. 적응 알고리즘이 MeanC 및 GaussianC의 경우는, 평균치 또는 중량감  평균치로부터 당기는 정수. 0의 값의 경우도 있다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Add(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열을 요소 마다 가산한다. 
            dst(I) =src1(I) +src2(I)
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Add(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열을 요소 마다 가산한다. 
            dst(I) =src1(I) +src2(I) [mask(I)!=0의 경우]
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크. 8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다). </param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AddS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            입력 배열 src1 의 모든 요소에 스칼라 value 를 더해 결과를 dst 에 보존한다.
            dst(I) =src(I) +value
            </summary>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AddS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            입력 배열 src1 의 모든 요소에 스칼라 value 를 더해 결과를 dst 에 보존한다.
            dst(I) =src(I) +value [mask(I)!=0 의 경우]
            </summary>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크. 8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AddWeighted(System.Double,OpenCvSharp.CvArr,System.Double,System.Double,OpenCvSharp.CvArr)">
            <summary>
            입력 배열 src1 의 모든 요소에 스칼라 value 를 더해 결과를 dst 에 보존한다.
            dst(I) = src1(I) *alpha + src2(I) *beta + gamma
            </summary>
            <param name="alpha">1번째의 배열 요소에의 중량감</param>
            <param name="src2">2번째의 입력 배열 스칼라</param>
            <param name="beta">2번째의 배열 요소에의 중량감</param>
            <param name="gamma">가산 결과에, 한층 더 더해지는 스칼라치</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.And(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 논리적(AND)을 계산한다. 
            dst(I) =src1(I) &amp;src2(I)
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.And(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 논리적(AND)을 계산한다. 
            dst(I) =src1(I) &amp;src2(I) [mask(I)!=0의 경우]
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크. 8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다). </param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AndS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 논리적(AND)을 계산한다. 
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) &amp;value
            </summary>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AndS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 논리적(AND)을 계산한다. 
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) &amp;value [mask(I)!=0의 경우]
            </summary>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>        
        </member>
        <member name="M:OpenCvSharp.CvArr.ArcLength">
            <summary>
            윤곽의 주위장 또는 곡선의 길이를 계산한다
            </summary>
            <returns>윤곽의 주위장 또는 곡선의 길이</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.ArcLength(OpenCvSharp.CvSlice)">
            <summary>
            윤곽의 주위장 또는 곡선의 길이를 계산한다
            </summary>
            <param name="slice">곡선의 시점과 종점.디폴트에서는 곡선의 모든 길이가 계산된다.</param>
            <returns>윤곽의 주위장 또는 곡선의 길이</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.ArcLength(OpenCvSharp.CvSlice,System.Int32)">
            <summary>
            윤곽의 주위장 또는 곡선의 길이를 계산한다
            </summary>
            <param name="slice">곡선의 시점과 종점.디폴트에서는 곡선의 모든 길이가 계산된다.</param>
            <param name="is_closed">폐곡선인지 어떤지를 나타낸다.다음의 3개 상태가 있다： 
            is_closed=0 - 곡선은 폐곡선으로서 다루어지지 않는다. 
            is_closed>0 - 곡선은 폐곡선으로서 다루어진다. 
            is_closed&lt;0 - 곡선이 시퀀스의 경우, ((CvSeq*) curve)->flags의 플래그 CV_SEQ_FLAG_CLOSED로부터 폐곡선인지 어떤지를 판별한다.그렇지 않은(곡선이 점의 배열(CvMat*)로 표현된다) 경우, 폐곡선으로서 다루어지지 않는다. 
            </param>
            <returns>윤곽의 주위장 또는 곡선의 길이</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.AvgSdv(OpenCvSharp.CvScalar@,OpenCvSharp.CvScalar@)">
            <summary>
            배열 요소의 평균과 표준 편차를 각 채널로 독립에 계산한다.
            </summary>
            <param name="mean">계산 결과의 평균치의 출력</param>
            <param name="std_dev">계산 결과의 표준 편차의 출력</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.AvgSdv(OpenCvSharp.CvScalar@,OpenCvSharp.CvScalar@,OpenCvSharp.CvArr)">
            <summary>
            배열 요소의 평균과 표준 편차를 각 채널로 독립에 계산한다.
            </summary>
            <param name="mean">계산 결과의 평균치의 출력</param>
            <param name="std_dev">계산 결과의 표준 편차의 출력</param>
            <param name="mask">옵션의 처리 마스크</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.BoundingRect">
            <summary>
            2 차원점렬을 포함 하는 정 사각형을 돌려준다.
            </summary>
            <returns>사각형</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.BoundingRect(System.Boolean)">
            <summary>
            2 차원점렬을 포함 하는 정 사각형을 돌려준다.
            </summary>
            <param name="update">갱신 플래그. 
            points가 CvContour 로, update=false의 경우： 포함 사각형은 계산되지 않고, 윤곽 헤더의 rect 필드로부터 읽힌다. 
            points가 CvContour 로, update=true의 경우： 포함 사각형은 계산되어 윤곽 헤더의 rect 필드에 써진다. 
            points가 CvSeq나 CvMat의 경우： update는 무시되고, 포함 사각형은 계산되어 돌려주어진다. </param>
            <returns>사각형</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Canny(OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            Canny 알고리즘을 사용하고, 입력 화상 image에 포함되어 있는 엣지를 검출해, 그것을 출력 화상 edges 에 보존하는 [aperture_size=3]. 
            threshold1 와 threshold2 의 쳐 작은 편이 엣지끼리를 접속하기 위해서 이용되어 큰 편이 강한 엣지의 초기 검출에 이용된다. 
            </summary>
            <param name="edges">이 함수에 의해서 얻을 수 있던 엣지 화상</param>
            <param name="threshold1">1번째의 스레스홀드</param>
            <param name="threshold2">2번째의 스레스홀드</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Canny(OpenCvSharp.CvArr,System.Double,System.Double,OpenCvSharp.ApertureSize)">
            <summary>
            Canny 알고리즘을 사용하고, 입력 화상 image에 포함되어 있는 엣지를 검출해, 그것을 출력 화상 edges 에 보존한다. 
            threshold1 와 threshold2 의 쳐 작은 편이 엣지끼리를 접속하기 위해서 이용되어 큰 편이 강한 엣지의 초기 검출에 이용된다. 
            </summary>
            <param name="edges">이 함수에 의해서 얻을 수 있던 엣지 화상</param>
            <param name="threshold1">1번째의 스레스홀드</param>
            <param name="threshold2">2번째의 스레스홀드</param>
            <param name="aperture_size">Sobel 연산자의 aperture_size</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CheckArr">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다 
            </summary>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.CheckArr(OpenCvSharp.CheckArrFlag)">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다 
            </summary>
            <param name="flags">처리 플래그</param>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.CheckArr(OpenCvSharp.CheckArrFlag,System.Double,System.Double)">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다
            </summary>
            <param name="flags">처리 플래그</param>
            <param name="min_val">유효한 치역의 하한치(이 값이상).CheckArrFlag.Range 가 세트 되고 있을 때 마샬 유효.</param>
            <param name="max_val">유효한 치역의 상한치(이 값미만).CheckArrFlag.Range 가 세트 되고 있을 때 마샬 유효.</param>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.CheckArray">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다. CheckArr의 앨리어스(alias).
            </summary>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.CheckArray(OpenCvSharp.CheckArrFlag)">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다. CheckArr의 앨리어스(alias). 
            </summary>
            <param name="flags">처리 플래그</param>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.CheckArray(OpenCvSharp.CheckArrFlag,System.Double,System.Double)">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다. CheckArr의 앨리어스(alias). 
            </summary>
            <param name="flags">처리 플래그</param>
            <param name="min_val">유효한 치역의 하한치(이 값이상).CheckArrFlag.Range 가 세트 되고 있을 때 마샬 유효.</param>
            <param name="max_val">유효한 치역의 상한치(이 값미만).CheckArrFlag.Range 가 세트 되고 있을 때 마샬 유효.</param>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.CheckContourConvexity">
            <summary>
            윤곽이 凸인지를 조사한다
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Circle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            원을 그린다
            </summary>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Circle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Circle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            원을 그린다
            </summary>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Circle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">중심 좌표와 반경의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Circle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            원을 그린다
            </summary>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Circle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Circle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            원을 그린다
            </summary>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Circle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">중심 좌표와 반경의 소수점 이하의 자리수를 나타내는 비트수.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawCircle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            원을 그린다
            </summary>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawCircle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawCircle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            원을 그린다
            </summary>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawCircle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">중심 좌표와 반경의 소수점 이하의 자리수를 나타내는 비트수.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawCircle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            원을 그린다
            </summary>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawCircle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawCircle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            원을 그린다
            </summary>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawCircle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">중심 좌표와 반경의 소수점 이하의 자리수를 나타내는 비트수.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ClearND(System.Int32[])">
            <summary>
            조밀한 배열과 희소 배열의 지정한 요소를 클리어(0에 세트) 한다. 요소가 존재하지 않으면, 이 함수는 아무것도 하지 않는다.
            </summary>
            <param name="idx">요소의 인덱스의 배열(가변장 인수)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Cmp(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.ArrComparison)">
            <summary>
            두 개의 배열의 각 요소마다의 비교를 실시한다. 대응하는 요소를 비교해, 출력 배열의 값에 세트 한다.
            dst(I) = src1(I) op src2(I) .
            비교 결과가 참(true)이면 dst(I)에는 0 xff(요소 모든 비트가 1 )를 세트 해, 그 이외의 경우(FALSE)이면 0 을 세트 한다.
            </summary>
            <param name="src2">2번째의 입력 배열.어느 쪽의 입력 배열도 싱글 채널이 아니면 안된다.</param>
            <param name="dst">출력 배열(타입은 8u 나 8s 가 아니면 안 된다)</param>
            <param name="cmp_op">비교 방법을 나타내는 플래그</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CmpS(System.Double,OpenCvSharp.CvArr,OpenCvSharp.ArrComparison)">
            <summary>
            배열 요소와 스칼라를 비교해, 출력 배열의 값을 세트 한다.
            dst(I) = src1(I) op scalar .
            비교 결과가 참(true)이면 dst(I)에는 0 xff(요소 모든 비트가 1 )를 세트 해, 그 이외의 경우(false)이면 0 을 세트 한다.
            </summary>
            <param name="value">각각의 배열 요소라고 비교되는 스칼라</param>
            <param name="dst">출력 배열(타입은 8u 나 8s 가 아니면 안 된다)</param>
            <param name="cmp_op">비교 방법을 나타내는 플래그</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ContourArea">
            <summary>
            윤곽 전체의 영역, 또는 윤곽의 일부를 계산한다. 
            후자의 경우, 윤곽의 호와 선택된 2점을 연결하는 현으로 단락지어진 에리어 전체가 계산된다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.ContourArea(OpenCvSharp.CvSlice)">
            <summary>
            윤곽 전체의 영역, 또는 윤곽의 일부를 계산한다. 
            후자의 경우, 윤곽의 호와 선택된 2점을 연결하는 현으로 단락지어진 에리어 전체가 계산된다.
            </summary>
            <param name="slice">주목 영역의 윤곽의 시점과 종점.디폴트에서는 전영역이 계산된다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.ContourPerimeter">
            <summary>
            cvArcLength(curve,Whole_Seq,1) 의 앨리어스(alias)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvertScale(OpenCvSharp.CvArr)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[scale=1, shift=0]
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvertScale(OpenCvSharp.CvArr,System.Double)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[shift=0]
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">스케일링 계수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvertScale(OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            任임의의 선형 변환에 의해서 배열의 값을 변환한다.
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">스케일링 계수</param>
            <param name="shift">스케일링 한 입력 배열의 요소에 가세하는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CvtScale(OpenCvSharp.CvArr)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[scale=1, shift=0]
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CvtScale(OpenCvSharp.CvArr,System.Double)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[shift=0]
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">스케일링 계수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CvtScale(OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">스케일링 계수</param>
            <param name="shift">스케일링 한 입력 배열의 요소에 가세하는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Scale(OpenCvSharp.CvArr)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[scale=1, shift=0]
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Scale(OpenCvSharp.CvArr,System.Double)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[shift=0]
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">스케일링 계수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Scale(OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">스케일링 계수</param>
            <param name="shift">스케일링 한 입력 배열의 요소에 가세하는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Convert(OpenCvSharp.CvArr)">
            <summary>
            scale=1, shift=0 로의 cvConvertScale 호출. 임의의 선형 변환에 의해서 배열의 값을 변환한다.
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvertScaleAbs(OpenCvSharp.CvArr)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없는 정수형의 배열로 변환한다.[scale=1, shift=0]
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvertScaleAbs(OpenCvSharp.CvArr,System.Double)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없는 정수형의 배열로 변환한다.[shift=0]
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">ScaleAbs 계수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvertScaleAbs(OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없는 정수형의 배열로 변환한다.
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">ScaleAbs 계수</param>
            <param name="shift">스케일링 한 입력 배열의 요소에 가세하는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CvtScaleAbs(OpenCvSharp.CvArr)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없는 정수형의 배열로 변환한다.[scale=1, shift=0]
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CvtScaleAbs(OpenCvSharp.CvArr,System.Double)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없는 정수형의 배열로 변환한다.[shift=0]
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">ScaleAbs 계수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CvtScaleAbs(OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없는 정수형의 배열로 변환한다.
            </summary>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">ScaleAbs 계수</param>
            <param name="shift">스케일링 한 입력 배열의 요소에 가세하는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvexHull2(OpenCvSharp.CvMat)">
            <summary>
            Sklansky의 알고리즘을 사용해 2 차원의 점렬의 볼록 다각형을 찾아낸다
            </summary>
            <param name="hull_storage">볼록 다각형을 보관하는 출력 배열. 1 차원이 아니면 안되어, 입력한 배열/순서와 같은 요소수를 가지지 않으면 안 된다.출력시로 헤더가 변경되는：행과 열의 수가, 볼록 다각형의 사이즈까지 절약할 수 있다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvexHull2(OpenCvSharp.CvMat,OpenCvSharp.ConvexHullOrientation)">
            <summary>
            Sklansky의 알고리즘을 사용해 2 차원의 점렬의 볼록 다각형을 찾아낸다
            </summary>
            <param name="hull_storage">볼록 다각형을 보관하는 출력 배열. 1 차원이 아니면 안되어, 입력한 배열/순서와 같은 요소수를 가지지 않으면 안 된다.출력시로 헤더가 변경되는：행과 열의 수가, 볼록 다각형의 사이즈까지 절약할 수 있다.</param>
            <param name="orientation">볼록 다각형을 구성하는 데이터의 줄.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvexHull2(OpenCvSharp.CvMat,OpenCvSharp.ConvexHullOrientation,System.Boolean)">
            <summary>
            Sklansky의 알고리즘을 사용해 2 차원의 점렬의 볼록 다각형을 찾아낸다
            </summary>
            <param name="hull_storage">볼록 다각형을 보관하는 출력 배열. 1 차원이 아니면 안되어, 입력한 배열/순서와 같은 요소수를 가지지 않으면 안 된다.출력시로 헤더가 변경되는：행과 열의 수가, 볼록 다각형의 사이즈까지 절약할 수 있다.</param>
            <param name="orientation">볼록 다각형을 구성하는 데이터의 줄.</param>
            <param name="return_points">이 파라미터가 false로, hull_storage가 배열의 경우에는 인덱스가, 메모리스트레이지의 경우에는 포인터가 출력 배열에 보관된다.true의 경우, 볼록 다각형을 나타내는 점의 집합 자신이 보관된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvexHull2">
            <summary>
            Sklansky의 알고리즘을 사용해 2 차원의 점렬의 볼록 다각형을 찾아낸다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvexHull2(OpenCvSharp.CvMemStorage)">
            <summary>
            Sklansky의 알고리즘을 사용해 2 차원의 점렬의 볼록 다각형을 찾아낸다
            </summary>
            <param name="hull_storage">볼록 다각형을 보관하는 메모리 스토레이지.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvexHull2(OpenCvSharp.CvMemStorage,OpenCvSharp.ConvexHullOrientation)">
            <summary>
            Sklansky의 알고리즘을 사용해 2 차원의 점렬의 볼록 다각형을 찾아낸다
            </summary>
            <param name="hull_storage">볼록 다각형을 보관하는 메모리 스토레이지.</param>
            <param name="orientation">볼록 다각형을 구성하는 데이터의 줄.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvexHull2(OpenCvSharp.CvMemStorage,OpenCvSharp.ConvexHullOrientation,System.Boolean)">
            <summary>
            Sklansky의 알고리즘을 사용해 2 차원의 점렬의 볼록 다각형을 찾아낸다
            </summary>
            <param name="hull_storage">볼록 다각형을 보관하는 메모리 스토레이지.</param>
            <param name="orientation">볼록 다각형을 구성하는 데이터의 줄.</param>
            <param name="return_points">이 파라미터가 false로, hull_storage가 배열의 경우에는 인덱스가, 메모리스트레이지의 경우에는 포인터가 출력 배열에 보관된다.true의 경우, 볼록 다각형을 나타내는 점의 집합 자신이 보관된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvexityDefects(OpenCvSharp.CvArr)">
            <summary>
            윤곽의 볼록 다각형으부터 오목한 상태 결손을 찾아낸다
            </summary>
            <param name="convexhull">볼록 다각형의 점 그 자체가 아니고, 윤곽의 점의 포인터 또는 인덱스를 가진다, 즉 cvConvexHull2의 return_points 파라미터가 0인 cvConvexHull2 를 사용해 얻을 수 있던 볼록 다각형.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ConvexityDefects(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage)">
            <summary>
            윤곽의 철포로부터 오목한 상태 결손을 찾아낸다
            </summary>
            <param name="convexhull">볼록 다각형의 점그 자체가 아니고, 윤곽의 점에의 포인터 또는 인덱스를 가진다, 즉 cvConvexHull2의 return_points 파라미터가 0인 cvConvexHull2 를 사용해 얻을 수 있던 볼록 다각형.</param>
            <param name="storage">오목한 상태 결손의 출력 순서를 보관하는 변수.이것이 null인 경우, 대신에, 윤곽 혹은 볼록 다각형의 스토리지가(이 차례로) 이용된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Copy(OpenCvSharp.CvArr)">
            <summary>
            하나의 배열을 다른 배열에 카피한다.
            </summary>
            <param name="dst">카피처의 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Copy(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            하나의 배열을 다른 배열에 카피한다.
            </summary>
            <param name="dst">카피처의 화상</param>
            <param name="mask">8 비트 싱글 채널 배열의 처리 마스크. 카피처의 배열의 변경하는 요소를 지정한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CopyMakeBorder(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.BorderType)">
            <summary>
            화상을 카피해, 그 주위에 경계선을 붙인다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="offset">입력 화상(혹은 ROI)이 카피되는 출력 화상내 사각형 영역의 좌상 원점 (좌하에 원점을 가지는 화상의 경우는, 좌하 원점).</param>
            <param name="bordertype">카피된 사각형 영역의 주위에 생성하는 경계선의 타입</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CopyMakeBorder(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.BorderType,OpenCvSharp.CvScalar)">
            <summary>
            화상을 카피해, 그 주위에 경계선을 붙인다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="offset">입력 화상(혹은 ROI)이 카피되는 출력 화상내 사각형 영역의 좌상 원점 (좌하에 원점을 가지는 화상의 경우는, 좌하 원점).</param>
            <param name="bordertype">카피된 사각형 영역의 주위에 생성하는 경계선의 타입</param>
            <param name="value">bordertype=Constant 의 경우는 경계를 묻는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CornerEigenValsAndVecs(OpenCvSharp.CvArr,System.Int32)">
            <summary>
            코너 검출을 위해서 화상 블록의 고유치와 고유 벡터를 계산한다.
            </summary>
            <param name="eigenvv">결과 보존용의 화상.입력 화상의 6배의 사이즈가 필요.</param>
            <param name="block_size">인접 블록의 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CornerEigenValsAndVecs(OpenCvSharp.CvArr,System.Int32,OpenCvSharp.ApertureSize)">
            <summary>
            코너 검출을 위해서 화상 블록의 고유치와 고유 벡터를 계산한다.
            </summary>
            <param name="eigenvv">결과 보존용의 화상.입력 화상의 6배의 사이즈가 필요.</param>
            <param name="block_size">인접 블록의 사이즈</param>
            <param name="aperture_size">Sobel 연산자의 아파체사이즈(cvSobel 참조).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CornerHarris(OpenCvSharp.CvArr,System.Int32)">
            <summary>
            입력 화상에 대해 Harris 엣지 검출을 실시한다. 
            cvCornerMinEigenVal 이나 cvCornerEigenValsAndVecs와 같은 기능을 가져, 각각의 픽셀에 대하고,
            block_size×block_size 인접에 있어서의 2×2 사이즈의 구배로부터 공변동 행렬 M 를 계산한다.그 후, 
            det(M) - k * trace(M)^2
            를 계산해, 검출 결과적으로 출력 화상에 보존한다.결과 화상의 극대치를 요구하는 것으로, 화상의 코너를 검출할 수 있다. 
            </summary>
            <param name="harris_responce">검출 결과를 보존하는 화상.입력 화상 image 와 같은 사이즈가 아니면 안 된다.</param>
            <param name="block_size">인접 블록의 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CornerHarris(OpenCvSharp.CvArr,System.Int32,OpenCvSharp.ApertureSize)">
            <summary>
            입력 화상에 대해 Harris 엣지 검출을 실시한다. 
            cvCornerMinEigenVal 이나 cvCornerEigenValsAndVecs와 같은 기능을 가져, 각각의 픽셀에 대하고,
            block_size×block_size 인접에 있어서의 2×2 사이즈의 구배로부터 공변동 행렬 M 를 계산한다.그 후, 
            det(M) - k * trace(M)^2
            를 계산해, 검출 결과적으로 출력 화상에 보존한다.결과 화상의 극대치를 요구하는 것으로, 화상의 코너를 검출할 수 있다. 
            </summary>
            <param name="harris_responce">검출 결과를 보존하는 화상.입력 화상 image 와 같은 사이즈가 아니면 안 된다.</param>
            <param name="block_size">인접 블록의 사이즈</param>
            <param name="aperture_size">Sobel 연산자의 아파체사이즈(cvSobel 참조).입력 화상이 부동 소수점형인 경우, 이 파라미터는 차분을 계산하기 위해서 이용되는 고정 소수점형 필터의 수를 나타낸다</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CornerHarris(OpenCvSharp.CvArr,System.Int32,OpenCvSharp.ApertureSize,System.Double)">
            <summary>
            입력 화상에 대해 Harris 엣지 검출을 실시한다. 
            cvCornerMinEigenVal 이나 cvCornerEigenValsAndVecs와 같은 기능을 가져, 각각의 픽셀에 대하고,
            block_size×block_size 인접에 있어서의 2×2 사이즈의 구배로부터 공변동 행렬 M 를 계산한다.그 후, 
            det(M) - k * trace(M)^2
            를 계산해, 검출 결과적으로 출력 화상에 보존한다.결과 화상의 극대치를 요구하는 것으로, 화상의 코너를 검출할 수 있다. 
            </summary>
            <param name="harris_responce">검출 결과를 보존하는 화상.입력 화상 image 와 같은 사이즈가 아니면 안 된다.</param>
            <param name="block_size">인접 블록의 사이즈</param>
            <param name="aperture_size">Sobel 연산자의 아파체사이즈(cvSobel 참조).입력 화상이 부동 소수점형인 경우, 이 파라미터는 차분을 계산하기 위해서 이용되는 고정 소수점형 필터의 수를 나타낸다</param>
            <param name="k">Harris 검출기의 파라미터</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CornerMinEigenVal(OpenCvSharp.CvArr,System.Int32)">
            <summary>
            코너 검출을 위해서, 화상 블록의 최소 고유치를 계산한다. 
            모든 픽셀에 대해서, 인접 블록에 있어서의 도함수의 공변동 행렬의 최소 고유치만을 요구하는 함수이다.
            </summary>
            <param name="eigenval">최소 고유치를 보존하는 화상.image 와 같은 사이즈가 아니면 안 된다.</param>
            <param name="block_size">인접 블록의 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CornerMinEigenVal(OpenCvSharp.CvArr,System.Int32,OpenCvSharp.ApertureSize)">
            <summary>
            코너 검출을 위해서, 화상 블록의 최소 고유치를 계산한다. 
            모든 픽셀에 대해서, 인접 블록에 있어서의 도함수의 공변동 행렬의 최소 고유치만을 요구하는 함수이다.
            </summary>
            <param name="eigenval">최소 고유치를 보존하는 화상.image 와 같은 사이즈가 아니면 안 된다.</param>
            <param name="block_size">인접 블록의 사이즈</param>
            <param name="aperture_size">Sobel 연산자의 아파체사이즈(cvSobel 참조).입력 화상이 부동 소수점형인 경우, 이 파라미터는 차분을 계산하기 위해서 이용되는 고정 소수점형 필터의 수를 나타낸다</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CountNonZero">
            <summary>
            배열 요소에 대해 0 이 아닌 요소를 카운트 한다.
            배열이 IplImage 의 경우, ROI, COI 의 양쪽 모두에 대응하고 있다.
            </summary>
            <returns>0 이 아닌 요소수</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.CreateData">
            <summary>
            화상, 행렬 혹은 다차원 배열의 데이터를 확보한다.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.CrossProduct(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 3 차원 벡터의 외적을 계산한다.
            dst = src1 × src2,  (dst1 = src12src23 - src13src22 , dst2 = src13src21 - src11src23 , dst3 = src11src22 - src12src21).
            </summary>
            <param name="src2">2번째의 입력 벡터</param>
            <param name="dst">출력 벡터</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CvtColor(OpenCvSharp.CvArr,OpenCvSharp.ColorConversion)">
            <summary>
            입력 화상의 색공간(color space)를 변환한다
            </summary>
            <param name="dst">출력 화상. 입력 화상과 같은 데이터 타입. 채널수는 다르기도 한다.</param>
            <param name="code">색공간(color space)의 변환의 방법</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DCT(OpenCvSharp.CvArr,OpenCvSharp.DCTFlag)">
            <summary>
            차원 혹은 2 차원 부동 소수점형 배열의 시퀀스 방향·역방향 이산 코사인 변환을 실시한다
            </summary>
            <param name="dst">입력과 같은 사이즈·타입의 출력 배열</param>
            <param name="flags">변환 플래그</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DecRefData">
            <summary>
            reference counter의 포인터가 null이 아닌 경우에 CvMat 혹은 CvMatND 의 데이터의 reference counter를 감소 해, 한층 더 카운터가 0 이 되었을 경우에는 데이터를 해제한다.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.Det">
            <summary>
            행렬식을 돌려준다
            </summary>
            <returns>행렬식</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.DFT(OpenCvSharp.CvArr,OpenCvSharp.DFTFlag)">
            <summary>
            1 차원 혹은 2 차원 부동 소수점형 배열에 대해서 이산 푸리에 변환(DFT), 역이산 푸리에 변환(IDFT)을 실시한다.
            </summary>
            <param name="dst">입력 배열과 같은 사이즈·타입의 출력 배열</param>
            <param name="flags">변환 플래그</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DFT(OpenCvSharp.CvArr,OpenCvSharp.DFTFlag,System.Int32)">
            <summary>
            1 차원 혹은 2 차원 부동 소수점형 배열에 대해서 이산 푸리에 변환(DFT), 역이산 푸리에 변환(IDFT)을 실시한다.
            </summary>
            <param name="dst">입력 배열과 같은 사이즈·타입의 출력 배열</param>
            <param name="flags">변환 플래그</param>
            <param name="nonzero_rows">입력 배열의 0이아닌 행의 수(2 차원순서 변환의 경우), 혹은 출력 배열로 주목하는 행의 수(2 차원역변환의 경우).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FFT(OpenCvSharp.CvArr,OpenCvSharp.DFTFlag)">
            <summary>
            1 차원 혹은 2 차원 부동 소수점형 배열에 대해서 이산 푸리에 변환(DFT), 역이산 푸리에 변환(IDFT)을 실시한다. cvDFT의 앨리어스(alias).
            </summary>
            <param name="dst">입력 배열과 같은 사이즈·타입의 출력 배열</param>
            <param name="flags">변환 플래그</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FFT(OpenCvSharp.CvArr,OpenCvSharp.DFTFlag,System.Int32)">
            <summary>
            1 차원 혹은 2 차원 부동 소수점형 배열에 대해서 이산 푸리에 변환(DFT), 역이산 푸리에 변환(IDFT)을 실시한다.cvDFT의 앨리어스(alias).
            </summary>
            <param name="dst">입력 배열과 같은 사이즈·타입의 출력 배열</param>
            <param name="flags">변환 플래그</param>
            <param name="nonzero_rows">입력 배열의 0이 아닌 행의 수(2 차원순서 변환의 경우), 혹은 출력 배열로 주목하는 행의 수(2 차원역변환의 경우).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Dilate(OpenCvSharp.CvArr)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 팽창한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.팽창은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Dilate(OpenCvSharp.CvArr,OpenCvSharp.IplConvKernel)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 팽창한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.팽창은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="dst">출력 화상</param>
            <param name="element">팽창에 이용하는 구조 요소.null의 경우는, 3×3 의 사각형 형상의 구조 요소를 이용한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Dilate(OpenCvSharp.CvArr,OpenCvSharp.IplConvKernel,System.Int32)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 팽창한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.팽창은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="dst">출력 화상</param>
            <param name="element">팽창에 이용하는 구조 요소.null의 경우는, 3×3 의 사각형 형상의 구조 요소를 이용한다.</param>
            <param name="iterations">팽창의 회수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DistTransform(OpenCvSharp.CvArr)">
            <summary>
            입력 화상중의 값이 0이 아닌 픽셀로부터 가장 가까운 값이 0의 피크셀까지의 거리를 계산한다
            </summary>
            <param name="dst">거리계산결과를 픽셀치로서 가지는 출력 화상 (32비트 부동 소수점형, 싱글 채널)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DistTransform(OpenCvSharp.CvArr,OpenCvSharp.DistanceType)">
            <summary>
            입력 화상중의 값이 0이 아닌 픽셀로부터 가장 가까운 값이 0의 피크셀까지의 거리를 계산한다
            </summary>
            <param name="dst">거리계산결과를 픽셀치로서 가지는 출력 화상 (32비트 부동 소수점형, 싱글 채널)</param>
            <param name="distance_type">거리의 종류.L1, L2, C 나 User</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DistTransform(OpenCvSharp.CvArr,OpenCvSharp.DistanceType,System.Int32)">
            <summary>
            입력 화상중의 값이 0이 아닌 픽셀로부터 가장 가까운 값이 0의 피크셀까지의 거리를 계산한다
            </summary>
            <param name="dst">거리계산결과를 픽셀치로서 가지는 출력 화상 (32비트 부동 소수점형, 싱글 채널)</param>
            <param name="distance_type">거리의 종류.L1, L2, C 나 User</param>
            <param name="mask_size">거리 변환 마스크의 사이즈로, 3, 5, 0 의 언젠가. L1, C 의 경우, 이 파라미터치는 3에 고정된다.mask_size==0의 경우, 거리계산에 다른 근사 없음 알고리즘이 이용된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DistTransform(OpenCvSharp.CvArr,OpenCvSharp.DistanceType,System.Int32,System.Single[])">
            <summary>
            입력 화상중의 값이 0이 아닌 픽셀로부터 가장 가까운 값이 0의 피크셀까지의 거리를 계산한다
            </summary>
            <param name="dst">거리계산결과를 픽셀치로서 가지는 출력 화상 (32비트 부동 소수점형, 싱글 채널)</param>
            <param name="distance_type">거리의 종류.L1, L2, C 나 User</param>
            <param name="mask_size">거리 변환 마스크의 사이즈로, 3, 5, 0 의 언젠가. L1, C 의 경우, 이 파라미터치는 3에 고정된다.mask_size==0의 경우, 거리계산에 다른 근사 없음 알고리즘이 이용된다.</param>
            <param name="mask">유저 정의의 거리의 경우는 유저 정의의 마스크.3×3의 마스크를 이용하는 경우는 2개의 값(상하 시프트치, 기울기 시프트치)을 지정, 5×5의 마스크를 이용하는 경우는 3개의 값(상하 시프트치, 기울기 시프트치, 나이트 이동 시프트치(체스 기사))를 지정한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DistTransform(OpenCvSharp.CvArr,OpenCvSharp.DistanceType,System.Int32,System.Single[],OpenCvSharp.CvArr)">
            <summary>
            입력 화상중의 값이 0이 아닌 픽셀로부터 가장 가까운 값이 0의 피크셀까지의 거리를 계산한다
            </summary>
            <param name="dst">거리계산결과를 픽셀치로서 가지는 출력 화상 (32비트 부동 소수점형, 싱글 채널)</param>
            <param name="distance_type">거리의 종류.L1, L2, C 나 User</param>
            <param name="mask_size">거리 변환 마스크의 사이즈로, 3, 5, 0 의 언젠가. L1, C 의 경우, 이 파라미터치는 3에 고정된다.mask_size==0의 경우, 거리계산에 다른 근사 없음 알고리즘이 이용된다.</param>
            <param name="mask">유저 정의의 거리의 경우는 유저 정의의 마스크.3×3의 마스크를 이용하는 경우는 2개의 값(상하 시프트치, 기울기 시프트치)을 지정, 5×5의 마스크를 이용하는 경우는 3개의 값(상하 시프트치, 기울기 시프트치, 나이트 이동 시프트치(체스 기사))를 지정한다.</param>
            <param name="labels">옵션 출력.정수 라벨에 변환된 2 차원 배열로, src , dst와 같은 사이즈.현재는 mask_size==3 혹은 5 때에만 사용된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Div(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소끼리를 제산한다 (scale=1).
            dst(I) =scale*src1(I) /src2(I) [src1!=null의 경우],  
            dst(I) =scale/src2(I) [src1=null의 경우]
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Div(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            두 개의 배열의 요소끼리를 제산한다.
            dst(I) =scale*src1(I) /src2(I) [src1!=null의 경우],  
            dst(I) =scale/src2(I) [src1=null의 경우]
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="scale">임의의 스케일링 계수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawChessboardCorners(OpenCvSharp.CvSize,OpenCvSharp.CvPoint2D32f[],System.Boolean)">
            <summary>
            체스 보드로부터 코너가 완전하게 검출되어 있지 않은 경우(pattern_was_found=false)는, 검출된 코너 각각 적색의 원을 그린다.
            또 완전하게 검출되고 있는 경우(pattern_was_found=true)는, 물이 들 수 있는 된 각 코너를 선분으로 접속해 표시한다. 
            </summary>
            <param name="pattern_size">체스 보드의 각 행과 각 렬의 내부 코너의 수.</param>
            <param name="corners">검출된 코너의 배열.</param>
            <param name="pattern_was_found">체스 보드로부터 코너가 완전하게 발견되었는지(true) 그렇지 않은(false)인지를 나타낸다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawContours(OpenCvSharp.CvSeq{OpenCvSharp.CvPoint},OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            화상의 외측 윤곽선, 또는 안쪽 윤곽선을 그린다
            </summary>
            <param name="contour">최초의 윤곽에의 포인터</param>
            <param name="external_color">외측 윤곽선의 색</param>
            <param name="hole_color">안쪽 윤곽선(구멍)의 색</param>
            <param name="max_level">그리려는 윤곽의 최대 레벨. 0으로 했을 경우, contour만이 그려진다. 1으로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽이 그려진다. 2로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽과 선두의 윤곽의 하나하의 레벨의 모든 윤곽이 그려진다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawContours(OpenCvSharp.CvSeq{OpenCvSharp.CvPoint},OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,System.Int32,System.Int32)">
            <summary>
            화상의 외측 윤곽선, 또는 안쪽 윤곽선을 그린다
            </summary>
            <param name="contour">최초의 윤곽에의 포인터</param>
            <param name="external_color">외측 윤곽선의 색</param>
            <param name="hole_color">안쪽 윤곽선(구멍)의 색</param>
            <param name="max_level">그리려는 윤곽의 최대 레벨. 0으로 했을 경우, contour만이 그려진다. 1으로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽이 그려진다. 2로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽과 선두의 윤곽의 하나하의 레벨의 모든 윤곽이 그려진다.</param>
            <param name="thickness">그려지는 윤곽선의 굵기. 부(예를 들면 =Cv.FILLED)로 했을 경우에는, 내부를 전부 칠한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawContours(OpenCvSharp.CvSeq{OpenCvSharp.CvPoint},OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,System.Int32,System.Int32,OpenCvSharp.LineType)">
            <summary>
            화상의 외측 윤곽선, 또는 안쪽 윤곽선을 그린다
            </summary>
            <param name="contour">최초의 윤곽에의 포인터</param>
            <param name="external_color">외측 윤곽선의 색</param>
            <param name="hole_color">안쪽 윤곽선(구멍)의 색</param>
            <param name="max_level">그리려는 윤곽의 최대 레벨. 0으로 했을 경우, contour만이 그려진다. 1으로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽이 그려진다. 2로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽과 선두의 윤곽의 하나하의 레벨의 모든 윤곽이 그려진다.</param>
            <param name="thickness">그려지는 윤곽선의 굵기. 부(예를 들면 =Cv.FILLED)로 했을 경우에는, 내부를 전부 칠한다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawContours(OpenCvSharp.CvSeq{OpenCvSharp.CvPoint},OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,System.Int32,System.Int32,OpenCvSharp.LineType,OpenCvSharp.CvPoint)">
            <summary>
            화상의 외측 윤곽선, 또는 안쪽 윤곽선을 그린다
            </summary>
            <param name="contour">최초의 윤곽에의 포인터</param>
            <param name="external_color">외측 윤곽선의 색</param>
            <param name="hole_color">안쪽 윤곽선(구멍)의 색</param>
            <param name="max_level">그리려는 윤곽의 최대 레벨. 0으로 했을 경우, contour만이 그려진다. 1으로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽이 그려진다. 2로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽과 선두의 윤곽의 하나하의 레벨의 모든 윤곽이 그려진다.</param>
            <param name="thickness">그려지는 윤곽선의 굵기. 부(예를 들면 =Cv.FILLED)로 했을 경우에는, 내부를 전부 칠한다.</param>
            <param name="line_type">선의 종류</param>
            <param name="offset">모든 좌표를 지정한 값만 시프트 한다</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.EigenVV(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            대칭 행렬의 고유치와 고유 벡터를 계산한다
            </summary>
            <param name="evects">고유 벡터의 출력 행렬.연속한 행으로서 보존된다. </param>
            <param name="evals">고유치 벡터의 출력 벡터.내림차순에 보존된다(물론 고유치와 고유 벡터의 차례는 일치한다).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.EigenVV(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            대칭 행렬의 고유치와 고유 벡터를 계산한다
            </summary>
            <param name="evects">고유 벡터의 출력 행렬.연속한 행으로서 보존된다. </param>
            <param name="evals">고유치 벡터의 출력 벡터.내림차순에 보존된다(물론 고유치와 고유 벡터의 차례는 일치한다).</param>
            <param name="eps">대각화의 정도(일반적으로, DBL_EPSILON=10^-15 로 충분하다)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Ellipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다
            </summary>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 시작 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Ellipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다
            </summary>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 시작 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Ellipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다
            </summary>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 시작 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
            <param name="line_type">타원호의 선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Ellipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다
            </summary>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 시작 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
            <param name="line_type">타원호의 선의 종류</param>
            <param name="shift">중심 좌표와 축의 길이의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawEllipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다
            </summary>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 시작 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawEllipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다
            </summary>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 시작 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawEllipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다
            </summary>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 시작 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
            <param name="line_type">타원호의 선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawEllipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다
            </summary>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 시작 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
            <param name="line_type">타원호의 선의 종류</param>
            <param name="shift">중심 좌표와 축의 길이의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.EllipseBox(OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar)">
            <summary>
            테두리만의 타원, 혹은 전부 칠해진 타원을 그린다
            </summary>
            <param name="box">그리고 싶은 타원을 둘러싸는 사각형 영역.</param>
            <param name="color">타원의 색.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.EllipseBox(OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            테두리만의 타원, 혹은 전부 칠해진 타원을 그린다
            </summary>
            <param name="box">그리고 싶은 타원을 둘러싸는 사각형 영역.</param>
            <param name="color">타원의 색.</param>
            <param name="thickness">타원 경계선의 폭.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.EllipseBox(OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만의 타원, 혹은 전부 칠해진 타원을 그린다
            </summary>
            <param name="box">그리고 싶은 타원을 둘러싸는 사각형 영역.</param>
            <param name="color">타원의 색.</param>
            <param name="thickness">타원 경계선의 폭.</param>
            <param name="line_type">타원 경계선의 종류.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.EllipseBox(OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만의 타원, 혹은 전부 칠해진 타원을 그린다
            </summary>
            <param name="box">그리고 싶은 타원을 둘러싸는 사각형 영역.</param>
            <param name="color">타원의 색.</param>
            <param name="thickness">타원 경계선의 폭.</param>
            <param name="line_type">타원 경계선의 종류.</param>
            <param name="shift">사각형 영역의 정점 좌표의 소수점 이하의 자리수를 나타내는 비트수.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.EqualizeHist(OpenCvSharp.CvArr)">
            <summary>
            그레이 스케일 화상의 히스토그램을 균일화한다. 휘도를 균일화해 화상의 콘트라스트를 올린다.
            </summary>
            <param name="dst">출력 화상.src와 같은 사이즈, 같은 데이터 타입.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Erode(OpenCvSharp.CvArr)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 수축한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.수축은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Erode(OpenCvSharp.CvArr,OpenCvSharp.IplConvKernel)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 수축한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.수축은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="dst">출력 화상</param>
            <param name="element">수축에 이용하는 구조 요소.null의 경우는, 3×3 의 사각형 형상의 구조 요소를 이용한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Erode(OpenCvSharp.CvArr,OpenCvSharp.IplConvKernel,System.Int32)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 수축한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.수축은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="dst">출력 화상</param>
            <param name="element">수축에 이용하는 구조 요소.null의 경우는, 3×3 의 사각형 형상의 구조 요소를 이용한다.</param>
            <param name="iterations">수축의 회수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Exp(OpenCvSharp.CvArr)">
            <summary>
            모든 배열 요소에 대해 자연대수의 누승(네이피아수) 다시 말해 트리승을 구한다
            </summary>
            <param name="dst">출력 배열.배정도의 부동 소수점형(double), 또는 입력 배열과 같은 타입이 아니면 안된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ExtractSURF(OpenCvSharp.CvArr,OpenCvSharp.CvSeq{OpenCvSharp.CvSURFPoint}@,OpenCvSharp.CvSeq{System.Single}@,OpenCvSharp.CvMemStorage,OpenCvSharp.CvSURFParams)">
            <summary>
            화상중으로부터 SURF(Speeded Up Robust Features)를 검출한다
            </summary>
            <param name="mask">옵션：8비트의 마스크 화상.0이 아닌 의 마스크 픽셀이50%이상을 차지하는 영역으로부터 마샬, 특징 점검출을 실시한다.</param>
            <param name="keypoints">출력 파라미터.키포인트의 시퀀스의 포인터의 포인터. 이것은, CvSURFPoint 구조체의 시퀀스가 된다</param>
            <param name="descriptors">옵션：출력 파라미터.디스크립터의 시퀀스의 포인터의 포인터. 시퀀스의 각 요소는, params.extended 의 값에 의존하고, 64-요소, 혹은 128-요소의 부동 소수점수(실수)(CV_32 F) 벡터가 된다. 파라미터가 NULL 의 경우, 디스크립터는 계산되지 않는다.</param>
            <param name="storage">키포인트와 디스크립터가 보관되는 메모리 스토레이지</param>
            <param name="param">CvSURFParams 구조체에 넣어진, 여러가지 알고리즘 파라미터</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FillConvexPoly(OpenCvSharp.CvPoint[],OpenCvSharp.CvScalar)">
            <summary>
            볼록 다각형의 내부를 전부 칠한다.
            </summary>
            <param name="pts">하나의 다각형에의 포인터의 배열</param>
            <param name="color">다각형의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FillConvexPoly(OpenCvSharp.CvPoint[],OpenCvSharp.CvScalar,OpenCvSharp.LineType)">
            <summary>
            볼록 다각형의 내부를 전부 칠한다.
            </summary>
            <param name="pts">하나의 다각형에의 포인터의 배열</param>
            <param name="color">다각형의 색</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FillConvexPoly(OpenCvSharp.CvPoint[],OpenCvSharp.CvScalar,OpenCvSharp.LineType,System.Int32)">
            <summary>
            볼록 다각형의 내부를 전부 칠한다.
            </summary>
            <param name="pts">하나의 다각형에의 포인터의 배열</param>
            <param name="color">다각형의 색</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">정점 좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FillPoly(OpenCvSharp.CvPoint[][],OpenCvSharp.CvScalar)">
            <summary>
            다각형 내부를 전부 칠한다
            </summary>
            <param name="pts">다각형에의 포인터 배열.</param>
            <param name="color">다각형의 색.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FillPoly(OpenCvSharp.CvPoint[][],OpenCvSharp.CvScalar,OpenCvSharp.LineType)">
            <summary>
            다각형 내부를 전부 칠한다
            </summary>
            <param name="pts">다각형에의 포인터 배열.</param>
            <param name="color">다각형의 색.</param>
            <param name="line_type">선의 종류.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FillPoly(OpenCvSharp.CvPoint[][],OpenCvSharp.CvScalar,OpenCvSharp.LineType,System.Int32)">
            <summary>
            다각형 내부를 전부 칠한다
            </summary>
            <param name="pts">다각형에의 포인터 배열.</param>
            <param name="color">다각형의 색.</param>
            <param name="line_type">선의 종류.</param>
            <param name="shift">정점 좌표의 소수점 이하의 자리수를 나타내는 비트수.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Filter2D(OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            화상에 선형 필터를 적용한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="kernel">필터 마스크.계수의 싱글 채널의 2 차원 부동 소수점형 행렬.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Filter2D(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.CvPoint)">
            <summary>
            화상에 선형 필터를 적용한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="kernel">필터 마스크.계수의 싱글 채널의 2 차원 부동 소수점형 행렬.</param>
            <param name="anchor">커넬의 엥커.커넬 마스크로 커버되는 인접 영역내에 있어서의, 필터 대상이 되는 픽셀의 상대 위치를 나타낸다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FindChessboardCorners(OpenCvSharp.CvSize,OpenCvSharp.CvPoint2D32f[]@)">
            <summary>
            입력 화상이 체스 보드 패턴인지를 확인해, 체스 보드의 각 코너의 위치 검출을 시도한다.
            </summary>
            <param name="pattern_size">체스 보드의 행과 열 마다의 코너의 수</param>
            <param name="corners">검출된 코너의 배열. Length=pattern_size.Width*pattern_size.Height</param>
            <returns>모든 코너가 검출되어 올바른 차례(행순으로, 한편 각 행은 왼쪽에서 오른쪽으로 나열된다)로 그것들이 배치되어 있는 경우에는, true</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.FindChessboardCorners(OpenCvSharp.CvSize,OpenCvSharp.CvPoint2D32f[]@,System.Int32@)">
            <summary>
            입력 화상이 체스 보드 패턴인지를 확인해, 체스 보드의 각 코너의 위치 검출을 시도한다.
            </summary>
            <param name="pattern_size">체스 보드의 행과 열 마다의 코너의 수</param>
            <param name="corners">검출된 코너의 배열. Length=pattern_size.Width*pattern_size.Height</param>
            <param name="corner_count">코너의 수가 출력된다</param>
            <returns>모든 코너가 검출되어 올바른 차례(행순으로, 한편 각 행은 왼쪽에서 오른쪽으로 나열된다)로 그것들이 배치되어 있는 경우에는, true</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.FindChessboardCorners(OpenCvSharp.CvSize,OpenCvSharp.CvPoint2D32f[]@,System.Int32@,OpenCvSharp.ChessboardFlag)">
            <summary>
            입력 화상이 체스 보드 패턴인지를 확인해, 체스 보드의 각 코너의 위치 검출을 시도한다.
            </summary>
            <param name="pattern_size">체스 보드의 행과 열 마다의 코너의 수</param>
            <param name="corners">검출된 코너의 배열. Length=pattern_size.Width*pattern_size.Height</param>
            <param name="corner_count">코너의 수가 출력된다</param>
            <param name="flags">처리 플래그</param>
            <returns>모든 코너가 검출되어 올바른 차례(행순으로, 한편 각 행은 왼쪽에서 오른쪽으로 나열된다)로 그것들이 배치되어 있는 경우에는, true</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.FindContours(OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint}@)">
            <summary>
            이진 화상중의 윤곽을 찾아낸다
            </summary>
            <param name="storage">추출된 윤곽을 보존하는 영역</param>
            <param name="first_contour">출력 파라미터.제일 외측의 윤곽에의 포인터가 들어가 있다.</param>
            <returns>추출한 윤곽의 개수</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.FindContours(OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint}@,System.Int32)">
            <summary>
            이진 화상중의 윤곽을 찾아낸다
            </summary>
            <param name="storage">추출된 윤곽을 보존하는 영역</param>
            <param name="first_contour">출력 파라미터.제일 외측의 윤곽에의 포인터가 들어가 있다.</param>
            <param name="header_size">시퀀스 헤더의 사이즈.method=CV_CHAIN_CODE의 경우,>=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour).</param>
            <returns>추출한 윤곽의 개수</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.FindContours(OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint}@,System.Int32,OpenCvSharp.ContourRetrieval)">
            <summary>
            이진 화상중의 윤곽을 찾아낸다
            </summary>
            <param name="storage">추출된 윤곽을 보존하는 영역</param>
            <param name="first_contour">출력 파라미터.제일 외측의 윤곽에의 포인터가 들어가 있다.</param>
            <param name="header_size">시퀀스 헤더의 사이즈.method=CV_CHAIN_CODE의 경우,>=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour).</param>
            <param name="mode">추출 모드 </param>
            <returns>추출한 윤곽의 개수</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.FindContours(OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint}@,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain)">
            <summary>
            이진 화상중의 윤곽을 찾아낸다
            </summary>
            <param name="storage">추출된 윤곽을 보존하는 영역</param>
            <param name="first_contour">출력 파라미터.제일 외측의 윤곽에의 포인터가 들어가 있다.</param>
            <param name="header_size">시퀀스 헤더의 사이즈.method=CV_CHAIN_CODE의 경우,>=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour).</param>
            <param name="mode">추출 모드 </param>
            <param name="method">근사 수법</param>
            <returns>추출한 윤곽의 개수</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.FindContours(OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint}@,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain,OpenCvSharp.CvPoint)">
            <summary>
            이진 화상중의 윤곽을 찾아낸다
            </summary>
            <param name="storage">추출된 윤곽을 보존하는 영역</param>
            <param name="first_contour">출력 파라미터.제일 외측의 윤곽에의 포인터가 들어가 있다.</param>
            <param name="header_size">시퀀스 헤더의 사이즈.method=CV_CHAIN_CODE의 경우,>=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour).</param>
            <param name="mode">추출 모드 </param>
            <param name="method">근사 수법</param>
            <param name="offset">오프셋.모든 윤곽점은 이것에 의해서 시프트 된다.</param>
            <returns>추출한 윤곽의 개수</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.FindCornerSubPix(OpenCvSharp.CvPoint2D32f[],System.Int32,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvTermCriteria)">
            <summary>
            코너 위치를 고정밀화한다.
            </summary>
            <param name="corners">코너의 초기 좌표가 입력되어 고정밀화된 좌표가 출력된다.</param>
            <param name="count">코너의 수</param>
            <param name="win">검색 윈도우의 반의 사이즈.(예) win=(5,5)라면 5*2+1 × 5*2+1 = 11 × 11 이 탐색 윈도우 해서 사용된다.</param>
            <param name="zero_zone">총 합을 계산할 때에 포함되지 않는, 탐색 영역의 중심으로 존재하는 총화 대상외 영역의 반의 사이즈.이 값은, 자기 상관 행렬에 대해 발생할 수 있는 특이점을 피하기 위해서 이용된다. 값이 (-1,-1)의 경우는, 그러한 사이즈는 없다고 하는 것을 의미한다</param>
            <param name="criteria">코너 좌표의 고정밀화를 위한 반복 처리의 종료 조건.코너 위치의 고정밀화의 반복 처리는, 규정 회수에 이르는지, 목표 정도에 이르렀을 때에 종료한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FitEllipse2">
            <summary>
            2 차원의 점렬에 타원을 fitting 한다
            </summary>
            <returns>2 차원의 점렬에 피트하는 최선의 타원</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.FitLine(OpenCvSharp.DistanceType,System.Double,System.Double,System.Double,System.Single[]@)">
            <summary>
            2 차원 또는 3 차원의 점렬에 선을 fitting 한다
            </summary>
            <param name="dist_type">fitting에 사용되는 거리.</param>
            <param name="param">각각의 거리 함수에 있어서의 수치 파라미터(C).0을 지정했을 경우, 최적인 값이 선택된다.</param>
            <param name="reps">반경(좌표 원점과 선의 거리)과 각도에 대한 정도.각각 0.01이 초기치로서 적합하다.</param>
            <param name="aeps">반경(좌표 원점과 선의 거리)과 각도에 대한 정도.각각 0.01이 초기치로서 적합하다.</param>
            <param name="line">출력되는 선의 파라미터.2 차원 fitting의 경우, 네 개의 부동 소수점형수(vx, vy, x0, y0)의 배열로, (vx, vy)는 정규화된 방향 벡터, (x0, y0)는 선상의 점을 의미한다.3 차원 fitting의 경우, (vx, vy, vz, x0, y0, z0)의 여섯 개의 부동 소수점형수의 배열로, (vx, vy, vz)는 정규화된 방향 벡터, (x0, y0, z0)는 선상의 점을 의미한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Flip">
            <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.Flip(OpenCvSharp.CvArr)">
            <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다
            </summary>
            <param name="dst">출력 배열.만약 null이면, 반전은 인프레이스모드로 행해진다</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Flip(OpenCvSharp.CvArr,OpenCvSharp.FlipMode)">
            <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다
            </summary>
            <param name="dst">출력 배열.만약 null이면, 반전은 인프레이스모드로 행해진다</param>
            <param name="flip_mode">배열의 반전 방법의 지정</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Mirror">
            <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다. cvFlip의 앨리어스(alias).
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.Mirror(OpenCvSharp.CvArr)">
            <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다. cvFlip의 앨리어스(alias).
            </summary>
            <param name="dst">출력 배열.만약 null이면, 반전은 인프레이스모드로 행해진다</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Mirror(OpenCvSharp.CvArr,OpenCvSharp.FlipMode)">
            <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다. cvFlip의 앨리어스(alias).
            </summary>
            <param name="dst">출력 배열.만약 null이면, 반전은 인프레이스모드로 행해진다</param>
            <param name="flip_mode">배열의 반전 방법의 지정</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FloodFill(OpenCvSharp.CvPoint,OpenCvSharp.CvScalar)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="seed_point">연결 성분의 시작점.시드 픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FloodFill(OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="seed_point">연결 성분의 시작점.시드 픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
            <param name="lo_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 하한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FloodFill(OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="seed_point">연결 성분의 시작점.시드 픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
            <param name="lo_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 하한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="up_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 상한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FloodFill(OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvConnectedComp)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="seed_point">연결 성분의 시작점.시드 픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
            <param name="lo_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 하한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="up_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 상한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="comp">구조체에의 포인터.이 함수는, 전부 칠해진 영역의 정보를 구조체에 대입한다. </param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FloodFill(OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvConnectedComp,System.Int32)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="seed_point">연결 성분의 시작점.시드 픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
            <param name="lo_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 하한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="up_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 상한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="comp">구조체에의 포인터.이 함수는, 전부 칠해진 영역의 정보를 구조체에 대입한다. </param>
            <param name="flags">조작 플래그.하위 비트는 함수내에서 이용되는 연결성에 관한 값 4(디폴트) 또는 8이 들어가 있다. 
            연결성은, 어느 픽셀을 인접 픽셀이라고 보는지를 정의한다.상위 비트는 0, 혹은 Cv.FLOODFILL_FIXED_RANGE, Cv.FLOODFILL_MASK_ONLY 와의 편성이다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.FloodFill(OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvConnectedComp,System.Int32,OpenCvSharp.CvArr)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="seed_point">연결 성분의 시작점.시드 픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
            <param name="lo_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 하한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="up_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 상한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="comp">구조체에의 포인터.이 함수는, 전부 칠해진 영역의 정보를 구조체에 대입한다. </param>
            <param name="flags">조작 플래그.하위 비트는 함수내에서 이용되는 연결성에 관한 값 4(디폴트) 또는 8이 들어가 있다. 
            연결성은, 어느 픽셀을 인접 픽셀이라고 보는지를 정의한다.상위 비트는 0, 혹은 Cv.FLOODFILL_FIXED_RANGE, Cv.FLOODFILL_MASK_ONLY 와의 편성이다.</param>
            <param name="mask">처리용 마스크</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Get1D(System.Int32)">
            <summary>
            특정의 배열 요소를 돌려준다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <returns>지정한 요소의 값. 희소 배열로, 지정한 노드가 존재하지 않는 경우, 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Get2D(System.Int32,System.Int32)">
            <summary>
            특정의 배열 요소를 돌려준다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <returns>지정한 요소의 값. 희소 배열로, 지정한 노드가 존재하지 않는 경우, 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Get3D(System.Int32,System.Int32,System.Int32)">
            <summary>
            특정의 배열 요소를 돌려준다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <returns>지정한 요소의 값. 희소 배열로, 지정한 노드가 존재하지 않는 경우, 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetND(System.Int32[])">
            <summary>
            특정의 배열 요소를 돌려준다.
            </summary>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
            <returns>지정한 요소의 값. </returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetCol(OpenCvSharp.CvMat@,System.Int32)">
            <summary>
            지정된 열을 돌려준다
            </summary>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="col">선택한 열의, 0을 기준으로 한 인덱스.</param>
            <returns>지정된 범위의 열</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetCols(OpenCvSharp.CvMat@,System.Int32,System.Int32)">
            <summary>
            지정된 범위의 열(복수열)을 돌려준다
            </summary>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="start_col">범위의 최초의(이 값을 포함한다) 열의, 0을 기준으로 한 인덱스.</param>
            <param name="end_col">범위의 마지막(이 값을 포함하지 않는다) 열의, 0을 기준으로 한 인덱스.</param>
            <returns>지정된 범위의 열</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetDiag(OpenCvSharp.CvMat@)">
            <summary>
            입력 배열중의 지정된 대각열에 대응하는 헤더를 돌려준다. 
            </summary>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <returns>결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetDiag(OpenCvSharp.CvMat@,OpenCvSharp.DiagType)">
            <summary>
            입력 배열중의 지정된 대각열에 대응하는 헤더를 돌려준다. 
            </summary>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="diag">대각 배열의 종류</param>
            <returns>결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetDims">
            <summary>
            배열의 차원과 사이즈를 돌려준다.
            IplImage 또는 CvMat의 경우에는, 화상이나 행렬의 행수에 관계없이 항상 2 를 돌려준다.
            </summary>
            <returns>배열의 차원수</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetDims(System.Int32[]@)">
            <summary>
            배열의 차원과 사이즈를 돌려준다.
            IplImage 또는 CvMat의 경우에는, 화상이나 행렬의 행수에 관계없이 항상 2 를 돌려준다.
            </summary>
            <param name="sizes">배열의 차원의 크기를 나타내는 옵션의 출력 벡터.2 차원 배열의 경우는 1번째에 행수(높이), 다음은 렬수(폭)를 나타낸다.</param>
            <returns>배열의 차원수</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetDimSize(System.Int32)">
            <summary>
            배열의 지정된 차원의 요소수를 돌려준다. 
            </summary>
            <param name="index">0을 기준으로 한 차원의 인덱스(행렬에서는 0은 행수, 1은 렬수를 나타낸다.화상에서는 0은 높이, 1은 폭을 나타낸다).</param>
            <returns>지정된 차원의 요소수</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetElemType">
            <summary>
            배열 요소의 타입을 돌려준다. 
            </summary>
            <returns>배열 요소의 타입</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetQuadrangleSubPix(OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            사각형 영역의 픽셀값을 화상으로부터 서브 픽셀 정도로 취득한다(화상의 회전＋병진 이동을 행한다).
            </summary>
            <param name="dst">추출된 사각형</param>
            <param name="map_matrix">2 × 3 의 변환 행렬[A|b]</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetRawData(System.IntPtr@)">
            <summary>
            배열의 저레벨 정보를 꺼낸다
            </summary>
            <param name="data">출력인 전화상의 원점에의 포인터, 혹은 ROI 가 설정되어 있는 경우는 ROI 의 원점에의 포인터.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetRawData(System.IntPtr@,System.Int32@)">
            <summary>
            배열의 저레벨 정보를 꺼낸다
            </summary>
            <param name="data">출력인 전화상의 원점에의 포인터, 혹은 ROI 가 설정되어 있는 경우는 ROI 의 원점에의 포인터.</param>
            <param name="step">출력인 바이트 단위로 나타내진 행의 길이.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetRawData(System.IntPtr@,System.Int32@,OpenCvSharp.CvSize@)">
            <summary>
            배열의 저레벨 정보를 꺼낸다
            </summary>
            <param name="data">출력인 전화상의 원점에의 포인터, 혹은 ROI 가 설정되어 있는 경우는 ROI 의 원점에의 포인터.</param>
            <param name="step">출력인 바이트 단위로 나타내진 행의 길이.</param>
            <param name="roi_size">출력인 ROI 사이즈.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetReal1D(System.Int32)">
            <summary>
            싱글 채널의 배열의 특정의 요소를 돌려준다.배열이 멀티 채널의 경우는, 런타임 에러가 발생한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <returns>지정한 요소의 값. 지정한 노드가 존재하지 않으면, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetReal2D(System.Int32,System.Int32)">
            <summary>
            싱글 채널의 배열의 특정의 요소를 돌려준다.배열이 멀티 채널의 경우는, 런타임 에러가 발생한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <returns>지정한 요소의 값. 지정한 노드가 존재하지 않으면, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetReal3D(System.Int32,System.Int32,System.Int32)">
            <summary>
            싱글 채널의 배열의 특정의 요소를 돌려준다.배열이 멀티 채널의 경우는, 런타임 에러가 발생한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <returns>지정한 요소의 값. 지정한 노드가 존재하지 않으면, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetRealND(System.Int32[])">
            <summary>
            싱글 채널의 배열의 특정의 요소를 돌려준다.배열이 멀티 채널의 경우는, 런타임 에러가 발생한다.
            </summary>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
            <returns>지정한 요소의 값. 지정한 노드가 존재하지 않으면, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetRectSubPix(OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f)">
            <summary>
            사각형 영역의 픽셀값을 화상으로부터 서브 픽셀 정도로 취득한다(화상의 병진 이동을 행한다).
            </summary>
            <param name="dst">추출된 사각형</param>
            <param name="center">입력 화상중에 있는 추출된 사각형 중심의 부동 소수점형 좌표.중심은 화상중에 없으면 안 된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetRow(OpenCvSharp.CvMat@,System.Int32)">
            <summary>
            지정된 행을 돌려준다
            </summary>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="row">선택한 행의, 0을 기준으로 한 인덱스.</param>
            <returns>지정된 범위의 행</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetRows(OpenCvSharp.CvMat@,System.Int32,System.Int32)">
            <summary>
            지정된 범위의 행(복수행)을 돌려준다
            </summary>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="start_row">범위의 최초의(이 값을 포함한다) 행의, 0을 기준으로 한 인덱스.</param>
            <param name="end_row">범위의 마지막(이 값을 포함하지 않는다) 행의, 0을 기준으로 한 인덱스.</param>
            <returns>지정된 범위의 행</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetRows(OpenCvSharp.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            지정된 범위의 행(복수행)을 돌려준다
            </summary>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="start_row">범위의 최초의(이 값을 포함한다) 행의, 0을 기준으로 한 인덱스.</param>
            <param name="end_row">범위의 마지막(이 값을 포함하지 않는다) 행의, 0을 기준으로 한 인덱스.</param>
            <param name="delta_row">행의 범위의 인덱스 간격. 이 함수는, start_row로부터 end_row(는 포함하지 않는다)까지, delta_row마다행을 추출한다. </param>
            <returns>지정된 범위의 행</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetSize">
            <summary>
            행렬 또는 화상의 ROI 의 사이즈를 돌려준다
            </summary>
            <returns>사이즈</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetSubRect(OpenCvSharp.CvMat@,OpenCvSharp.CvRect)">
            <summary>
            입력 배열중의 지정한 사각형 영역에 대응하는 헤더를 돌려준다.
            즉, 입력 배열의 일부의 사각형 영역을, 독립한 배열로서 취급할 수 있도록 한다.이 함수에서는 ROI 를 고려해, 실제로는 ROI 의 부분 배열이 꺼내진다.
            </summary>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="rect">주목하는 사각형 영역의, 0 을 기준으로 한 좌표</param>
            <returns>결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.GetSubArr(OpenCvSharp.CvMat@,OpenCvSharp.CvRect)">
            <summary>
            입력 배열중의 지정한 사각형 영역에 대응하는 헤더를 돌려준다.
            즉, 입력 배열의 일부의 사각형 영역을, 독립한 배열로서 취급할 수 있도록 한다.이 함수에서는 ROI 를 고려해, 실제로는 ROI 의 부분 배열이 꺼내진다.
            </summary>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="rect">주목하는 사각형 영역의, 0 을 기준으로 한 좌표</param>
            <returns>결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HaarDetectObjects(OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvMemStorage)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 것 같은 사각형 영역을 검출해, 그러한 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="cascade">Haar 분류기 캐스케이드의 내부 표현</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있었을 경우에, 그 사각형 열을 보존하는 메모리 스토레이지</param>
            <returns>CvAvgComp를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HaarDetectObjects(OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvMemStorage,System.Double)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 것 같은 사각형 영역을 검출해, 그러한 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="cascade">Haar 분류기 캐스케이드의 내부 표현</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있었을 경우에, 그 사각형 열을 보존하는 메모리 스토레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 스케일링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <returns>CvAvgComp를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HaarDetectObjects(OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvMemStorage,System.Double,System.Int32)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 것 같은 사각형 영역을 검출해, 그러한 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="cascade">Haar 분류기 캐스케이드의 내부 표현</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있었을 경우에, 그 사각형 열을 보존하는 메모리 스토레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 스케일링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <param name="min_neighbors">(지금부터 1 을 뺀 값이) 오브젝트를 구성하는 이웃 사각형의 최소수가 된다. min_neighbors-1 보다 적은 사각형 밖에 포함하지 않는 듯한 그룹은 모두 기각된다. 만약 min_neighbors 이 0 인 경우, 이 함수는 그룹을 하나도 생성하지 않고, 후보가 되는 사각형을 모두 돌려준다.이것은 유저가 커스터마이즈 한 그룹화 처리를 적용하고 싶은 경우에 유용하다. </param>
            <returns>CvAvgComp를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HaarDetectObjects(OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvMemStorage,System.Double,System.Int32,OpenCvSharp.HaarDetectionType)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 것 같은 사각형 영역을 검출해, 그러한 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="cascade">Haar 분류기 캐스케이드의 내부 표현</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있었을 경우에, 그 사각형 열을 보존하는 메모리 스토레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 스케일링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <param name="min_neighbors">(지금부터 1 을 뺀 값이) 오브젝트를 구성하는 이웃 사각형의 최소수가 된다. min_neighbors-1 보다 적은 사각형 밖에 포함하지 않는 듯한 그룹은 모두 기각된다. 만약 min_neighbors 가 0 인 경우, 이 함수는 그룹을 하나도 생성하지 않고, 후보가 되는 사각형을 모두 돌려준다.이것은 유저가 커스터마이즈 한 그룹화 처리를 적용하고 싶은 경우에 유용하다. </param>
            <param name="flags">처리 모드</param>
            <returns>CvAvgComp를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HaarDetectObjects(OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvMemStorage,System.Double,System.Int32,OpenCvSharp.HaarDetectionType,OpenCvSharp.CvSize)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 것 같은 사각형 영역을 검출해, 그러한 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="cascade">Haar 분류기 캐스케이드의 내부 표현</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있었을 경우에, 그 사각형 열을 보존하는 메모리 스토레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 스케일링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <param name="min_neighbors">(지금부터 1 을 뺀 값이) 오브젝트를 구성하는 이웃 사각형의 최소수가 된다. min_neighbors-1 보다 적은 사각형 밖에 포함하지 않는 듯한 그룹은 모두 기각된다. 만약 min_neighbors 가 0 인 경우, 이 함수는 그룹을 하나도 생성하지 않고, 후보가 되는 사각형을 모두 돌려준다.이것은 유저가 커스터마이즈 한 그룹화 처리를 적용하고 싶은 경우에 유용하다. </param>
            <param name="flags">처리 모드</param>
            <param name="min_size">최소 윈드우사이즈.디폴트에서는 분류기의 학습에 이용된 샘플의 사이즈가 설정된다(얼굴 검출의 경우는,~20×20).</param>
            <returns>CvAvgComp를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughCircles(OpenCvSharp.CvMemStorage,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="circle_storage">검출된 원을 보존하는 메모리 스토레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원 검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 원의 이웃에 복수가 잘못된 원이 검출되게 된다.또, 반대로 매우 큰 경우는, 원 검출에 실패한다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughCircles(OpenCvSharp.CvMemStorage,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="circle_storage">검출된 원을 보존하는 메모리 스토레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원 검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 원의 이웃에 복수가 잘못된 원이 검출되게 된다.또, 반대로 매우 큰 경우는, 원 검출에 실패한다. </param>
            <param name="param1">방법으로 응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 임계치의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughCircles(OpenCvSharp.CvMemStorage,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="circle_storage">검출된 원을 보존하는 메모리 스토레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원 검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 원의 이웃에 복수가 잘못된 원이 검출되게 된다.또, 반대로 매우 큰 경우는, 원 검출에 실패한다. </param>
            <param name="param1">방법으로 응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 임계치의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">방법으로 응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 임계치.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 원으로부터 시퀀스에 검출된다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughCircles(OpenCvSharp.CvMemStorage,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="circle_storage">검출된 원을 보존하는 메모리 스토레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원 검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 원의 이웃에 복수가 잘못된 원이 검출되게 된다.또, 반대로 매우 큰 경우는, 원 검출에 실패한다. </param>
            <param name="param1">방법으로 응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 임계치의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">방법으로 응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 임계치.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 원으로부터 시퀀스에 검출된다.</param>
            <param name="min_radius">검출해야 할 원의 최소 반경.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughCircles(OpenCvSharp.CvMemStorage,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="circle_storage">검출된 원을 보존하는 메모리 스토레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원 검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 원의 이웃에 복수가 잘못된 원이 검출되게 된다.또, 반대로 매우 큰 경우는, 원 검출에 실패한다. </param>
            <param name="param1">방법으로 응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 임계치의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">방법으로 응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 임계치.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 원으로부터 시퀀스에 검출된다.</param>
            <param name="min_radius">검출해야 할 원의 최소 반경.</param>
            <param name="max_radius">검출해야 할 원의 최대 반경 디폴트의 최대 반경은 max(image_width, image_height)에 세트 되고 있다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughCircles(OpenCvSharp.CvMat,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="circle_storage">검출된 원을 보존하는 메모리 스토레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원 검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 원의 이웃에 복수가 잘못된 원이 검출되게 된다.또, 반대로 매우 큰 경우는, 원 검출에 실패한다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughCircles(OpenCvSharp.CvMat,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="circle_storage">검출된 원을 보존하는 메모리 스토레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원 검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 원의 이웃에 복수가 잘못된 원이 검출되게 된다.또, 반대로 매우 큰 경우는, 원 검출에 실패한다. </param>
            <param name="param1">방법으로 응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 임계치의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughCircles(OpenCvSharp.CvMat,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="circle_storage">검출된 원을 보존하는 메모리 스토레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원 검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 원의 이웃에 복수가 잘못된 원이 검출되게 된다.또, 반대로 매우 큰 경우는, 원 검출에 실패한다. </param>
            <param name="param1">방법으로 응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 임계치의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">방법으로 응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 임계치.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 원으로부터 시퀀스에 검출된다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughCircles(OpenCvSharp.CvMat,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="circle_storage">검출된 원을 보존하는 메모리 스토레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원 검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 원의 이웃에 복수가 잘못된 원이 검출되게 된다.또, 반대로 매우 큰 경우는, 원 검출에 실패한다. </param>
            <param name="param1">방법으로 응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 임계치의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">방법으로 응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 임계치.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 원으로부터 시퀀스에 검출된다.</param>
            <param name="min_radius">검출해야 할 원의 최소 반경.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughCircles(OpenCvSharp.CvMat,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="circle_storage">검출된 원을 보존하는 메모리 스토레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원 검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 원의 이웃에 복수가 잘못된 원이 검출되게 된다.또, 반대로 매우 큰 경우는, 원 검출에 실패한다. </param>
            <param name="param1">방법으로 응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 임계치의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">방법으로 응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 임계치.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 원으로부터 시퀀스에 검출된다.</param>
            <param name="min_radius">검출해야 할 원의 최소 반경.</param>
            <param name="max_radius">검출해야 할 원의 최대 반경 디폴트의 최대 반경은 max(image_width, image_height)에 세트 되고 있다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughLines2(OpenCvSharp.CvMemStorage,OpenCvSharp.HoughLinesMethod,System.Double,System.Double,System.Int32)">
            <summary>
            허프(Hough) 변환을 이용해 이진 화상으로부터 직선을 검출한다
            </summary>
            <param name="line_storage">검출된 선을 보존하는 메모리 스토레이지. 함수에 의해서 선분의 시퀀스가 스토리지내에 만들어져 그 참조가 돌려주어진다</param>
            <param name="method">허프 변환의 종류</param>
            <param name="rho">거리 해상도(1 픽셀 당의 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">임계치 파라미터.대응하는 투표수가 threshold보다 큰 경우만, 추출된 선이 돌려주어진다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughLines2(OpenCvSharp.CvMemStorage,OpenCvSharp.HoughLinesMethod,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            허프(Hough) 변환을 이용해 이진 화상으로부터 직선을 검출한다
            </summary>
            <param name="line_storage">검출된 선을 보존하는 메모리 스토레이지. 함수에 의해서 선분의 시퀀스가 스토리지내에 만들어져 그 참조가 돌려주어진다</param>
            <param name="method">허프 변환의 종류</param>
            <param name="rho">거리 해상도(1 픽셀 당의 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">임계치 파라미터.대응하는 투표수가 threshold보다 큰 경우만, 추출된 선이 돌려주어진다.</param>
            <param name="param1">각 방법으로 응한 1번째의 파라미터.표준적 허프 변환에서는, 사용하지 않는다(0).확률적 허프 변환에서는, 최소의 선의 길이.마르치스케이르하후 변환에서는, 거리 해상도 rho의 제수.(난폭한 거리 해상도에서는 rho 이며, 상세한 해상도에서는 (rho / param1)된다).</param>
            <param name="param2">각 방법으로 응한 2번째의 파라미터.표준적 허프 변환에서는, 사용하지 않는다(0).확률적 허프 변환에서는, 동일 선상에 존재하는 선분으로서 취급하는(즉, 그것들을 통합해도 문제 없다), 두 개의 선분의 최대의 간격. 마르치스케이르하후 변환에서는, 각도 해상도 theta의 제수. (난폭한 각도 해상도에서는 theta 이며, 상세한 해상도에서는 (theta / param2)된다). </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughLines2(OpenCvSharp.CvMat,OpenCvSharp.HoughLinesMethod,System.Double,System.Double,System.Int32)">
            <summary>
            허프(Hough) 변환을 이용해 이진 화상으로부터 직선을 검출한다
            </summary>
            <param name="line_storage">검출된 선을 보존하는 1행의 행렬/1열의 행렬. 행렬의 헤더는, 그 cols 나 rows가 검출된 선의 수가 되도록 이 함수에 의해서 변경된다.만약 실제의 선의 수가 행렬의 사이즈를 넘는 경우는, 선의 최대 가능수가 돌려주어진다(표준적 허프 변환의 경우는 투표수로 소트 된다).</param>
            <param name="method">허프 변환의 종류</param>
            <param name="rho">거리 해상도(1 픽셀 당의 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">임계치 파라미터.대응하는 투표수가 threshold보다 큰 경우만, 추출된 선이 돌려주어진다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughLines2(OpenCvSharp.CvMat,OpenCvSharp.HoughLinesMethod,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            허프(Hough) 변환을 이용해 이진 화상으로부터 직선을 검출한다
            </summary>
            <param name="line_storage">검출된 선을 보존하는 1행의 행렬/1열의 행렬. 행렬의 헤더는, 그 cols 나 rows가 검출된 선의 수가 되도록 이 함수에 의해서 변경된다.만약 실제의 선의 수가 행렬의 사이즈를 넘는 경우는, 선의 최대 가능수가 돌려주어진다(표준적 허프 변환의 경우는 투표수로 소트 된다).</param>
            <param name="method">허프 변환의 종류</param>
            <param name="rho">거리 해상도(1 픽셀 당의 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">임계치 파라미터.대응하는 투표수가 threshold보다 큰 경우만, 추출된 선이 돌려주어진다.</param>
            <param name="param1">각 방법으로 응한 1번째의 파라미터.표준적 허프 변환에서는, 사용하지 않는다(0).확률적 허프 변환에서는, 최소의 선의 길이.마르치스케이르하후 변환에서는, 거리 해상도 rho의 제수.(난폭한 거리 해상도에서는 rho 이며, 상세한 해상도에서는 (rho / param1)된다).</param>
            <param name="param2">각 방법으로 응한 2번째의 파라미터.표준적 허프 변환에서는, 사용하지 않는다(0).확률적 허프 변환에서는, 동일 선상에 존재하는 선분으로서 취급하는(즉, 그것들을 통합해도 문제 없다), 두 개의 선분의 최대의 간격. 마르치스케이르하후 변환에서는, 각도 해상도 theta의 제수. (난폭한 각도 해상도에서는 theta 이며, 상세한 해상도에서는 (theta / param2)된다). </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.IncRefData">
            <summary>
            reference counter 포인터가 null이 아닌 경우에, CvMat 혹은 CvMatND 의 데이터의 reference counter을 인크리먼트(increment) 해, 새로운 카운터치를 돌려준다.
            그렇지 않은 경우는 0 을 돌려준다. 
            </summary>
            <returns>새로운 카운터치</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Inpaint(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,OpenCvSharp.InpaintMethod)">
            <summary>
            배열의 요소치가 다른 두 개의 배열 요소로 나타내지는 범위내에 위치하는지를 체크한다
            </summary>
            <param name="mask">복구 마스크.8비트, 1 채널 화상. 0이 아닌의 피크셀이, 수복의 필요가 있는 영역인 것을 나타낸다.</param>
            <param name="dst">출력 화상(입력 화상과 같은 사이즈, 같은 타입).</param>
            <param name="inpaintRange">복구되는 픽셀의 원상의 인접 영역을 나타내는 반경</param>
            <param name="flags">복구 방법</param>	
        </member>
        <member name="M:OpenCvSharp.CvArr.InRange(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열의 요소치가 다른 두 개의 배열 요소로 나타내지는 범위내에 위치하는지를 체크한다
            </summary>
            <param name="lower">하한치(그 값을 포함한다)를 나타내는 배열</param>
            <param name="upper">상한치(그 값은 포함하지 않는다)를 나타내는 배열</param>
            <param name="dst">출력 배열(타입은 8u 또는 8 s)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.InRangeS(OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            배열의 요소치가 두 개의 스칼라의 사이에 위치하는지를 체크한다
            </summary>
            <param name="lower">하한치(그 값을 포함한다)</param>
            <param name="upper">상한치(그 값은 포함하지 않는다)</param>
            <param name="dst">출력 배열(타입은 8u 또는 8 s)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Invert(OpenCvSharp.CvArr)">
            <summary>
            역행열 또는 의사 역행열을 구한다.
            </summary>
            <param name="dst">출력 행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Invert(OpenCvSharp.CvArr,OpenCvSharp.InvertMethod)">
            <summary>
            역행열 또는 의사 역행열을 구한다.
            </summary>
            <param name="dst">출력 행렬</param>
            <param name="method">역행열을 요구하는 수법</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Inv(OpenCvSharp.CvArr)">
            <summary>
            역행열 또는 의사 역행열을 구한다. Invert의 앨리어스(alias).
            </summary>
            <param name="dst">출력 행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Inv(OpenCvSharp.CvArr,OpenCvSharp.InvertMethod)">
            <summary>
            역행열 또는 의사 역행열을 구한다. Invert의 앨리어스(alias).
            </summary>
            <param name="dst">출력 행렬</param>
            <param name="method">역행열을 요구하는 수법</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.KMeans2(System.Int32,OpenCvSharp.CvArr,OpenCvSharp.CvTermCriteria)">
            <summary>
            벡터 집합을, 주어진 클러스터수로 분할한다.
            입력 샘플을 각 클러스터로 분류하기 위해서 cluster_count 개의 클러스터의 중심을 요구하는 k-means 법을 실장한다.
            출력 labels(i)는, 배열 samples 의 i번째의 행의 샘플이 속하는 클러스터의 인덱스를 나타낸다. 
            </summary>
            <param name="cluster_count">집합을 분할하는 클러스터수</param>
            <param name="labels">출력의 정수 벡터.모든 샘플에 대해서, 각각이 어느 클러스터에 속하고 있을지가 보존되고 있다.</param>
            <param name="termcrit">최대 반복수와(또는), 정도(1 루프로의 각 클러스터 중심 위치 이동거리)의 지정</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Laplace(OpenCvSharp.CvArr)">
            <summary>
            Sobel 연산자를 이용해 계산된 x와 y의 2차 미분을 가산하는 것으로, 입력 화상의 라프라시안(Laplacian)을 계산하는 [aperture_size=3]
            </summary>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Laplace(OpenCvSharp.CvArr,OpenCvSharp.ApertureSize)">
            <summary>
            Sobel 연산자를 이용해 계산된 x와 y의 2차 미분을 가산하는 것으로, 입력 화상의 라프라시안(Laplacian)을 계산한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="aperture_size">확장 Sobel 커넬의 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Line(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1_x">선분이 시작하는 x 좌표</param>
            <param name="pt1_y">선분이 시작하는 y 좌표</param>
            <param name="pt2_x">선분이 끝나는 x 좌표</param>
            <param name="pt2_y">선분이 끝나는 y 좌표</param>
            <param name="color">선분의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Line(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1_x">선분이 시작하는 x 좌표</param>
            <param name="pt1_y">선분이 시작하는 y 좌표</param>
            <param name="pt2_x">선분이 끝나는 x 좌표</param>
            <param name="pt2_y">선분이 끝나는 y 좌표</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Line(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1_x">선분이 시작하는 x 좌표</param>
            <param name="pt1_y">선분이 시작하는 y 좌표</param>
            <param name="pt2_x">선분이 끝나는 x 좌표</param>
            <param name="pt2_y">선분이 끝나는 y 좌표</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Line(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1_x">선분이 시작하는 x 좌표</param>
            <param name="pt1_y">선분이 시작하는 y 좌표</param>
            <param name="pt2_x">선분이 끝나는 x 좌표</param>
            <param name="pt2_y">선분이 끝나는 y 좌표</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Line(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Line(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Line(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Line(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1_x">선분이 시작하는 x 좌표</param>
            <param name="pt1_y">선분이 시작하는 y 좌표</param>
            <param name="pt2_x">선분이 끝나는 x 좌표</param>
            <param name="pt2_y">선분이 끝나는 y 좌표</param>
            <param name="color">선분의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1_x">선분이 시작하는 x 좌표</param>
            <param name="pt1_y">선분이 시작하는 y 좌표</param>
            <param name="pt2_x">선분이 끝나는 x 좌표</param>
            <param name="pt2_y">선분이 끝나는 y 좌표</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1_x">선분이 시작하는 x 좌표</param>
            <param name="pt1_y">선분이 시작하는 y 좌표</param>
            <param name="pt2_x">선분이 끝나는 x 좌표</param>
            <param name="pt2_y">선분이 끝나는 y 좌표</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1_x">선분이 시작하는 x 좌표</param>
            <param name="pt1_y">선분이 시작하는 y 좌표</param>
            <param name="pt2_x">선분이 끝나는 x 좌표</param>
            <param name="pt2_y">선분이 끝나는 y 좌표</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawLine(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawLine(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawLine(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawLine(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Log(OpenCvSharp.CvArr)">
            <summary>
            모든 배열 요소의 절대치의 자연대수를 계산한다
            </summary>
            <param name="dst">출력 배열.배정도의 부동 소수점형(double), 또는 입력 배열과 같은 타입이 아니면 안된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.LogPolar(OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f,System.Double)">
            <summary>
            화상을 대수 극좌표(Log-Polar) 공간에 재매핑 한다.
            이 함수는 인간의 망막을 모델화한 것이어, 오브젝트 트랙킹등을 위한 고속의 스케일링과
            회전에 불변인 템플릿 매칭에 이용할 수 있다.
            </summary>
            <param name="dst">출력 화상</param>
            <param name="center">출력 정도가 최대가 되는 변환의 중심 좌표</param>
            <param name="M">스케일링 계수의 크기</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.LogPolar(OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f,System.Double,OpenCvSharp.Interpolation)">
            <summary>
            화상을 대수 극좌표(Log-Polar) 공간에 재매핑 한다. 
            이 함수는 인간의 망막을 모델화한 것이어, 오브젝트 트랙킹등을 위한 고속의 스케일링과
            회전에 불변인 템플릿 매칭에 이용할 수 있다.
            </summary>
            <param name="dst">출력 화상</param>
            <param name="center">출력 정도가 최대가 되는 변환의 중심 좌표</param>
            <param name="M">스케일링 계수의 크기</param>
            <param name="flags">보간 방법</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.LUT(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다.
            </summary>
            <param name="dst">출력 배열(임의의 심도, 입력 배열과 같은 채널수).</param>
            <param name="lut">요소수가 256인 룩업테이블(출력 배열과 같은 심도가 아니면 안된다).멀티 채널의 입력/출력 배열의 경우, 테이블은 싱글 채널(이 경우 모든 채널 대하고, 같은 테이블을 사용한다)인가, 입력/출력 배열과 같은 채널수가 아니면 안된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.LUT(OpenCvSharp.CvArr,System.Byte[])">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다.룩업테이블이 배열로 지정할 수 있는 간이 버젼.
            </summary>
            <param name="dst">출력 배열(임의의 심도, 입력 배열과 같은 채널수)</param>
            <param name="lut">요소수가 256인 룩업테이블</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.LUT(OpenCvSharp.CvArr,System.Int16[])">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다.룩업테이블이 배열로 지정할 수 있는 간이 버젼.
            </summary>
            <param name="dst">출력 배열(임의의 심도, 입력 배열과 같은 채널수)</param>
            <param name="lut">요소수가 256인 룩업테이블</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.LUT(OpenCvSharp.CvArr,System.Int32[])">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다.룩업테이블이 배열로 지정할 수 있는 간이 버젼.
            </summary>
            <param name="dst">출력 배열(임의의 심도, 입력 배열과 같은 채널수)</param>
            <param name="lut">요소수가 256인 룩업테이블</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.LUT(OpenCvSharp.CvArr,System.Single[])">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다.룩업테이블이 배열로 지정할 수 있는 간이 버젼.
            </summary>
            <param name="dst">출력 배열(임의의 심도, 입력 배열과 같은 채널수)</param>
            <param name="lut">요소수가 256인 룩업테이블</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.LUT(OpenCvSharp.CvArr,System.Double[])">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다.룩업테이블이 배열로 지정할 수 있는 간이 버젼.
            </summary>
            <param name="dst">출력 배열(임의의 심도, 입력 배열과 같은 채널수)</param>
            <param name="lut">요소수가 256인 룩업테이블</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.MatchTemplate(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.MatchTemplateMethod)">
            <summary>
            템플릿과 겹친 화상 영역을 비교한다. 
            templ를, image 전체에 대해서 슬라이드시켜, 그것과 사이즈 w×h 로 겹치는 영역을 지정된 방법으로 비교해, 그 결과를 result 에 보존한다. 
            </summary>
            <param name="templ">탐색용 템플릿.화상보다 크면 안 되는, 한편 화상과 같은 타입일 필요가 있다. </param>
            <param name="result">비교 결과의 맵.싱글 채널의 32비트 부동 소수점형 데이터.image 가 W×H 로 templ 가 w×h 라면, result 는 W-w+1×H-h+1의 사이즈가 필요. </param>
            <param name="method">템플릿 매칭의 방법(이하를 참조).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Max(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 각 요소에 대한 최대치를 구한다. 
            dst(I) =max(src1(I), src2(I)) 
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.MaxS(System.Double,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라에 대한 최대치를 구한다. 
            dst(I) =max(src(I), value) 
            </summary>
            <param name="value">스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Min(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 각 요소에 대한 최소치를 구한다. 
            dst(I) =min(src1(I), src2(I)) 
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.MinAreaRect2">
            <summary>
            주어진 2 차원의 점렬을 둘러싸는 최소 사각형을 구한다
            </summary>
            <returns>2 차원의 점렬에 대한 최소 사각형</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.MinAreaRect2(OpenCvSharp.CvMemStorage)">
            <summary>
            주어진 2 차원의 점렬을 둘러싸는 최소 사각형을 구한다
            </summary>
            <param name="storage">일시적인 메모리 스토레이지</param>
            <returns>2 차원의 점렬에 대한 최소 사각형</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.MinEnclosingCircle(OpenCvSharp.CvPoint2D32f@,System.Single@)">
            <summary>
            주어진 2 차원의 점렬을 둘러싸는 최소 원을 구한다
            </summary>
            <param name="center">출력 파라미터.둘러싸는 원의 중심.</param>
            <param name="radius">출력 파라미터.둘러싸는 원의 반경.</param>
            <returns>결과의 원이 모든 입력점을 포함한 경우는 true를 돌려주어, 그 이외(즉 알고리즘의 실패)의 경우는 false를 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.MinMaxLoc(System.Double@,System.Double@)">
            <summary>
            배열 혹은 부분 배열내의 최소치와 최대치를 구한다
            </summary>
            <param name="min_val">반환값의 최소치</param>
            <param name="max_val">반환값의 최대치</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.MinMaxLoc(System.Double@,System.Double@,OpenCvSharp.CvPoint@,OpenCvSharp.CvPoint@)">
            <summary>
            배열 혹은 부분 배열내의 최소치와 최대치를 구한다
            </summary>
            <param name="min_val">반환값의 최소치</param>
            <param name="max_val">반환값의 최대치</param>
            <param name="min_loc">반환값의 최소치를 가지는 위치</param>
            <param name="max_loc">반환값의 최대치를 가지는 위치</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.MinMaxLoc(System.Double@,System.Double@,OpenCvSharp.CvPoint@,OpenCvSharp.CvPoint@,OpenCvSharp.CvArr)">
            <summary>
            배열 혹은 부분 배열내의 최소치와 최대치를 구한다
            </summary>
            <param name="min_val">반환값의 최소치</param>
            <param name="max_val">반환값의 최대치</param>
            <param name="min_loc">반환값의 최소치를 가지는 위치</param>
            <param name="max_loc">반환값의 최대치를 가지는 위치</param>
            <param name="mask">부분 배열을 지정하기 위한 옵션의 마스크</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.MinS(System.Double,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라에 대한 최소치를 구한다. 
            dst(I) =min(src(I), value) 
            </summary>
            <param name="value">스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Moments(OpenCvSharp.CvMoments@,System.Boolean)">
            <summary>
            다각형 또는 라스터 형상의 3차까지의 모멘트를 계산한다
            </summary>
            <param name="moments">화상 모멘트를 나타내는 구조체에의 참조</param>
            <param name="isBinary">(화상의 경우만) 이 플래그가 true의 경우, 값 0의 픽셀은 0으로서 그 외의 픽셀값은 1으로 다루어진다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Mul(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소끼리를 곱셈한다 (scale=1).
            dst(I) = scale * src1(I) * src2(I)
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Mul(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            두 개의 배열의 요소끼리를 곱셈한다.
            dst(I) = scale * src1(I) * src2(I)
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="scale">임의의 스케일링 계수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Norm">
            <summary>
            배열의 절대치 법칙(absolute array norm)을 계산한다
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Norm(OpenCvSharp.CvArr)">
            <summary>
            배열의 절대치 법칙(absolute array norm), 절대치 차분 법칙(absolute difference norm), 상대 가격차분 법칙(relative difference norm)을 계산한다
            </summary>
            <param name="arr2">2번째의 입력 화상.null 의 경우, arr1의 절대치 법칙이 계산되어 그렇지 않은 경우는, arr1-arr2 의 절대치 혹은 상대치 법칙이 계산된다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Norm(OpenCvSharp.CvArr,OpenCvSharp.NormType)">
            <summary>
            배열의 절대치 법칙(absolute array norm), 절대치 차분 법칙(absolute difference norm), 상대 가격차분 법칙(relative difference norm)을 계산한다
            </summary>
            <param name="arr2">2번째의 입력 화상.null 의 경우, arr1의 절대치 법칙이 계산되어 그렇지 않은 경우는, arr1-arr2 의 절대치 혹은 상대치 법칙이 계산된다. </param>
            <param name="norm_type">법칙의 타입</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Norm(OpenCvSharp.CvArr,OpenCvSharp.NormType,OpenCvSharp.CvArr)">
            <summary>
            배열의 절대치 법칙(absolute array norm), 절대치 차분 법칙(absolute difference norm), 상대 가격차분 법칙(relative difference norm)을 계산한다
            </summary>
            <param name="arr2">2번째의 입력 화상.null 의 경우, arr1의 절대치 법칙이 계산되어 그렇지 않은 경우는, arr1-arr2 의 절대치 혹은 상대치 법칙이 계산된다. </param>
            <param name="norm_type">법칙의 타입</param>
            <param name="mask">옵션의 처리 마스크</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Normalize(OpenCvSharp.CvArr)">
            <summary>
            지정의 법칙이 되도록 혹은 값이 지정의 범위가 되도록 배열을 정규화한다
            </summary>
            <param name="dst">출력 배열.인프레이스 처리가 가능.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Normalize(OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            지정의 법칙이 되도록 혹은 값이 지정의 범위가 되도록 배열을 정규화한다
            </summary>
            <param name="dst">출력 배열.인프레이스 처리가 가능.</param>
            <param name="a">출력 배열의 최소치 또는 최대치, 혹은 출력 배열의 법칙.</param>
            <param name="b">출력 배열의 최대치 또는 최소치.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Normalize(OpenCvSharp.CvArr,System.Double,System.Double,OpenCvSharp.NormType)">
            <summary>
            지정의 법칙이 되도록 혹은 값이 지정의 범위가 되도록 배열을 정규화한다
            </summary>
            <param name="dst">출력 배열.인프레이스 처리가 가능.</param>
            <param name="a">출력 배열의 최소치 또는 최대치, 혹은 출력 배열의 법칙.</param>
            <param name="b">출력 배열의 최대치 또는 최소치.</param>
            <param name="norm_type">정규화의 타입. C, L1, L2, MinMax중 1개.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Normalize(OpenCvSharp.CvArr,System.Double,System.Double,OpenCvSharp.NormType,OpenCvSharp.CvArr)">
            <summary>
            지정의 법칙이 되도록 혹은 값이 지정의 범위가 되도록 배열을 정규화한다
            </summary>
            <param name="dst">출력 배열.인프레이스 처리가 가능.</param>
            <param name="a">출력 배열의 최소치 또는 최대치, 혹은 출력 배열의 법칙.</param>
            <param name="b">출력 배열의 최대치 또는 최소치.</param>
            <param name="norm_type">정규화의 타입. C, L1, L2, MinMax중 1개.</param>
            <param name="mask">조작 마스크.특정의 배열 요소만을 정규화하기 위한 마스크.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Not(OpenCvSharp.CvArr)">
            <summary>
            각 배열 요소의 비트 단위의 반전을 실시한다
            </summary>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Or(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 논리합(OR)을 계산한다. 
            dst(I) =src1(I) |src2(I)
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Or(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 논리합(OR)을 계산한다. 
            dst(I) =src1(I) |src2(I) [mask(I)!=0의 경우]
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다). </param>
        </member>
        <member name="M:OpenCvSharp.CvArr.OrS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 논리합(OR)을 계산한다.
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) |value
            </summary>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.OrS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 논리합(OR)을 계산한다. 
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) |value [mask(I)!=0의 경우]
            </summary>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PerspectiveTransform(OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            벡터의 투시 투영 변환을 실시한다
            </summary>
            <param name="dst">3 채널의 부동 소수점형 출력 배열</param>
            <param name="mat">3×3 또는 4×4 의 변환 행렬</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PointPolygonTest(OpenCvSharp.CvPoint2D32f,System.Boolean)">
            <summary>
            점과 윤곽의 관계를 조사한다
            </summary>
            <param name="pt">입력 윤곽에 대해서 조사하는 점</param>
            <param name="measure_dist">0이 아닌의 경우, 이 함수는 주어진 점에 가장 가까운 윤곽까지의 거리를 구한다.</param>
            <returns>점이 윤곽의 안쪽에 있는지, 외측에 있는지, 윤곽상을 타고 있는(혹은, 정점과 일치하고 있다)인지를 판별해, 각각의 경우에 따라 정인가 부나 0을 돌려준다.
            measure_dist=0의 경우, 반환값은 각각+1,-1, 0이다. measure_dist≠0의 경우, 점과 최근 엣지 윤곽까지의 부호 첨부의 거리를 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.PolyLine(OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor)">
            <summary>
            polyline(테두리만의 다각형)를 그린다
            </summary>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 그린다. </param>
            <param name="color">선의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PolyLine(OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            polyline(테두리만의 다각형)를 그린다
            </summary>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 그린다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PolyLine(OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            polyline(테두리만의 다각형)를 그린다
            </summary>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 그린다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PolyLine(OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            polyline(테두리만의 다각형)를 그린다
            </summary>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 그린다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">정점 좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawPolyLine(OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor)">
            <summary>
            polyline(테두리만의 다각형)를 그린다
            </summary>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 그린다. </param>
            <param name="color">선의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawPolyLine(OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            polyline(테두리만의 다각형)를 그린다
            </summary>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 그린다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawPolyLine(OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            polyline(테두리만의 다각형)를 그린다
            </summary>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 그린다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawPolyLine(OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            polyline(테두리만의 다각형)를 그린다
            </summary>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 그린다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">정점 좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Pow(OpenCvSharp.CvArr,System.Double)">
            <summary>
            모든 배열 요소를 누승한다.
            </summary>
            <param name="dst">출력 배열.입력과 같은 타입이 아니면 안된다.</param>
            <param name="power">누승의 지수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PreCornerDetect(OpenCvSharp.CvArr)">
            <summary>
            코너 검출을 위해서, 화상 블록의 최소 고유치를 계산한다. 
            모든 픽셀에 대해서, 인접 블록에 있어서의 도함수의 공변동 행렬의 최소 고유치만을 요구하는 함수이다.
            </summary>
            <param name="corners">코너의 후보를 보존하는 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PreCornerDetect(OpenCvSharp.CvArr,OpenCvSharp.ApertureSize)">
            <summary>
            코너 검출을 위해서, 화상 블록의 최소 고유치를 계산한다. 
            모든 픽셀에 대해서, 인접 블록에 있어서의 도함수의 공변동 행렬의 최소 고유치만을 요구하는 함수이다.
            </summary>
            <param name="corners">코너의 후보를 보존하는 화상</param>
            <param name="aperture_size">Sobel 연산자의 아파체사이즈(cvSobel 참조).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Ptr1D(System.Int32)">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Ptr1D(System.Int32,OpenCvSharp.MatrixType@)">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="type">행렬 요소의 타입</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Ptr2D(System.Int32,System.Int32)">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Ptr2D(System.Int32,System.Int32,OpenCvSharp.MatrixType@)">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="type">행렬 요소의 타입</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Ptr3D(System.Int32,System.Int32,System.Int32)">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Ptr3D(System.Int32,System.Int32,System.Int32,OpenCvSharp.MatrixType@)">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <param name="type">행렬 요소의 타입</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.PtrND(System.Int32[])">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.PtrND(System.Int32[],OpenCvSharp.MatrixType@)">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="idx">요소 인덱스의 배열</param>
            <param name="type">행렬 요소의 타입</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.PtrND(System.Int32[],OpenCvSharp.MatrixType@,System.Boolean)">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="idx">요소 인덱스의 배열</param>
            <param name="type">행렬 요소의 타입</param>
            <param name="create_node">희소 행렬에 대한 옵션의 입력 파라미터. true의 경우, 지정된 요소가 존재하지 않을 때는 요소를 생성한다.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.PtrND(System.Int32[],OpenCvSharp.MatrixType@,System.Boolean,System.Nullable{System.UInt32})">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="idx">요소 인덱스의 배열</param>
            <param name="type">행렬 요소의 타입</param>
            <param name="create_node">희소 행렬에 대한 옵션의 입력 파라미터. true의 경우, 지정된 요소가 존재하지 않을 때는 요소를 생성한다.</param>
            <param name="precalc_hashval">희소 행렬에 대한 옵션의 입력 파라미터.null가 아닐 때, 함수는 노드의 해시치를 재계산하지 않고, 지정된 장소로부터 가져 온다. 이것에 의해, 페어 와이즈 조작의 속도가 향상한다.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.PutText(System.String,OpenCvSharp.CvPoint,OpenCvSharp.CvFont,OpenCvSharp.CvScalar)">
            <summary>
            문자열을 그린다
            </summary>
            <param name="text">그릴려는 문자열</param>
            <param name="org">최초의 문자의 좌하의 좌표</param>
            <param name="font">폰트 구조체</param>
            <param name="color">문자의 색</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PyrDown(OpenCvSharp.CvArr)">
            <summary>
            화상의 다운 샘플링을 실시한다
            </summary>
            <param name="dst">출력 화상.입력 화상의 것1/2한 폭과 높이.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PyrDown(OpenCvSharp.CvArr,OpenCvSharp.CvFilter)">
            <summary>
            화상의 다운 샘플링을 실시한다
            </summary>
            <param name="dst">출력 화상.입력 화상의 것1/2한 폭과 높이.</param>
            <param name="filter">간직해에 사용하는 필터.현재는 CV_GAUSSIAN_5x5 마샬 서포트.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PyrMeanShiftFiltering(OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            평균치 시프트법에 따르는 화상의 부분화 알고리즘의 필터링 부분을 실장한다.
            </summary>
            <param name="dst">출력 화상.입력 화상과 같은 포맷, 같은 사이즈</param>
            <param name="sp">공간 윈도우의 반경</param>
            <param name="sr">색공간(color space) 윈도우의 반경</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PyrMeanShiftFiltering(OpenCvSharp.CvArr,System.Double,System.Double,System.Int32)">
            <summary>
            평균치 시프트법에 따르는 화상의 부분화 알고리즘의 필터링 부분을 실장한다.
            </summary>
            <param name="dst">출력 화상.입력 화상과 같은 포맷, 같은 사이즈</param>
            <param name="sp">공간 윈도우의 반경</param>
            <param name="sr">색공간(color space) 윈도우의 반경</param>
            <param name="max_level">부분화를 위한 피라미드의 최대 레벨</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PyrMeanShiftFiltering(OpenCvSharp.CvArr,System.Double,System.Double,System.Int32,OpenCvSharp.CvTermCriteria)">
            <summary>
            평균치 시프트법에 따르는 화상의 부분화 알고리즘의 필터링 부분을 실장한다.
            </summary>
            <param name="dst">출력 화상.입력 화상과 같은 포맷, 같은 사이즈</param>
            <param name="sp">공간 윈도우의 반경</param>
            <param name="sr">색공간(color space) 윈도우의 반경</param>
            <param name="max_level">부분화를 위한 피라미드의 최대 레벨</param>
            <param name="termcrit">종료 조건.평균치 시프트를 언제까지 반복할까</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PyrUp(OpenCvSharp.CvArr)">
            <summary>
            화상의 업 샘플링을 실시한다
            </summary>
            <param name="dst">출력 화상.입력 화상의 것1/2한 폭과 높이.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.PyrUp(OpenCvSharp.CvArr,OpenCvSharp.CvFilter)">
            <summary>
            화상의 업 샘플링을 실시한다
            </summary>
            <param name="dst">출력 화상.입력 화상의 것1/2한 폭과 높이.</param>
            <param name="filter">간직해에 사용하는 필터.현재는 CV_GAUSSIAN_5x5 마샬 서포트.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.RandShuffle">
            <summary>
            랜덤으로 선택된 배열 요소 페어의 교체를 반복하는 것으로써 행렬을 섞는다(멀티 채널 배열의 경우, 각각의 요소는 복수의 성분을 포함한다).
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.RandShuffle(OpenCvSharp.CvRNG)">
            <summary>
            랜덤으로 선택된 배열 요소 페어의 교체를 반복하는 것으로써 행렬을 섞는다(멀티 채널 배열의 경우, 각각의 요소는 복수의 성분을 포함한다).
            </summary>
            <param name="rng">요소의 셔플로 이용되는 Random Number Generator.포인터가 null의 경우, 일시적인 RNG가 생성되어 이용된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.RandShuffle(OpenCvSharp.CvRNG,System.Double)">
            <summary>
            랜덤으로 선택된 배열 요소 페어의 교체를 반복하는 것으로써 행렬을 섞는다(멀티 채널 배열의 경우, 각각의 요소는 복수의 성분을 포함한다).
            </summary>
            <param name="rng">요소의 셔플로 이용되는 Random Number Generator.포인터가 null의 경우, 일시적인 RNG가 생성되어 이용된다.</param>
            <param name="iter_factor">셔플의 힘을 지정하는 파라미터.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Range(System.Double,System.Double)">
            <summary>
            주어진 범위의 수로 행렬을 묻는다.다음과 같이 행렬을 초기화한다.
            arr(i,j) = (End-Start) * (i*cols(arr) +j) / (cols(arr) *rows(arr)) 
            </summary>
            <param name="start">범위의 하한(범위에 포함된다)</param>
            <param name="end">범위의 상한(범위에 포함되지 않는다)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Rectangle(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Rectangle(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Rectangle(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Rectangle(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Rectangle(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Rectangle(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Rectangle(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Rectangle(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawRect(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawRect(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawRect(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawRect(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawRect(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawRect(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawRect(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.DrawRect(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만, 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Reduce(OpenCvSharp.CvArr)">
            <summary>
            행렬을 벡터에 축소한다
            </summary>
            <param name="dst">행(또는 1열)의 출력 벡터(모든 행/렬로부터 지정된 방법으로 계산된다)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Reduce(OpenCvSharp.CvArr,OpenCvSharp.ReduceDimension)">
            <summary>
            행렬을 벡터에 축소한다
            </summary>
            <param name="dst">행(또는 1열)의 출력 벡터(모든 행/렬로부터 지정된 방법으로 계산된다)</param>
            <param name="dim">배열을 어떻게 축소하는지를 나타내는 인덱스</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Reduce(OpenCvSharp.CvArr,OpenCvSharp.ReduceDimension,OpenCvSharp.ReduceOperation)">
            <summary>
            행렬을 벡터에 축소한다
            </summary>
            <param name="dst">행(또는 1열)의 출력 벡터(모든 행/렬로부터 지정된 방법으로 계산된다)</param>
            <param name="dim">배열을 어떻게 축소하는지를 나타내는 인덱스</param>
            <param name="type">축소 처리의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.ReleaseData">
            <summary>
            배열 데이터를 해방한다. 
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.Remap(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            화상에 대해서 기하 변환을 실시한다. 지정된 맵을 이용해 입력 화상을 이하와 같이 변환한다.
            dst(x,y) &lt;-src(mapx(x,y),mapy(x,y)) .
            다른 기하 변환과 같이, 비정수 좌표치를 가지는 픽셀을 추출하기 위해서, 유저에 의해서 지정된 보간 방법이 이용된다.
            </summary>
            <param name="dst">출력 화상</param>
            <param name="mapx">x좌표 맵 (32FC1 포맷의 화상)</param>
            <param name="mapy">y좌표 맵 (32FC1 포맷의 화상)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Remap(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.Interpolation)">
            <summary>
            화상에 대해서 기하 변환을 실시한다. 지정된 맵을 이용해 입력 화상을 이하와 같이 변환한다.
            dst(x,y) &lt;-src(mapx(x,y),mapy(x,y)) .
            다른 기하 변환과 같이, 비정수 좌표치를 가지는 픽셀을 추출하기 위해서, 유저에 의해서 지정된 보간 방법이 이용된다.
            </summary>
            <param name="dst">출력 화상</param>
            <param name="mapx">x좌표 맵 (32FC1 포맷의 화상)</param>
            <param name="mapy">y좌표 맵 (32FC1 포맷의 화상)</param>
            <param name="flags">보간 방법</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Remap(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.Interpolation,OpenCvSharp.CvScalar)">
            <summary>
            화상에 대해서 기하 변환을 실시한다. 지정된 맵을 이용해 입력 화상을 이하와 같이 변환한다.
            dst(x,y) &lt;-src(mapx(x,y),mapy(x,y)) .
            다른 기하 변환과 같이, 비정수 좌표치를 가지는 픽셀을 추출하기 위해서, 유저에 의해서 지정된 보간 방법이 이용된다.
            </summary>
            <param name="dst">출력 화상</param>
            <param name="mapx">x좌표 맵 (32FC1 포맷의 화상)</param>
            <param name="mapy">y좌표 맵 (32FC1 포맷의 화상)</param>
            <param name="flags">보간 방법</param>
            <param name="fillval">대응을 잡히지 않는 점에 대해서 주는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Repeat(OpenCvSharp.CvArr)">
            <summary>
            출력 배열을 입력 배열로 타일장에 묻는다
            </summary>
            <param name="dst">출력 배열, 화상 또는 행렬.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Reshape(OpenCvSharp.CvMat,System.Int32)">
            <summary>
            오리지날의 배열과 같은 데이터이지만, 다른 형상(다른 채널수, 다른 행수, 또 그 양쪽 모두)을 가지는 CvMat의 헤더를 초기화한다.
            </summary>
            <param name="header">써지는 출력 헤더</param>
            <param name="new_cn">새로운 채널수 .new_cn = 0은 채널수가 변경되어 있지 않은 것을 의미한다.</param>
            <returns>행렬 데이터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Reshape(OpenCvSharp.CvMat,System.Int32,System.Int32)">
            <summary>
            오리지날의 배열과 같은 데이터이지만, 다른 형상(다른 채널수, 다른 행수, 또 그 양쪽 모두)을 가지는 CvMat의 헤더를 초기화한다.
            </summary>
            <param name="header">써지는 출력 헤더</param>
            <param name="new_cn">새로운 채널수 .new_cn = 0은 채널수가 변경되어 있지 않은 것을 의미한다.</param>
            <param name="new_rows">새로운 행수. new_rows = 0은, 행수가 new_cn의 값에 따라 변경할 필요가 있는데도 관련되지 않고, 변경되지 않은 채인 것을 의미한다.</param>
            <returns>행렬 데이터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.ReshapeMatND``1(System.Int32,``0,System.Int32,System.Int32,System.Int32[])">
            <summary>
            cvReshape 의 확장 버젼.
            이것은 다차원 배열을 취급하는 것이 가능(보통 화상과 행렬에 대해서도 사용하는 것이 가능)으로, 한층 더 차원의 변경도 가능하다.
            </summary>
            <typeparam name="T">출력 헤더의 형태</typeparam>
            <param name="sizeof_header">IplImage와 CvMat, CvMatND 각각의 출력 헤더를 구별하기 위한 출력 헤더의 사이즈.</param>
            <param name="header">써지는 출력 헤더</param>
            <param name="new_cn">새로운 채널수 .new_cn = 0은 채널수가 변경되어 있지 않은 것을 의미한다.</param>
            <param name="new_dims">새로운 차원수. new_dims = 0은, 차원수가 같은 까지 있는 것을 의미한다.</param>
            <param name="new_sizes">새로운 차원 사이즈의 배열.요소의 총수는 변화해선 안 되기 때문에, new_dims-1의 값만 사용된다.따라서, new_dims = 1이면 new_sizes는 사용되지 않는다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.ReshapeND``1(``0,System.Int32,System.Int32,System.Int32[])">
            <summary>
            cvReshape 의 확장 버젼.
            이것은 다차원 배열을 취급하는 것이 가능(보통 화상과 행렬에 대해서도 사용하는 것이 가능)으로, 한층 더 차원의 변경도 가능하다.
            </summary>
            <typeparam name="T">출력 헤더의 형태</typeparam>
            <param name="header">써지는 출력 헤더</param>
            <param name="new_cn">새로운 채널수 .new_cn = 0은 채널수가 변경되어 있지 않은 것을 의미한다.</param>
            <param name="new_dims">새로운 차원수. new_dims = 0은, 차원수가 같은 까지 있는 것을 의미한다.</param>
            <param name="new_sizes">새로운 차원 사이즈의 배열.요소의 총수는 변화해선 안 되기 때문에, new_dims-1의 값만 사용된다.따라서, new_dims = 1이면 new_sizes는 사용되지 않는다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Resize(OpenCvSharp.CvArr)">
            <summary>
            화상의 사이즈 변경을 실시한다 (바이리니아 보간)
            </summary>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Resize(OpenCvSharp.CvArr,OpenCvSharp.Interpolation)">
            <summary>
            화상의 사이즈 변경을 실시한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="interpolation">보간 방법</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SampleLine(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint[]@,System.Int32)">
            <summary>
            라스터 표현의 선분을 구성하는 점을 샘플링 한다
            </summary>
            <param name="pt1">선분의 시점</param>
            <param name="pt2">선분의 종점</param>
            <param name="buffer">선분상의 점을 보존하기 위한 버퍼</param>
            <param name="connectivity">선분의 접속성.4 또는 8.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.ScaleAdd(OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            스케일링 된 배열과 또 하나의 배열의 합을 계산한다.
            dst(I) =src1(I) *scale + src2(I)
            </summary>
            <param name="scale">1번째의 배열을 위한 스케일 팩터</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.MulAddS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            스케일링 된 배열과 또 하나의 배열의 합을 계산한다 (cvScaleAdd의 앨리어스(alias)).
            dst(I) =src1(I) *scale + src2(I)
            </summary>
            <param name="scale">1번째의 배열을 위한 스케일 팩터</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Set(OpenCvSharp.CvScalar)">
            <summary>
            스칼라치 value 를, 배열의 선택된 각 요소에 카피한다.
            </summary>
            <param name="value">배열을 묻는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Set(OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            스칼라치 value 를, 배열의 선택된 각 요소에 카피한다.
            mask(I) != null 의 경우, arr(I) =value. 
            </summary>
            <param name="value">배열을 묻는 값</param>
            <param name="mask">8 비트 싱글 채널 배열의 처리 마스크.배열의 변경하는 요소를 지정한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Set1D(System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            새로운 값을 지정한 배열 요소에 할당한다. 
            희소 배열의 경우, 노드가 존재하지 않으면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Set2D(System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            새로운 값을 지정한 배열 요소에 할당한다. 
            희소 배열의 경우, 노드가 존재하지 않으면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Set3D(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            새로운 값을 지정한 배열 요소에 할당한다. 
            희소 배열의 경우, 노드가 존재하지 않으면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SetND(OpenCvSharp.CvScalar,System.Int32[])">
            <summary>
            새로운 값을 지정한 배열 요소에 할당한다. 
            희소 배열의 경우, 노드가 존재하지 않으면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="value">할당하는 값</param>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SetData``1(``0[],System.Int32)">
            <summary>
            유저 데이터를 배열의 헤더에 할당한다. 
            헤더는, 함수 cvCreate*Header, 함수 cvInit*Header 혹은 함수 cvMat(행렬의 경우)를 이용하고, 미리 초기화 되는 것이 당연하다.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">유저 데이터</param>
            <param name="step">바이트 단위로 나타내진 행의 길이</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SetIdentity">
            <summary>
            스케일 된 단위행렬을 이용한 초기화를 실시한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.SetIdentity(OpenCvSharp.CvScalar)">
            <summary>
            스케일 된 단위행렬을 이용한 초기화를 실시한다
            </summary>
            <param name="value">대각 성분의 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SetReal1D(System.Int32,System.Double)">
            <summary>
            싱글 채널의 배열의 지정한 요소에 새로운 값을 할당한다.배열이 멀티 채널 때는, 런타임 에러가 일어난다.
            희소 배열의 경우에, 노드가 존재해 되면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SetReal2D(System.Int32,System.Int32,System.Double)">
            <summary>
            싱글 채널의 배열의 지정한 요소에 새로운 값을 할당한다.배열이 멀티 채널 때는, 런타임 에러가 일어난다.
            희소 배열의 경우에, 노드가 존재해 되면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SetReal3D(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            싱글 채널의 배열의 지정한 요소에 새로운 값을 할당한다.배열이 멀티 채널 때는, 런타임 에러가 일어난다.
            희소 배열의 경우에, 노드가 존재해 되면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SetRealND(System.Double,System.Int32[])">
            <summary>
            싱글 채널의 배열의 지정한 요소에 새로운 값을 할당한다.배열이 멀티 채널 때는, 런타임 에러가 일어난다.
            희소 배열의 경우에, 노드가 존재해 되면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="value">할당하는 값</param>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SetZero">
            <summary>
            배열을 클리어 한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.Zero">
            <summary>
            배열을 클리어 한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.Smooth(OpenCvSharp.CvArr)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Smooth(OpenCvSharp.CvArr,OpenCvSharp.SmoothType)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="smoothtype">평활화의 방법</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Smooth(OpenCvSharp.CvArr,OpenCvSharp.SmoothType,System.Int32)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="smoothtype">평활화의 방법</param>
            <param name="param1">평활화 처리의 파라미터 1</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Smooth(OpenCvSharp.CvArr,OpenCvSharp.SmoothType,System.Int32,System.Int32)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="smoothtype">평활화의 방법</param>
            <param name="param1">평활화 처리의 파라미터 1</param>
            <param name="param2">평활화 처리의 파라미터 2.스케일링 있어/없음의 단순 평활 또는 가우시안 평활화의 경우, param2 가 0 때는 param1 에 세트 된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Smooth(OpenCvSharp.CvArr,OpenCvSharp.SmoothType,System.Int32,System.Int32,System.Double)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="smoothtype">평활화의 방법</param>
            <param name="param1">평활화 처리의 파라미터 1</param>
            <param name="param2">평활화 처리의 파라미터 2.스케일링 있어/없음의 단순 평활 또는 가우시안 평활화의 경우, param2 가 0 때는 param1 에 세트 된다.</param>
            <param name="param3">가우시안 평활화의 경우, 이 파라미터가 가우시안 sigma(표준 편차)를 나타낸다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Smooth(OpenCvSharp.CvArr,OpenCvSharp.SmoothType,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="smoothtype">평활화의 방법</param>
            <param name="param1">평활화 처리의 파라미터 1</param>
            <param name="param2">평활화 처리의 파라미터 2.스케일링 있어/없음의 단순 평활 또는 가우시안 평활화의 경우, param2 가 0 때는 param1 에 세트 된다.</param>
            <param name="param3">가우시안 평활화의 경우, 이 파라미터가 가우시안 sigma(표준 편차)를 나타낸다.</param>
            <param name="param4">비정방형의 가우시안카넬을 사용하는 경우, 수직 방향으로 다른 sigma 치(param3와 다른 값) 지정하기 위해서 이용된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Sobel(OpenCvSharp.CvArr,System.Int32,System.Int32)">
            <summary>
            확장 Sobel 연산자를 이용해 1차, 2차, 3차 또는 혼합 차수의 미분 화상을 계산하는 [aperture_size=3]
            </summary>
            <param name="dst">출력 화상</param>
            <param name="xorder">x-도함수의 차수</param>
            <param name="yorder">y-도함수의 차수</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Sobel(OpenCvSharp.CvArr,System.Int32,System.Int32,OpenCvSharp.ApertureSize)">
            <summary>
            확장 Sobel 연산자를 이용해 1차, 2차, 3차 또는 혼합 차수의 미분 화상을 계산한다
            </summary>
            <param name="dst">출력 화상</param>
            <param name="xorder">x-도함수의 차수</param>
            <param name="yorder">y-도함수의 차수</param>
            <param name="aperture_size">확장 Sobel 커넬의 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Sort">
            <summary>
            Sorts the rows/cols of an array ascending/descending
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.Sort(OpenCvSharp.CvArr)">
            <summary>
            Sorts the rows/cols of an array ascending/descending
            </summary>
            <param name="dst">Optional destination array</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Sort(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            Sorts the rows/cols of an array ascending/descending
            </summary>
            <param name="dst">Optional destination array</param>
            <param name="idxmat">Index matrix</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Sort(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.SortFlag)">
            <summary>
            Sorts the rows/cols of an array ascending/descending
            </summary>
            <param name="dst">Optional destination array</param>
            <param name="idxmat">Index matrix</param>
            <param name="flags">Sorting parameter</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Split(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            멀티 채널의 배열을, 복수의 싱글 채널의 배열에 분할한다.또는, 배열로부터 하나의 채널을 꺼낸다.
            </summary>
            <param name="dst0">출력 채널 1</param>
            <param name="dst1">출력 채널 2</param>
            <param name="dst2">출력 채널 3</param>
            <param name="dst3">출력 채널 4</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SquareAcc(OpenCvSharp.CvArr)">
            <summary>
            누산기에 입력 화상의 제곱을 가산한다
            </summary>
            <param name="sqsum">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형. </param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SquareAcc(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            누산기에 입력 화상의 제곱을 가산한다
            </summary>
            <param name="sqsum">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형. </param>
            <param name="mask">옵션의 처리 마스크</param>        
        </member>
        <member name="M:OpenCvSharp.CvArr.StartFindContours(OpenCvSharp.CvMemStorage)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.StartFindContours(OpenCvSharp.CvMemStorage,System.Int32)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size"></param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.StartFindContours(OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀀스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.StartFindContours(OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀀스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
            <param name="method">근사 수법.cvFindContours와 같이, 단 CV_LINK_RUNS 는 사용 불가. </param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.StartFindContours(OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain,OpenCvSharp.CvPoint)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀀스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
            <param name="method">근사 수법.cvFindContours와 같이, 단 CV_LINK_RUNS 는 사용 불가. </param>
            <param name="offset">ROI의 오프셋.cvFindContours를 참조. </param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Sub(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 감산을 실시한다. 
            dst(I) =src1(I) -src2(I) 
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Sub(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 감산을 실시한다.
            dst(I) =src1(I) -src2(I) [mask(I)!=0 의 경우]
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다). </param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SubS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            배열 요소로부터 스칼라를 감산한다.
            dst(I) = src(I) -value 
            </summary>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SubS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열 요소로부터 스칼라를 감산한다.
            dst(I) = src(I) -value [mask(I)!=0]
            </summary>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SubRS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            스칼라로부터 배열 요소를 감산한다.
            dst(I) =value-src(I)
            </summary>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SubRS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            스칼라로부터 배열 요소를 감산한다.
            dst(I) =value-src(I) [mask(I)!=0 의 경우]
            </summary>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Sum">
            <summary>
            배열 요소의 총 합을 계산한다.
            배열의 타입이 IplImage 로 COI 가 세트 되고 있는 경우, 지정된 채널만을 처리해, 총 합을 1번째의 스칼라치(S0)로서 보존한다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.SVD(OpenCvSharp.CvArr)">
            <summary>
            부동 소수점형의 실수 행렬의 특이치 분해를 실시한다.
            행렬 A를 두 개의 직교 행렬과 하나의 대일본 장기 말열의 적 으로 분해한다.A=U*W*VT
            </summary>
            <param name="W">특이치 행렬의 결과 (M×N 또는 N×N) 또는 벡터(N×1).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SVD(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            부동 소수점형의 실수 행렬의 특이치 분해를 실시한다.
            행렬 A를 두 개의 직교 행렬과 하나의 대일본 장기 말열의 적 으로 분해한다.A=U*W*VT
            </summary>
            <param name="W">특이치 행렬의 결과 (M×N 또는 N×N) 또는 벡터(N×1).</param>
            <param name="U">임의의 왼쪽 직교 행렬 (M×M 또는 M×N).만약 CV_SVD_U_T가 지정되었을 경우, 위에서 말한, 행과 열의 수는 바뀐다.</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SVD(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            부동 소수점형의 실수 행렬의 특이치 분해를 실시한다.
            행렬 A를 두 개의 직교 행렬과 하나의 대일본 장기 말열의 적 으로 분해한다.A=U*W*VT
            </summary>
            <param name="W">특이치 행렬의 결과 (M×N 또는 N×N) 또는 벡터(N×1).</param>
            <param name="U">임의의 왼쪽 직교 행렬 (M×M 또는 M×N).만약 CV_SVD_U_T가 지정되었을 경우, 위에서 말한, 행과 열의 수는 바뀐다.</param>
            <param name="V">임의의 오른쪽 직교 행렬(N×N).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.SVD(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.SVDFlag)">
            <summary>
            부동 소수점형의 실수 행렬의 특이치 분해를 실시한다.
            행렬 A를 두 개의 직교 행렬과 하나의 대일본 장기 말열의 적 으로 분해한다.A=U*W*VT
            </summary>
            <param name="W">특이치 행렬의 결과 (M×N 또는 N×N) 또는 벡터(N×1).</param>
            <param name="U">임의의 왼쪽 직교 행렬 (M×M 또는 M×N).만약 CV_SVD_U_T가 지정되었을 경우, 위에서 말한, 행과 열의 수는 바뀐다.</param>
            <param name="V">임의의 오른쪽 직교 행렬(N×N).</param>
            <param name="flags">조작 플래그</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Threshold(OpenCvSharp.CvArr,System.Double,System.Double,OpenCvSharp.ThresholdType)">
            <summary>
            싱글 채널의 배열에 대해서, 이진화를 실시한다
            </summary>
            <param name="dst">출력 배열.src 와 같은 데이터 타입, 또는 8비트. </param>
            <param name="threshold">임계치</param>
            <param name="max_value">threshold_type 가 Binary 와 BinaryInv 때에 사용하는 최대치</param>
            <param name="threshold_type">이진 처리의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Trace">
            <summary>
            행렬의 트레이스(대각 성분의 화)를 돌려준다
            </summary>
            <returns>대각 성분의 화</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Transpose(OpenCvSharp.CvArr)">
            <summary>
            행렬의 전치를 실시한다.
            </summary>
            <param name="dst">출력 행렬</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.T(OpenCvSharp.CvArr)">
            <summary>
            행렬의 전치를 실시한다.
            </summary>
            <param name="dst">출력 행렬</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Undistort2(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            반경 방향이나 원주 방향의 렌즈 일그러짐을 보정하기 위해서 화상을 변환한다.
            </summary>
            <param name="dst">출력 화상(보정이 끝난 상태)</param>
            <param name="intrinsic_matrix">카메라 내부 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">일그러짐 계수 벡터. 4x1 또는 1x4 [k1, k2, p1, p2]. </param>
        </member>
        <member name="M:OpenCvSharp.CvArr.WarpPerspective(OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            화상의 투시 변환을 실시한다.
            </summary>
            <param name="dst">출력 화상</param>
            <param name="map_matrix">3×3 의 변환 행렬</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.WarpPerspective(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.Interpolation)">
            <summary>
            화상의 투시 변환을 실시한다.
            </summary>
            <param name="dst">출력 화상</param>
            <param name="map_matrix">3×3 의 변환 행렬</param>
            <param name="flags">보간 방법</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.WarpPerspective(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.Interpolation,OpenCvSharp.CvScalar)">
            <summary>
            화상의 투시 변환을 실시한다.
            </summary>
            <param name="dst">출력 화상</param>
            <param name="map_matrix">3×3 의 변환 행렬</param>
            <param name="flags">보간 방법</param>
            <param name="fillval">대응을 잡히지 않는 점에 대해서 주는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Watershed(OpenCvSharp.CvArr)">
            <summary>
            watershed 알고리즘에 의한 화상의 부분화를 실시한다.
            화상을 이 함수에 건네주기 전에, 유저는 대략적으로 화상 markers중의 처리 대상 영역을, 정(>0)의 인덱스를 이용해 단락지어 두지 않으면 안 된다.
            </summary>
            <param name="markers">입출력 화상.32비트 싱글 채널의 마커 화상(맵).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Xor(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 배타적 논리합(XOR)을 계산한다. 
            dst(I) =src1(I) ^src2(I)
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Xor(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 배타적 논리합(XOR)을 계산한다. 
            dst(I) =src1(I) ^src2(I) [mask(I)!=0의 경우]
            </summary>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다). </param>
        </member>
        <member name="M:OpenCvSharp.CvArr.XorS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 배타적 논리합(XOR)을 계산한다.
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) ^value
            </summary>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.XorS(OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 배타적 논리합(XOR)을 계산한다. 
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) ^value [mask(I)!=0의 경우]
            </summary>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.#ctor">
            <summary>
            디폴트 constructor　 　
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.#ctor(System.Boolean)">
            <summary>
            해제의 가부를 지정해 초기화
            </summary>
            <param name="isEnabledDispose">GC로 해제한다면 true</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughLinesStandard(System.Double,System.Double,System.Int32)">
            <summary>
            허프(Hough) 변환으로, method=CV_HOUGH_STANDARD를 이용해 2진 화상으로부터 직선을 검출한다
            </summary>
            <param name="rho">거리 해상도(1 픽셀당 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">쓰레스홀드 파라미터. 대응하는 값이 threshold보다 큰 경우만 추출된 선이 돌려주어진다.</param>
            <returns>검출한 직선의 극좌표 형식의 배열</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughLinesStandard(System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            허프(Hough) 변환으로, method=CV_HOUGH_STANDARD를 이용해 2진 화상으로부터 직선을 검출한다
            </summary>
            <param name="rho">거리 해상도(1 픽셀당 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">쓰레스홀드 파라미터. 대응하는 값이 threshold보다 큰 경우만 추출된 선이 돌려주어진다.</param>
            <param name="param1">각 알고리즘에 대응한 1번째의 파라미터 표준적 하후 변환에서는 사용하지 않는다(0). 확률적 허프 변환에서는 최소의 선의 길이. 마르치스켈일 허프 변환에서는 거리 해상도 rho의 제수.(거친 거리 해상도에서는 rho 이며, 상세한 해상도에서는 (rho / param1)된다).</param>
            <param name="param2">각 알고리즘에 대응한 2번째의 파라미터 표준적 하후 변환에서는 사용하지 않는다(0). 확률적 허프 변환에서는 동일 선상에 존재하는 선분으로서 취급하는(즉, 그것들을 통합해도 문제 없다), 두 개의 선분의 최대의 간격. 마르치스케일 허프 변환에서는 각도 해상도 theta의 제수. (거친 각도 해상도에서는 theta 이며, 상세한 해상도에서는 (theta / param2)된다). </param>
            <returns>검출한 직선의 극좌표 형식의 배열</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughLinesProbabilistic(System.Double,System.Double,System.Int32)">
            <summary>
            허프(Hough) 변환으로 method=CV_HOUGH_PROBABILISTIC를 이용해 2진 화상으로부터 직선을 검출한다
            </summary>
            <param name="rho">거리 해상도(1 픽셀당 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">쓰레스홀드 파라미터. 대응하는 값이 threshold보다 큰 경우만 추출된 선이 돌려주어진다.</param>
            <returns>검출한 직선을 양단의 점으로 나타낸 형식의 배열</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.HoughLinesProbabilistic(System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            허프(Hough) 변환으로 method=CV_HOUGH_PROBABILISTIC를 이용해 2진 화상으로부터 직선을 검출한다
            </summary>
            <param name="rho">거리 해상도(1 픽셀당 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">쓰레스홀드 파라미터. 대응하는 값이 threshold보다 큰 경우만 추출된 선이 돌려주어진다.</param>
            <param name="param1">각 알고리즘에 대응한 1번째의 파라미터.표준적 허프 변환에서는 사용하지 않는다(0). 확률적 허프 변환에서는 최소의 선의 길이.마르치 스케일 허프 변환에서는 거리 해상도 rho의 제수. (거친 거리 해상도에서는 rho 이며 상세한 해상도에서는 (rho / param1)된다).</param>
            <param name="param2">각 알고리즘에 대응한 2번째의 파라미터.표준적 허프 변환에서는 사용하지 않는다(0). 확률적 허프 변환에서는 동일 선상에 존재하는 선분으로서 취급하는(즉, 그것들을 통합해도 문제 없다), 두 개의 선분의 최대의 간격. 마르치 스케일 허프 변환에서는 각도 해상도 theta의 제수. (거친 각도 해상도에서는 theta 이며 상세한 해상도에서는 (theta / param2)된다). </param>
            <returns>검출한 직선을 양단의 점으로 나타낸 형식, 의 배열</returns>
        </member>
        <member name="M:OpenCvSharp.CvArr.Merge(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            복수의 싱글 채널의 배열로부터 멀티 채널 배열을 구성한다. 또는, 배열에 하나의 싱글 채널을 삽입한다. (cvMerge)
            </summary>
            <param name="src0">입력 배열 1</param>
            <param name="src1">입력 배열 2</param>
            <param name="src2">입력 배열 3</param>
            <param name="src3">입력 배열 4</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.CvtPlaneToPix(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            복수의 싱글 채널의 배열로부터 멀티 채널 배열을 구성한다. 또는, 배열에 하나의 싱글 채널을 삽입한다. (cvCvtPlaneToPix)
            </summary>
            <param name="src0">입력 배열 1</param>
            <param name="src1">입력 배열 2</param>
            <param name="src2">입력 배열 3</param>
            <param name="src3">입력 배열 4</param>
        </member>
        <member name="M:OpenCvSharp.CvArr.RandArr(OpenCvSharp.CvRNG,OpenCvSharp.DistributionType,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar)">
            <summary>
            한가지 모양 또는 정규 분포의 난수로 출력 배열을 묻는다 
            </summary>
            <param name="rng">cvRNG에 의해서 초기화된 RNG 상태</param>
            <param name="dist_type">분포의 타입</param>
            <param name="param1">분포의 제일 파라미터. 한가지 모양 분포에서 발생하는 난수의 하한치(이 값을 포함한다)이다. 정규 분포에서는, 난수의 평균치이다.</param>
            <param name="param2">분포의 제2 파라미터. 한가지 모양 분포에서 발생하는 난수의 상한치(이 값은 포함하지 않는다)이다. 정규 분포에서는, 난수의 표준 편차이다.</param> 
        </member>
        <member name="M:OpenCvSharp.CvArr.SaveImage(System.String)">
            <summary>
            화상을 지정한 파일에 저장한다. 화상 포맷은 filename 의 확장자(extension)에 의해 결정된다.
            이 함수로 저장할 수 있는 것은 8비트 1채널, 혹은 8비트 3채널('BGR'의 순서) 화상 뿐이다.
            </summary>
            <param name="filename">파일명</param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvArr.Dims">
            <summary>
            배열의 차원수를 취득한다 
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvArr.ElemType">
            <summary>
            배열 요소의 타입을 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvArr.ElemChannels">
            <summary>
            배열 요소의 채널수를 취득한다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvArr.ElemDepth">
            <summary>
            배열 요소의 비트 심도를 취득한다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvArr.Item(System.Int32)">
            <summary>
            특정의 배열 요소를 돌려준다 (cvGet/Set1D 상당). 
            저속으로 동작한다 고속으로 액세스 하고 싶은 경우는 이 메소드말고 포인터를 이용할 것.
            </summary>
            <param name="idx0">요소 인덱스 0을 기준으로 한 제1 성분.</param>
        </member>
        <member name="P:OpenCvSharp.CvArr.Item(System.Int32,System.Int32)">
            <summary>
            특정의 배열 요소를 돌려준다 (cvGet/Set2D 상당). 
            저속으로 동작. 고속으로 액세스 하고 싶은 경우는 이 메소드 말고 포인터를 이용할 것.
            </summary>
            <param name="idx0">요소 인덱스 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스 0을 기준으로 한 제2 성분.</param>
        </member>
        <member name="P:OpenCvSharp.CvArr.Item(System.Int32,System.Int32,System.Int32)">
            <summary>
            특정의 배열 요소를 돌려준다 (cvGet/Set3D 상당). 
            저속으로 동작. 고속으로 액세스 하고 싶은 경우는 이 메소드 말고 포인터를 이용할 것.
            </summary>
            <param name="idx0">요소 인덱스 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스 0을 기준으로 한 제3 성분.</param>
        </member>
        <member name="F:OpenCvSharp.CvTreeNode`1.SizeOf">
            <summary>
            sizeof(CvTreeNode)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvTreeNode`1._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvTreeNode`1.#ctor">
            <summary>
            디폴트 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvTreeNode`1.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvTreeNode*</param>
        </member>
        <member name="M:OpenCvSharp.CvTreeNode`1.Initialize(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvTreeNode*</param>
        </member>
        <member name="M:OpenCvSharp.CvTreeNode`1.InsertNodeIntoTree(OpenCvSharp.CvTreeNode{`0},OpenCvSharp.CvTreeNode{`0})">
            <summary>
            트리에 새로운 노드를 추가한다
            </summary>
            <param name="parent">트리내에 이미 존재하고 있는 부모노드.</param>
            <param name="frame">톱 레벨 노드.parent 와 frame이 같은 경우, node의 v_prev 필드에는, parent 가 아니고, null가 세트 된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvTreeNode`1.RemoveNodeFromTree(OpenCvSharp.CvTreeNode{`0})">
            <summary>
            트리로부터 노드를 삭제한다
            </summary>
            <param name="frame">톱 레벨 노드.node->v_prev = null 한편 node->h_prev = null (즉, node 가 frame의 최초의 자식 노드이다)인 경우, 
            frame->v_next 는 node->h_next 에 세트 된다 (즉, 최초의 자식 노드나 frame이 변경된다).</param>
        </member>
        <member name="M:OpenCvSharp.CvTreeNode`1.TreeToNodeSeq(System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            모든 노드에의 포인터를 하나의 시퀀스에 모은다
            </summary>
            <param name="header_size">작성한 시퀀스의 헤드사이즈(sizeof(CvSeq)가 이용되는 것이 많다).</param>
            <param name="storage">시퀀스를 위한 컨테이너.</param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvTreeNode`1.Flags">
            <summary>
            여러가지 플래그
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTreeNode`1.HeaderSize">
            <summary>
            시퀸스 헤드 사이즈
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTreeNode`1.HPrev">
            <summary>
            하나전의 시퀸스 포인터
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTreeNode`1.HNext">
            <summary>
            하나후의 시퀸스 포인터
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTreeNode`1.VPrev">
            <summary>
            하나전의 시퀸스 포인터(두번째 구조에 따라서 의미가 다르다)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTreeNode`1.VNext">
            <summary>
            하나후의 시퀸스 포인터(두번째 구조에 따라서 의미가 다르다)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSeq.SizeOf">
            <summary>
            sizeof(CvSeq)를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSeq._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSeq._storage">
            <summary>
            to keep alive storage
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeq.#ctor">
            <summary>
            디폴트 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeq.#ctor(OpenCvSharp.SeqType,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            시퀸스 생성. header_size=sizeof(CvSeq)
            </summary>
            <param name="seq_flags">생성된 시퀸스의 플래그. 생성된 시퀸스가, 특정의 시퀸스 타입을 인수로 취하는 함수에 일절 건네받지 않는 경우는, 이 값에 0을 지정해도 상관없다.</param>
            <param name="elem_size">시퀸스의 요소 사이즈(바이트 단위). 사이즈는 시퀸스 타입과 일치하여야 한다. 예를 들면, 점군의 시퀸스를 작성하는 경우 요소 타입에 CV_SEQ_ELTYPE_POINT를 지정해, 파라미터 elem_size 는 sizeof(CvPoint)와 동일하지 않으면 안 된다.</param>
            <param name="storage">시퀸스가 보존되는 장소</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.#ctor(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            시퀸스를 생성한다
            </summary>
            <param name="seq_flags">생성된 시퀸스의 플래그.생성된 순서가, 특정의 순서 타입을 인수로 취하는 함수에 일절 건네받지 않는 경우는, 이 값에 0을 지정해도 상관없다.</param>
            <param name="header_size">시퀸스의 헤드 사이즈.sizeof(CvSeq) 이상이 아니면 안된다. 또, 특별한 타입인가 그 확장이 지시받고 있는 경우, 그 타입은 기본 타입의 헤더와 합치하고 있지 않으면 안 된다.</param>
            <param name="elem_size">시퀸스의 요소 사이즈(바이트 단위). 사이즈는 시퀸스 타입과 일치하여야 한다. 예를 들면, 점군의 시퀸스를 작성하는 경우 요소 타입에 CV_SEQ_ELTYPE_POINT를 지정해, 파라미터 elem_size 는 sizeof(CvPoint)와 동일하지 않으면 안 된다.</param>
            <param name="storage">시퀸스가 보존되는 장소</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr">struct CvSeq*</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Initialize(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvSeq*</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeq.CalcPGH(OpenCvSharp.CvHistogram)">
            <summary>
            윤곽의 pair-wise geometrical histogram 를 구한다
            </summary>
            <param name="hist">구해진 히스토그램. 반드시 2 차원이 된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.ClearSeq">
            <summary>
            시퀀스를 클리어 한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Clone">
            <summary>
            입력 행렬의 카피를 작성해 돌려준다 (cvCloneSeq).
            </summary>
            <returns>카피된 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Clone(OpenCvSharp.CvMemStorage)">
            <summary>
            입력 행렬의 카피를 작성해 돌려준다 (cvCloneSeq).
            </summary>
            <param name="storage">새로운 시퀸스 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 입력 순서에 포함되는 스토리지를 사용한다.</param>
            <returns>카피된 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.System#ICloneable#Clone">
            <summary>
            ICloneable.Clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.ContoursMoments(OpenCvSharp.CvMoments)">
            <summary>
            Alias for Moments with CvSeq contours
            </summary>
            <param name="moments"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.CreateContourTree(OpenCvSharp.CvMemStorage,System.Double)">
            <summary>
            윤곽의 계층적 표현을 생성한다
            </summary>
            <param name="storage">결과의 트리의 출력처</param>
            <param name="threshold">근사 정도</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.ElemIdx``1(``0)">
            <summary>
            지정된 시퀸스 요소의 인덱스를 돌려준다 (cvSeqElemIdx).
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="element">시퀸스 요소</param>
            <returns>지정된 시퀸스 요소의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.ElemIdx``1(``0,OpenCvSharp.CvSeqBlock@)">
            <summary>
            지정된 시퀸스의 요소의 인덱스를 돌려준다 (cvSeqElemIdx).
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="element">시퀸스 요소</param>
            <param name="block">요소를 포함한 시퀸스 블록의 주소가 이 장소에 보존된다.</param>
            <returns>지정된 시퀸스 요소의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.GetSeqElem``1(System.Int32)">
            <summary>
            주어진 인덱스를 가지는 요소를 시퀀스중에서 구해 그 요소를 돌려준다.
            </summary>
            <typeparam name="T">출력 오브젝트의 형태</typeparam>
            <param name="index">요소의 인덱스. 부(거짓)의 인덱스의 지정도 가능하고, 예를 들면,-1은 시퀀스의 마지막 요소,-2는 마지막 하나전을 가리킨다.</param>
            <returns>주어진 인덱스를 가지는 요소.요소가 발견되지 않는 경우는 null.</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Insert``1(System.Int32,``0)">
            <summary>
            시퀸스안에 요소를 삽입한다 (cvSeqInsert).
            </summary>
            <typeparam name="T">추가하는 요소의 형태. 원시적형인가, OpenCV의 구조체(CvPoint 등).</typeparam>
            <param name="before_index">요소가 삽입되는 인덱스(이 인덱스의 전에 삽입된다)</param>
            <param name="element">추가되는 요소. 원시적형인가, OpenCV의 구조체(CvPoint 등).</param>
            <returns>추가된 요소</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.InsertSlice(System.Int32,OpenCvSharp.CvArr)">
            <summary>
            시퀸스내에 배열을 삽입한다 (cvSeqInsertSlice).
            </summary>
            <param name="before_index">배열이 삽입되는 장소에의 인덱스(인덱스의 전에 삽입된다).</param>
            <param name="from_arr">추가되는 요소의 배열.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Invert">
            <summary>
            시퀸스 요소의 순서를 반전시킨다 (cvSeqInvert).
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Remove(System.Int32)">
            <summary>
            주어진 인덱스를 가지는 요소를 삭제한다 (cvSeqRemove).
            </summary>
            <param name="index">삭제되는 요소의 인덱스</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.RemoveSlice(OpenCvSharp.CvSlice)">
            <summary>
            시퀸스 슬라이스를 삭제한다 (cvSeqRemoveSlice).
            </summary>
            <param name="slice">삭제하는 시퀸스의 일부분. </param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Partition(OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq@,OpenCvSharp.CvCmpFunc)">
            <summary>
            데이터 순서를 동치류(같은 클래스에 속한다고 정의된 데이터군)에 분할한다
            </summary>
            <param name="storage">동치류로서 분할된 시퀀스의 보존 영역.null의 경우는, seq->storage 를 사용한다.</param>
            <param name="labels">출력 파라미터.입력 시퀀스의 각 요소에 할당해진(분할 결과를 나타낸다) 0으로부터 시작되는 라벨 시퀀스의 포인터의 포인터.</param>
            <param name="is_equal">2개의 시퀀스 요소가 같은 클래스인 경우, 관계 함수는 0이외를 돌려준다. 그렇지 않으면 0을 돌려준다.분할 알고리즘은, 동치 기준으로서 관계 함수의 transitive closure을 이용한다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Pop``1">
            <summary>
            시퀸스의 말미로부터 하나의 요소를 삭제한다 (cvSeqPop).
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <returns>삭제한 요소</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.PopFront``1">
            <summary>
            시퀸스의 선두로부터 하나의 요소를 삭제한다 (cvSeqPopFront).
            </summary>
            <typeparam name="T">출력처 오브젝트의 형태</typeparam>
            <returns>삭제한 요소를 카피하는 출력처</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.PopMulti``1(System.Int32,OpenCvSharp.InsertPosition)">
            <summary>
            복수의 요소를 시퀸스의 어느 쪽인가의 단(선두나 말미)으로부터 삭제한다 (cvSeqPopMulti).
            </summary>
            <typeparam name="T">삭제하는 요소의 형태</typeparam>
            <param name="count">삭제되는 요소수.</param>
            <param name="in_front">변경하는 시퀸스의 구석을 지정하는 플래그.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Push">
            <summary>
            시퀸스의 말미에 요소 하나 분의 영역을 확보한다 (cvSeqPush).
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Push``1(System.Nullable{``0})">
            <summary>
            시퀸스의 말미에 요소를 추가해, 할당할 수 있었던 요소를 돌려준다 (cvSeqPush).
            입력의 element가 null의 경우, 이 함수는 단지 요소 하나 분의 영역을 확보한다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="element">추가되는 요소. 원시적형인가, OpenCV의 구조체(CvPoint 등).</param>
            <returns>추가된 요소</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.PushFront``1(System.Nullable{``0})">
            <summary>
            순서의 선두에 요소를 추가해, 할당할 수 있었던 요소에의 포인터를 돌려준다 (cvSeqPushFront).
            입력의 element 가 null 의 경우, 이 함수는 단지 요소 하나 분의 영역을 확보한다.
            </summary>
            <typeparam name="T">추가하는 요소의 형태. 원시적형인가, OpenCV의 구조체(CvPoint 등).</typeparam>
            <param name="element">추가되는 요소. 원시적형인가, OpenCV의 구조체(CvPoint 등).</param>
            <returns>추가된 요소</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.PushMulti``1(``0[],OpenCvSharp.InsertPosition)">
            <summary>
            복수의 요소를 순서의 어느 쪽인가의단(선두나 말미)에 추가한다 (cvSeqPushMulti).
            </summary>
            <typeparam name="T">추가하는 요소의 형태</typeparam>
            <param name="elements">추가되는 요소군.</param>
            <param name="in_front">변경하는 순서의 구석을 지정하는 플래그.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Search(System.IntPtr,OpenCvSharp.CvCmpFunc,System.Boolean,System.Int32@)">
            <summary>
            시퀸스중에서 요소를 검색한다 (cvSeqSearch).
            </summary>
            <param name="elem">검색하는 요소</param>
            <param name="func">요소의 관계에 따르고, 부(거짓의값)·0·정의 값을 돌려주는 비교 함수</param>
            <param name="is_sorted">시퀸스의 소트가 끝난 상태인가 아닌가를 나타내는 플래그</param>
            <param name="elem_idx">출력 파라미터.발견된 요소의 인덱스.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.SetBlockSize(System.Int32)">
            <summary>
            시퀸스의 블록 사이즈를 설정한다
            </summary>
            <param name="delta_elems">시퀸스 요소의 블록 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Slice(OpenCvSharp.CvSlice)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다 (cvSeqSlice).
            </summary>
            <param name="slice">추출하는 순서의 일부분</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Slice(OpenCvSharp.CvSlice,OpenCvSharp.CvMemStorage)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다 (cvSeqSlice).
            </summary>
            <param name="slice">추출하는 순서의 일부분</param>
            <param name="storage">새로운 순서 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 이 함수는 입력 순서에 포함되는 스토리지를 사용한다</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Slice(OpenCvSharp.CvSlice,OpenCvSharp.CvMemStorage,System.Boolean)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다 (cvSeqSlice).
            </summary>
            <param name="slice">추출하는 순서의 일부분</param>
            <param name="storage">새로운 순서 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 이 함수는 입력 순서에 포함되는 스토리지를 사용한다</param>
            <param name="copy_data">추출된 슬라이스의 요소를 카피할까 하지 않을까를 나타내는 플래그</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.Sort(OpenCvSharp.CvCmpFunc)">
            <summary>
            시퀸스의 요소를, 지정한 비교 함수를 이용해 소트 한다 (cvSeqSort).
            </summary>
            <param name="func">요소의 관계에 따르고, 부(거짓의 값)·0·정의 값을 돌려주는 비교 함수</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.StartAppend">
            <summary>
            시퀸스의 데이터 쓰기 처리를 초기화한다 (cvStartAppendToSeq).
            </summary>
            <returns>라이터(Writer) 상태. 이 함수로 초기화된다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.StartRead(OpenCvSharp.CvSeqReader)">
            <summary>
            시퀸스로부터의 연속 읽기 처리를 초기화한다 (cvStartReadSeq).
            </summary>
            <param name="reader">리더(reader) 상태.이 함수로 초기화된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.StartRead(OpenCvSharp.CvSeqReader,System.Boolean)">
            <summary>
            시퀸스로부터의 연속 읽기 처리를 초기화한다 (cvStartReadSeq).
            </summary>
            <param name="reader">리더(reader) 상태.이 함수로 초기화된다.</param>
            <param name="reverse">시퀸스 주사 방향의 지정.reverse 가 false 의 경우, 리더는 선두의 시퀸스 요소에 위치한다. 그 이외는 마지막 요소에 위치한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq.ToArray``1">
            <summary>
            시퀸스를 메모리내에 연속한 하나의 블록에 카피한다 (cvCvtSeqToArray).
            </summary>
            <typeparam name="T"></typeparam>
            <returns>출력되는 배열. out되는 인수 element와 같은 값.</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq.ToArray``1(OpenCvSharp.CvSlice)">
            <summary>
            시퀸스를 메모리내에 연속한 하나의 블록에 카피한다 (cvCvtSeqToArray).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="slice">배열에 카피하는 시퀸스내의 부분</param>
            <returns>출력되는 배열. out 되는 인수 element 와 같은 값.</returns>
        </member>
        <member name="P:OpenCvSharp.CvSeq.HPrev">
            <summary>
            하나전의 시퀸스 포인터
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq.HNext">
            <summary>
            하나 후의 시퀸스 포인터
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq.VPrev">
            <summary>
            하나전의 시퀸스 포인터(두번째 구조에 따라서 의미가 다르다)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq.VNext">
            <summary>
            하나 후의 시퀸스 포인터(두번째 구조에 따라서 의미가 다르다)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq.Total">
            <summary>
            요소의 총수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq.ElemSize">
            <summary>
            시퀸스 요소의 사이즈(바이트 단위)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq.BlockMax">
            <summary>
            최신의 블록의 최대치
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq.Ptr">
            <summary>
            현재의 기입 포인터
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq.DeltaElems">
            <summary>
            시퀸스를 확장시킬 때에, 파티션 하는 요소수(시퀸스의 입도)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq.Storage">
            <summary>
            seq가 보존되는 영역
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq.FreeBlocks">
            <summary>
            빈블록 리스트
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq.First">
            <summary>
            선두 시퀸스 블록에의 포인터
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSet.SizeOf">
            <summary>
            sizeof(CvSet)를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSet._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSet.#ctor">
            <summary>
            디폴트 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSet.#ctor(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            비어있는 세트를 생성한다
            </summary>
            <param name="set_flags">생성하는 세트 타입. </param>
            <param name="header_size">세트의 헤더 사이즈(sizeof(CvSet) 이상). </param>
            <param name="elem_size">세트의 요소 사이즈(CvSetElem 이상). </param>
            <param name="storage">세트를 위한 컨테이너. </param>
        </member>
        <member name="M:OpenCvSharp.CvSet.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvSet*</param>
        </member>
        <member name="M:OpenCvSharp.CvSet.Initialize(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvSet*</param>
        </member>
        <member name="M:OpenCvSharp.CvSet.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSet.ClearSet">
            <summary>
            세트를 클리어 한다
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSet.GetSetElem(System.Int32)">
            <summary>
            인덱스에 의해서 세트의 요소를 검색한다
            </summary>
            <param name="index">시퀀스안 세트 요소의 인덱스.</param>
            <returns>찾아낸 요소의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.CvSet.SetAdd">
            <summary>
            세트에 새로운 노드(요소)를 추가한다
            </summary>
            <returns>노드에의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.CvSet.SetAdd(OpenCvSharp.CvSetElem)">
            <summary>
            세트에 새로운 노드(요소)를 추가한다
            </summary>
            <param name="elem">삽입하는 요소. null가 아닌 경우, 새롭게 확보한 노드에 데이터를 카피한다 (카피한 후, 선두의 정수 필드의 최상위비트는 클리어 된다). </param>
            <returns>노드에의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.CvSet.SetAdd(OpenCvSharp.CvSetElem,OpenCvSharp.CvSetElem@)">
            <summary>
            세트에 새로운 노드(요소)를 추가한다
            </summary>
            <param name="elem">삽입하는 요소. null가 아닌 경우, 새롭게 확보한 노드에 데이터를 카피한다 (카피한 후, 선두의 정수 필드의 최상위비트는 클리어 된다). </param>
            <param name="inserted_elem">할당할 수 있었던 요소에의 참조</param>
            <returns>노드에의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.CvSet.SetNew">
            <summary>
            세트에 요소를 더한다(고속판)
            </summary>
            <returns>노드에의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvSet.SetRemove(System.Int32)">
            <summary>
            세트로부터 요소를 삭제한다
            </summary>
            <param name="index">삭제하는 요소의 인덱스.</param>
        </member>
        <member name="M:OpenCvSharp.CvSet.SetRemoveByPtr(System.IntPtr)">
            <summary>
            포인터로 지정한 세트의 요소를 삭제한다
            </summary>
            <param name="elem">삭제되는 요소.</param>
        </member>
        <member name="P:OpenCvSharp.CvSet.FreeElems">
            <summary>
            빈노드의 리스트 
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSet.ActiveCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CalibrationFlag">
            <summary>
            cvCalibrateCamera2이나 cvStereoCalibrate의 처리 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.CalibrationFlag.Default">
            <summary>
            옵션 없음 (=0)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CalibrationFlag.FixIntrinsic">
            <summary>
            이것이 세트 되었을 경우, 외부 파라미터만 최적화되도록, camera_matrix1=2 로 dist_coeffs1=2가 고정된다.
            [CV_CALIB_FIX_INTRINSIC]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CalibrationFlag.UseIntrinsicGuess">
            <summary>
            intrinsic_matrix는 최적화를 한 올바른 초기치 fx, fy, cx, cy를 포함한다. 이 파라미터가 세트 되어 있지 않은 경우, (cx, cy)는 최초로 화상 중심으로 세트 되어(image_size 는 이 계산에 이용된다), 촛점거리는 최소 이승법으로 계산된다.
            [CV_CALIB_USE_INTRINSIC_GUESS]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CalibrationFlag.FixPrincipalPoint">
            <summary>
            principal points(광학 중심)는 최적화중에는 변화하지 않고, 중심 또는 다른 지정된 장소(이 파라미터와 동시에 UseIntrinsicGuess 가 세트 되고 있는 경우)에 고정된다 
            [CV_CALIB_FIX_PRINCIPAL_POINT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CalibrationFlag.FixFocalLength">
            <summary>
            fxk 및 fyk 가 고정된다
            [CV_CALIB_FIX_FOCAL_LENGTH]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CalibrationFlag.FixAspectRatio">
            <summary>
            fx  와 fy  중 어느 쪽인지 한편만이 독립변수일때, 어스펙트비 fx/fy 가 intrinsic_matrix 의 초기치로서 주어진 값으로부터 변하지 않게 최적화 처리를 실시한다.
            이 경우, 실제로 이용된다(fx, fy)의 초기치는, 행렬로부터 주어지는 (CV_CALIB_USE_INTRINSIC_GUESS가 세트 되고 있는 경우)인가, 어떠한 방법으로 추정된다(후자의 경우는, fx, fy 는 임의의 값에 세트 되어 그러한 비율만이 이용된다).
            [CV_CALIB_FIX_ASPECT_RATIO]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CalibrationFlag.SameFocalLength">
            <summary>
            강제적으로, fx0=fx1, fy0=fy1 로 한다.
            [CV_CALIB_SAME_FOCAL_LENGTH]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CalibrationFlag.ZeroTangentDist">
            <summary>
            원주 방향의 일그러짐 계수는 0으로 세트 되어 최적화중에는 변화하지 않는다
            [CV_CALIB_ZERO_TANGENT_DIST]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CalibrationFlag.FixK1">
            <summary>
            0 번째의 일그러짐 계수(k1)가 고정된다.
            [CV_CALIB_FIX_K1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CalibrationFlag.FixK2">
            <summary>
            1 번째의 일그러짐 계수(k2)가 고정된다．
            [CV_CALIB_FIX_K2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CalibrationFlag.FixK3">
            <summary>
            4 번째의 일그러짐 계수(k3)가 고정된다.
            [CV_CALIB_FIX_K3]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvDistanceFunction">
            <summary>
            cvCalcEMD2로 이용하는, 유저 정의 거리 함수. 2점의 좌표를 주면, 그 점간의 거리를 돌려준다. 
            </summary>
            <param name="f1"></param>
            <param name="f2"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.Cv">
            <summary>
            OpenCv의 cvXXX 함수의 래퍼
            </summary>
            <summary>
            OpenCv의 cvXXX 함수의 래퍼.
            IntPtr를 사용하지 않고 래퍼 클래스를 사용하고, 네이티브의 OpenCV에 가까운 느낌으로 자연스럽게 액세스 할 수 있다.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Cv.AA">
            <summary>
            CV_AA
            </summary>
        </member>
        <member name="F:OpenCvSharp.Cv.AUTOSTEP">
            <summary>
            CV_AUTOSTEP
            </summary>
        </member>
        <member name="F:OpenCvSharp.Cv.FILLED">
            <summary>
            CV_FILLED
            </summary>
        </member>
        <member name="F:OpenCvSharp.Cv.LOG2">
            <summary>
            CV_LOG2
            </summary>
        </member>
        <member name="F:OpenCvSharp.Cv.PI">
            <summary>
            CV_PI
            </summary>
        </member>
        <member name="F:OpenCvSharp.Cv.WHOLE_SEQ_END_INDEX">
            <summary>
            CV_WHOLE_SEQ_END_INDEX
            </summary>
        </member>
        <member name="F:OpenCvSharp.Cv.FLOODFILL_FIXED_RANGE">
            <summary>
            세트 되고 있는 경우는, 현재의 피크셀과 시드피크셀과의 차이가 대상이 된다.그 이외는, 인접끼리의 차이가 대상이 된다(즉 이 플래그가 세트 되지 않는 경우, 레인지는 변동적이다). 
            </summary>
        </member>
        <member name="F:OpenCvSharp.Cv.FLOODFILL_MASK_ONLY">
            <summary>
            세트 되고 있는 경우는, 이 함수에서는 화상을 전부 칠하지 않는(new_val 는 무시된다)가, 마스크(이 경우, 마스크는 NULL 이외의 값이 아니면 안 된다)는 전부 칠한다. 
            </summary>
        </member>
        <member name="F:OpenCvSharp.Cv.CV_MAX_DIM">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.Cv.DecRefData(OpenCvSharp.CvArr)">
            <summary>
            reference counter의 포인터가 null 가 아닌 경우에 CvMat 혹은 CvMatND 의 데이터의 reference counter를 감소 해, 한층 더 카운터가 0 이 되었을 경우에는 데이터를 해방한다.
            </summary>
            <param name="arr">배열 헤더</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Det(OpenCvSharp.CvArr)">
            <summary>
            행렬식을 돌려준다
            </summary>
            <param name="mat">입력 행렬</param>
            <returns>행렬식</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.DCT(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DCTFlag)">
            <summary>
            차원 혹은 2 차원 부동 소수점형 배열의 순서 방향·역방향 이산 코사인 변환을 실시한다
            </summary>
            <param name="src">입력 배열(실수의 1 차원 혹은 2 차원 배열)</param>
            <param name="dst">입력과 같은 사이즈·타입의 출력 배열</param>
            <param name="flags">변환 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DeleteMoire(OpenCvSharp.IplImage)">
            <summary>
            입력 화상의 Moire를 삭제한다
            </summary>
            <param name="img">입력 화상</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DestroyAllWindows">
            <summary>
            오픈되어 있는 모든 HighGUI 윈도우를 파기한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.Cv.DestroyWindow(System.String)">
            <summary>
            지정된 이름의 윈도우를 파기한다
            </summary>
            <param name="name">파기하는 윈도우의 이름</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DFT(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DFTFlag)">
            <summary>
            1 차원 혹은 2 차원 부동 소수점형 배열에 대해서 이산 푸리에 변환(DFT), 역이산 푸리에 변환(IDFT)을 실시한다.
            </summary>
            <param name="src">입력 배열(실수 또는 복소수)</param>
            <param name="dst">입력 배열과 같은 사이즈·타입의 출력 배열</param>
            <param name="flags">변환 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DFT(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DFTFlag,System.Int32)">
            <summary>
            1 차원 혹은 2 차원 부동 소수점형 배열에 대해서 이산 푸리에 변환(DFT), 역이산 푸리에 변환(IDFT)을 실시한다.
            </summary>
            <param name="src">입력 배열(실수 또는 복소수)</param>
            <param name="dst">입력 배열과 같은 사이즈·타입의 출력 배열</param>
            <param name="flags">변환 플래그</param>
            <param name="nonzero_rows">입력 배열의 비0인 행의 수(2 차원순서 변환의 경우), 혹은 출력 배열로 주목하는 행의 수(2 차원역변환의 경우).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FFT(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DFTFlag)">
            <summary>
            1 차원 혹은 2 차원 부동 소수점형 배열에 대해서 이산 푸리에 변환(DFT), 역이산 푸리에 변환(IDFT)을 실시한다. cvDFT의 앨리어스(alias).
            </summary>
            <param name="src">입력 배열(실수 또는 복소수)</param>
            <param name="dst">입력 배열과 같은 사이즈·타입의 출력 배열</param>
            <param name="flags">변환 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FFT(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DFTFlag,System.Int32)">
            <summary>
            1 차원 혹은 2 차원 부동 소수점형 배열에 대해서 이산 푸리에 변환(DFT), 역이산 푸리에 변환(IDFT)을 실시한다.cvDFT의 앨리어스(alias).
            </summary>
            <param name="src">입력 배열(실수 또는 복소수)</param>
            <param name="dst">입력 배열과 같은 사이즈·타입의 출력 배열</param>
            <param name="flags">변환 플래그</param>
            <param name="nonzero_rows">입력 배열의 비0인 행의 수(2 차원순서 변환의 경우), 혹은 출력 배열로 주목하는 행의 수(2 차원역변환의 경우).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Dilate(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 팽창한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.팽창은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Dilate(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.IplConvKernel)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 팽창한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.팽창은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="element">팽창에 이용하는 구조 요소.null의 경우는, 3×3 의 구형 형상의 구조 요소를 이용한다</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Dilate(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.IplConvKernel,System.Int32)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 팽창한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.팽창은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="element">팽창에 이용하는 구조 요소.null의 경우는, 3×3 의 구형 형상의 구조 요소를 이용한다.</param>
            <param name="iterations">팽창의 회수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DistTransform(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            입력 화상중의 값이 0이 아닌 픽셀로부터, 가장 가까운 값이 0의 피크셀까지의 거리를 계산한다
            </summary>
            <param name="src">입력 화상(8비트, 싱글 채널, 2치 화상)</param>
            <param name="dst">거리계산결과를 픽셀치로서 가지는 출력 화상 (32비트 부동 소수점형, 싱글 채널)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DistTransform(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DistanceType)">
            <summary>
            입력 화상중의 값이 0이 아닌 픽셀로부터, 가장 가까운 값이 0의 픽셀까지의 거리를 계산한다
            </summary>
            <param name="src">입력 화상(8비트, 싱글 채널, 2치 화상)</param>
            <param name="dst">거리계산결과를 픽셀치로서 가지는 출력 화상 (32비트 부동 소수점형, 싱글 채널)</param>
            <param name="distance_type">거리의 종류.L1, L2, C 나 User</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DistTransform(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DistanceType,System.Int32)">
            <summary>
            입력 화상중의 값이 0이 아닌 픽셀로부터, 가장 가까운 값이 0의 픽셀까지의 거리를 계산한다
            </summary>
            <param name="src">입력 화상(8비트, 싱글 채널, 2치 화상)</param>
            <param name="dst">거리계산결과를 픽셀치로서 가지는 출력 화상 (32비트 부동 소수점형, 싱글 채널)</param>
            <param name="distance_type">거리의 종류.L1, L2, C 나 User</param>
            <param name="mask_size">거리 변환 마스크의 사이즈로, 3, 5, 0 의 언젠가. L1, C 의 경우, 이 파라미터 값은 3에 고정된다.mask_size==0의 경우, 거리계산에 다른 근사 없음 알고리즘이 이용된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DistTransform(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DistanceType,System.Int32,System.Single[])">
            <summary>
            입력 화상중의 값이 0이 아닌 픽셀로부터, 가장 가까운 값이 0의 픽셀까지의 거리를 계산한다
            </summary>
            <param name="src">입력 화상(8비트, 싱글 채널, 2치 화상)</param>
            <param name="dst">거리계산결과를 픽셀치로서 가지는 출력 화상 (32비트 부동 소수점형, 싱글 채널)</param>
            <param name="distance_type">거리의 종류.L1, L2, C 나 User</param>
            <param name="mask_size">거리 변환 마스크의 사이즈로, 3, 5, 0 의 언젠가. L1, C 의 경우, 이 파라미터 값은 3에 고정된다.mask_size==0의 경우, 거리계산에 다른 근사 없음 알고리즘이 이용된다.</param>
            <param name="mask">유저 정의의 거리의 경우는 유저 정의의 마스크.3×3의 마스크를 이용하는 경우는 2개의 값(상하 시프트치, 기울기 시프트치)을 지정, 5×5의 마스크를 이용하는 경우는 3개의 값(상하 시프트치, 기울기 시프트치, 나이트 이동 시프트치(계마 나는 일의 시프트치))를 지정한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DistTransform(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DistanceType,System.Int32,System.Single[],OpenCvSharp.CvArr)">
            <summary>
            입력 화상중의 값이 0이 아닌 픽셀로부터, 가장 가까운 값이 0의 픽셀까지의 거리를 계산한다
            </summary>
            <param name="src">입력 화상(8비트, 싱글 채널, 2치 화상)</param>
            <param name="dst">거리계산결과를 픽셀치로서 가지는 출력 화상 (32비트 부동 소수점형, 싱글 채널)</param>
            <param name="distance_type">거리의 종류.L1, L2, C 나 User</param>
            <param name="mask_size">거리 변환 마스크의 사이즈로, 3, 5, 0 의 언젠가. L1, C 의 경우, 이 파라미터 값은 3에 고정된다.mask_size==0의 경우, 거리계산에 다른 근사 없음 알고리즘이 이용된다.</param>
            <param name="mask">유저 정의의 거리의 경우는 유저 정의의 마스크.3×3의 마스크를 이용하는 경우는 2개의 값(상하 시프트치, 기울기 시프트치)을 지정, 5×5의 마스크를 이용하는 경우는 3개의 값(상하 시프트치, 기울기 시프트치, 나이트 이동 시프트치(계마 나는 일의 시프트치))를 지정한다.</param>
            <param name="labels">옵션 출력.정수 라벨에 변환된 2 차원 배열로, src , dst와 같은 사이즈.현재는 mask_size==3 혹은 5 때에만 사용된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Div(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소끼리를 나누기한다 (scale=1).
            dst(I) =scale*src1(I) /src2(I) [src1!=null의 경우],  
            dst(I) =scale/src2(I) [src1=null의 경우]
            </summary>
            <param name="src1">1번째의 입력 배열. null의 경우는, 모든 요소가 1이라고 가정한다.</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Div(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            두 개의 배열의 요소끼리를 나누기한다.
            dst(I) =scale*src1(I) /src2(I) [src1!=null의 경우],  
            dst(I) =scale/src2(I) [src1=null의 경우]
            </summary>
            <param name="src1">1번째의 입력 배열. null의 경우는, 모든 요소가 1이라고 가정한다.</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="scale">임의의 스케일링 계수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DotProduct(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            Euclid 거리에 근거하는 2개의 배열의 내적을 계산한다.
            src1src2 = sumI(src1(I) *src2(I))
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <returns>Euclid 거리에 근거하는 2개의 배열의 내적</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawChessboardCorners(OpenCvSharp.CvArr,OpenCvSharp.CvSize,OpenCvSharp.CvPoint2D32f[],System.Boolean)">
            <summary>
            체스 보드로부터 코너가 완전하게 검출되어 있지 않은 경우(pattern_was_found=false)는, 검출된 코너 각각 적색의 엔을 그린다.
            또 완전하게 검출되고 있는 경우(pattern_was_found=true)는, 물이 들 수 있는 된 각 코너를 선분으로 접속해 표시한다. 
            </summary>
            <param name="image">코너점을 표시하는 화상.8비트 칼라 화상.</param>
            <param name="pattern_size">체스 보드의 각 행과 각 렬의 내부 코너의 수.</param>
            <param name="corners">검출된 코너의 배열.</param>
            <param name="pattern_was_found">체스 보드로부터 코너가 완전하게 발견되었다(true)인가, 그렇지 않은(false)인지를 나타낸다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawContours(OpenCvSharp.CvArr,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint},OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            화상의 외측 윤곽선, 또는 안쪽 윤곽선을 그린다
            </summary>
            <param name="img">윤곽을 출력 하는 원화상.윤곽은 ROI로 잘라내진다.</param>
            <param name="contour">최초의 윤곽에의 포인터</param>
            <param name="external_color">외측 윤곽선의 색</param>
            <param name="hole_color">안쪽 윤곽선(구멍)의 색</param>
            <param name="max_level">출력 되는 윤곽의 최대 레벨. 0으로 했을 경우, contour만이 그려진다. 1으로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽이 그려진다. 2로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽과 선두의 윤곽의 하나하의 레벨의 모든 윤곽이 그려진다.이하 같이.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawContours(OpenCvSharp.CvArr,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint},OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,System.Int32,System.Int32)">
            <summary>
            화상의 외측 윤곽선, 또는 안쪽 윤곽선을 그린다
            </summary>
            <param name="img">윤곽을 출력 하는 원화상.윤곽은 ROI로 잘라내진다.</param>
            <param name="contour">최초의 윤곽에의 포인터</param>
            <param name="external_color">외측 윤곽선의 색</param>
            <param name="hole_color">안쪽 윤곽선(구멍)의 색</param>
            <param name="max_level">출력 되는 윤곽의 최대 레벨. 0으로 했을 경우, contour만이 그려진다. 1으로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽이 그려진다. 2로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽과 선두의 윤곽의 하나하의 레벨의 모든 윤곽이 그려진다.이하 같이.</param>
            <param name="thickness">출력 되는 윤곽선의 굵기. 부(예를 들면 =Cv.FILLED)로 했을 경우에는, 내부를 전부 칠한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawContours(OpenCvSharp.CvArr,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint},OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,System.Int32,System.Int32,OpenCvSharp.LineType)">
            <summary>
            화상의 외측 윤곽선, 또는 안쪽 윤곽선을 그린다
            </summary>
            <param name="img">윤곽을 출력 하는 원화상.윤곽은 ROI로 잘라내진다.</param>
            <param name="contour">최초의 윤곽에의 포인터</param>
            <param name="external_color">외측 윤곽선의 색</param>
            <param name="hole_color">안쪽 윤곽선(구멍)의 색</param>
            <param name="max_level">출력 되는 윤곽의 최대 레벨. 0으로 했을 경우, contour만이 그려진다. 1으로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽이 그려진다. 2로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽과 선두의 윤곽의 하나하의 레벨의 모든 윤곽이 그려진다.이하 같이.</param>
            <param name="thickness">출력 되는 윤곽선의 굵기. 부(예를 들면 =Cv.FILLED)로 했을 경우에는, 내부를 전부 칠한다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawContours(OpenCvSharp.CvArr,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint},OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,System.Int32,System.Int32,OpenCvSharp.LineType,OpenCvSharp.CvPoint)">
            <summary>
            화상의 외측 윤곽선, 또는 안쪽 윤곽선을 그린다
            </summary>
            <param name="img">윤곽을 출력 하는 원화상.윤곽은 ROI로 잘라내진다.</param>
            <param name="contour">최초의 윤곽에의 포인터</param>
            <param name="external_color">외측 윤곽선의 색</param>
            <param name="hole_color">안쪽 윤곽선(구멍)의 색</param>
            <param name="max_level">출력 되는 윤곽의 최대 레벨. 0으로 했을 경우, contour만이 그려진다. 1으로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽이 그려진다. 2로 했을 경우, 선두의 윤곽과 동레벨의 모든 윤곽과 선두의 윤곽의 하나하의 레벨의 모든 윤곽이 그려진다.이하 같이.</param>
            <param name="thickness">출력 되는 윤곽선의 굵기. 부(예를 들면 =Cv.FILLED)로 했을 경우에는, 내부를 전부 칠한다.</param>
            <param name="line_type">선의 종류</param>
            <param name="offset">모든 좌표를 지정한 값만 시프트 한다</param>
        </member>
        <member name="M:OpenCvSharp.Cv.EigenVV(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            대칭 행렬의 고유치와 고유 벡터를 계산한다
            </summary>
            <param name="mat">입력 대칭 서방 행렬.처리중으로 변경된다.</param>
            <param name="evects">고유 벡터의 출력 행렬.연속한 행으로서 보존된다. </param>
            <param name="evals">고유치 벡터의 출력 벡터.내림차순에 보존된다(물론 고유치와 고유 벡터의 차례는 일치한다).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.EigenVV(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            대칭 행렬의 고유치와 고유 벡터를 계산한다
            </summary>
            <param name="mat">입력 대칭 서방 행렬.처리중으로 변경된다.</param>
            <param name="evects">고유 벡터의 출력 행렬.연속한 행으로서 보존된다. </param>
            <param name="evals">고유치 벡터의 출력 벡터.내림차순에 보존된다(물론 고유치와 고유 벡터의 차례는 일치한다).</param>
            <param name="eps">대각화의 정도(일반적으로, DBL_EPSILON=10^-15 로 충분하다)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Ellipse(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다.
            </summary>
            <param name="img">타원이 출력될 화상</param>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 개시 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Ellipse(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다.
            </summary>
            <param name="img">타원이 출력될 화상</param>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 개시 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Ellipse(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다.
            </summary>
            <param name="img">타원이 출력될 화상</param>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 개시 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
            <param name="line_type">타원호의 선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Ellipse(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다.
            </summary>
            <param name="img">타원이 출력될 화상</param>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 개시 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
            <param name="line_type">타원호의 선의 종류</param>
            <param name="shift">중심 좌표와 축의 길이의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawEllipse(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다.
            </summary>
            <param name="img">타원이 출력될 화상</param>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 개시 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawEllipse(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다.
            </summary>
            <param name="img">타원이 출력될 화상</param>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 개시 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawEllipse(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다.
            </summary>
            <param name="img">타원이 출력될 화상</param>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 개시 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
            <param name="line_type">타원호의 선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawEllipse(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만의 타원, 타원호, 혹은 전부 칠해진 선형의 타원을 그린다.
            </summary>
            <param name="img">타원이 출력될 화상</param>
            <param name="center">타원의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">회전 각도</param>
            <param name="start_angle">타원호의 개시 각도</param>
            <param name="end_angle">타원호의 종료 각도</param>
            <param name="color">타원의 색</param>
            <param name="thickness">타원호의 선의 폭</param>
            <param name="line_type">타원호의 선의 종류</param>
            <param name="shift">중심 좌표와 축의 길이의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.EllipseBox(OpenCvSharp.CvArr,OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar)">
            <summary>
            테두리만의 타원, 혹은 전부 칠해진 타원을 그린다
            </summary>
            <param name="img">타원이 그려질 화상.</param>
            <param name="box">그릴 타원을 둘러싸는 사각형 영역.</param>
            <param name="color">타원의 색.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.EllipseBox(OpenCvSharp.CvArr,OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            테두리만의 타원, 혹은 전부 칠해진 타원을 그린다
            </summary>
            <param name="img">타원이 그려질 화상.</param>
            <param name="box">그릴 타원을 둘러싸는 사각형 영역.</param>
            <param name="color">타원의 색.</param>
            <param name="thickness">타원 경계선의 폭.．</param>
        </member>
        <member name="M:OpenCvSharp.Cv.EllipseBox(OpenCvSharp.CvArr,OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만의 타원, 혹은 전부 칠해진 타원을 그린다
            </summary>
            <param name="img">타원이 그려질 화상.</param>
            <param name="box">그릴 타원을 둘러싸는 사각형 영역.</param>
            <param name="color">타원의 색.</param>
            <param name="thickness">타원 경계선의 폭.</param>
            <param name="line_type">타원 경계선의 종류.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.EllipseBox(OpenCvSharp.CvArr,OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만의 타원, 혹은 전부 칠해진 타원을 그린다
            </summary>
            <param name="img">타원이 그려질 화상.</param>
            <param name="box">그릴 타원을 둘러싸는 사각형 영역.</param>
            <param name="color">타원의 색.</param>
            <param name="thickness">타원 경계선의 폭.</param>
            <param name="line_type">타원 경계선의 종류.</param>
            <param name="shift">사각형 영역의 정점 좌표의 소수점 이하의 자리수를 나타내는 비트수.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Ellipse2Poly(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvPoint[]@,System.Int32)">
            <summary>
            타원호를 polyline로 근사 한다
            </summary>
            <param name="center">호의 중심</param>
            <param name="axes">타원의 축의 길이</param>
            <param name="angle">타원의 회전 각도</param>
            <param name="arc_start">타원호의 개시 각도</param>
            <param name="arc_end">타원호의 종료 각도</param>
            <param name="pts">이 함수로 전부 칠해지는 점의 배열</param>
            <param name="delta">polyline가 연속한 정점간의 각도, 근사 정도.출력되는 점의 총수는 최대로 ceil((end_angle - start_angle) /delta) + 1.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.EndFindContours(OpenCvSharp.CvContourScanner)">
            <summary>
            윤곽 주사 처리를 종료한다
            </summary>
            <param name="scanner">윤곽 스캐너에의 포인터</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.EndWriteSeq(OpenCvSharp.CvSeqWriter)">
            <summary>
            시퀸스 기입 처리를 종료한다
            </summary>
            <param name="writer">라이터(writer) 상태. </param>
            <returns>써진 시퀸스의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.EndWriteStruct(OpenCvSharp.CvFileStorage)">
            <summary>
            파일 스토리지에 구조체의 기입을 종료한다.
            </summary>
            <param name="fs">파일 스토리지</param>
        </member>
        <member name="M:OpenCvSharp.Cv.EqualizeHist(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            그레이 스케일 화상의 히스토그램을 균일화한다. 휘도를 균일화해, 화상의 콘트라스트를 올린다.
            </summary>
            <param name="src">입력 화상.8비트 싱글 채널. </param>
            <param name="dst">출력 화상.src와 같은 사이즈, 같은 데이터 타입.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Erode(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 수축한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.수축은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Erode(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.IplConvKernel)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 수축한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.수축은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="element">수축에 이용하는 구조 요소.null의 경우는, 3×3 의 구형 형상의 구조 요소를 이용한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Erode(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.IplConvKernel,System.Int32)">
            <summary>
            인접 픽셀의 형상을 결정하는 지정된 구조 요소를 이용하고, 입력 화상을 수축한다. 
            이 함수는 인프레이스모드(src=dst인 입력)를 서포트한다.수축은 여러 차례 (iterations) 반복할 수 있다.
            칼라 화상의 경우는, 각각의 채널이 독립에 처리된다. 
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="element">수축에 이용하는 구조 요소.null의 경우는, 3×3 의 구형 형상의 구조 요소를 이용한다.</param>
            <param name="iterations">수축의 회수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Error(OpenCvSharp.CvStatus,System.String,System.String,System.String,System.Int32)">
            <summary>
            에러를 발생시킨다
            </summary>
            <param name="status">에러 스테이터스</param>
            <param name="func_name">에러가 발생한 함수명</param>
            <param name="err_msg">에러에 대한 추가 정보/진단 결과</param>
            <param name="file_name">에러가 발생한 파일명</param>
            <param name="line">에러가 발생한 행 번호</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ErrorStr(OpenCvSharp.CvStatus)">
            <summary>
            에러 스테이터스의 코드의 텍스트 정보를 돌려준다
            </summary>
            <param name="status">에러 스테이터스</param>
            <returns>지정한 에러 스테이터스 코드의 텍스트 기술</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Exp(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            모든 배열 요소에 대해 자연대수의 바닥(네이피아수) 다시 말해 트리승을 구한다
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열.배정도의 부동 소수점형(double), 또는 입력 배열과 같은 타입이 아니면 안된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ExtractSURF(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvSeq{OpenCvSharp.CvSURFPoint}@,OpenCvSharp.CvSeq{System.Single}@,OpenCvSharp.CvMemStorage,OpenCvSharp.CvSURFParams)">
            <summary>
            화상중으로부터 SURF(Speeded Up Robust Features)를 검출한다
            </summary>
            <param name="image">8비트, 그레이 스케일의 입력 화상. </param>
            <param name="mask">옵션：8비트의 마스크 화상.비0 의 마스크 픽셀이50%이상을 차지하는 영역으로부터 마샬, 특징 점검출을 실시한다.</param>
            <param name="keypoints">출력 파라미터. 키포인트의 시퀸스의 포인터의 포인터. 이것은, CvSURFPoint 구조체의 순서가 된다</param>
            <param name="descriptors">옵션：출력 파라미터.디스크립터의 순서에의 포인터의 포인터. 순서의 각 요소는, params.extended 의 값에 의존하고, 64-요소, 혹은 128-요소의 부동 소수점수(실수)(CV_32 F) 벡터가 된다. 파라미터가 NULL 의 경우, 디스크립터는 계산되지 않는다.</param>
            <param name="storage">키포인트와 디스크립터가 보관되는 메모리스토레이지</param>
            <param name="param">CvSURFParams 구조체에 넣어진, 여러가지 알고리즘 파라미터</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FastArctan(System.Single,System.Single)">
            <summary>
            입력된 2 차원 벡터의 각도를 계산한다.각도는 도(degree) 단위로 다루어져 0о에서 360о의 범위에서 변화한다.정도는 ~0.1о.
            </summary>
            <param name="y">2 차원 벡터의 y좌표</param>
            <param name="x">2 차원 벡터의 x좌표</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FillConvexPoly(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[],OpenCvSharp.CvScalar)">
            <summary>
            凸다각형의 내부를 전부 칠한다.
            </summary>
            <param name="img">다각형이 그려지는 화상</param>
            <param name="pts">하나의 다각형에의 포인터의 배열</param>
            <param name="color">다각형의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FillConvexPoly(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[],OpenCvSharp.CvScalar,OpenCvSharp.LineType)">
            <summary>
            凸다각형의 내부를 전부 칠한다.
            </summary>
            <param name="img">다각형이 그려지는 화상</param>
            <param name="pts">하나의 다각형에의 포인터의 배열</param>
            <param name="color">다각형의 색</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FillConvexPoly(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[],OpenCvSharp.CvScalar,OpenCvSharp.LineType,System.Int32)">
            <summary>
            凸다각형의 내부를 전부 칠한다.
            </summary>
            <param name="img">다각형이 그려지는 화상</param>
            <param name="pts">하나의 다각형에의 포인터의 배열</param>
            <param name="color">다각형의 색</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">정점 좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FillPoly(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[][],OpenCvSharp.CvScalar)">
            <summary>
            다각형 내부를 전부 칠한다
            </summary>
            <param name="img">다각형이 그려지는 화상.</param>
            <param name="pts">다각형의 포인터 배열.</param>
            <param name="color">다각형의 색.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FillPoly(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[][],OpenCvSharp.CvScalar,OpenCvSharp.LineType)">
            <summary>
            다각형 내부를 전부 칠한다
            </summary>
            <param name="img">다각형이 그려지는 화상.</param>
            <param name="pts">다각형의 포인터 배열.</param>
            <param name="color">다각형의 색.</param>
            <param name="line_type">선의 종류.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FillPoly(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[][],OpenCvSharp.CvScalar,OpenCvSharp.LineType,System.Int32)">
            <summary>
            다각형 내부를 전부 칠한다
            </summary>
            <param name="img">다각형이 그려지는 화상.</param>
            <param name="pts">다각형의 포인터 배열.</param>
            <param name="color">다각형의 색.</param>
            <param name="line_type">선의 종류.</param>
            <param name="shift">정점 좌표의 소수점 이하의 자리수를 나타내는 비트수.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Filter2D(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            화상에 선형 필터를 적용한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="kernel">필터 마스크. 계수의 싱글 채널의 2 차원 부동 소수점형 행렬.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Filter2D(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.CvPoint)">
            <summary>
            화상에 선형 필터를 적용한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="kernel">필터 마스크. 계수의 싱글 채널의 2 차원 부동 소수점형 행렬.</param>
            <param name="anchor">커넬의 앵커. 커넬 마스크로 커버되는 인접 영역내에 있어서의, 필터 대상이 되는 픽셀의 상대 위치를 나타낸다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FindChessboardCorners(OpenCvSharp.CvArr,OpenCvSharp.CvSize,OpenCvSharp.CvPoint2D32f[]@)">
            <summary>
            입력 화상이 체스 보드 패턴일지를 확인해, 체스 보드의 각 코너의 위치 검출을 시도한다.
            </summary>
            <param name="image">입력의 체스 보드 화상.8비트의 그레이 스케일 또는 칼라 화상.</param>
            <param name="pattern_size">체스 보드의 행과 열 마다의 코너의 수</param>
            <param name="corners">검출된 코너의 배열. Length=pattern_size.Width*pattern_size.Height</param>
            <returns>모든 코너가 검출되어 올바른 차례(행순으로, 한편 각 행은 왼쪽에서 오른쪽으로 줄선다)로 그것들이 배치되어 있는 경우에는, true</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindChessboardCorners(OpenCvSharp.CvArr,OpenCvSharp.CvSize,OpenCvSharp.CvPoint2D32f[]@,System.Int32@)">
            <summary>
            입력 화상이 체스 보드 패턴일지를 확인해, 체스 보드의 각 코너의 위치 검출을 시도한다.
            </summary>
            <param name="image">입력의 체스 보드 화상.8비트의 그레이 스케일 또는 칼라 화상.</param>
            <param name="pattern_size">체스 보드의 행과 열 마다의 코너의 수</param>
            <param name="corners">검출된 코너의 배열. Length=pattern_size.Width*pattern_size.Height</param>
            <param name="corner_count">코너의 수가 출력된다</param>
            <returns>모든 코너가 검출되어 올바른 차례(행순으로, 한편 각 행은 왼쪽에서 오른쪽으로 줄선다)로 그것들이 배치되어 있는 경우에는, true</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindChessboardCorners(OpenCvSharp.CvArr,OpenCvSharp.CvSize,OpenCvSharp.CvPoint2D32f[]@,System.Int32@,OpenCvSharp.ChessboardFlag)">
            <summary>
            입력 화상이 체스 보드 패턴일지를 확인해, 체스 보드의 각 코너의 위치 검출을 시도한다.
            </summary>
            <param name="image">입력의 체스 보드 화상.8비트의 그레이 스케일 또는 칼라 화상.</param>
            <param name="pattern_size">체스 보드의 행과 열 마다의 코너의 수</param>
            <param name="corners">검출된 코너의 배열. Length=pattern_size.Width*pattern_size.Height</param>
            <param name="corner_count">코너의 수가 출력된다</param>
            <param name="flags">처리 플래그</param>
            <returns>모든 코너가 검출되어 올바른 차례(행순으로, 한편 각 행은 왼쪽에서 오른쪽으로 줄선다)로 그것들이 배치되어 있는 경우에는, true</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint}@)">
            <summary>
            2진 화상중의 윤곽을 찾아낸다
            </summary>
            <param name="image">입력 화상(8비트 싱글 채널).값이  0이외의 픽셀은 「1」, 0의 픽셀은 「0」(이)라고 한다.</param>
            <param name="storage">추출된 윤곽을 보존하는 영역</param>
            <param name="first_contour">출력 파라미터.제일 외측의 윤곽에의 포인터가 들어가 있다.</param>
            <returns>추출한 윤곽의 개수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint}@,System.Int32)">
            <summary>
            2진 화상중의 윤곽을 찾아낸다
            </summary>
            <param name="image">입력 화상(8비트 싱글 채널).값이  0이외의 픽셀은 「1」, 0의 픽셀은 「0」(이)라고 한다.</param>
            <param name="storage">추출된 윤곽을 보존하는 영역</param>
            <param name="first_contour">출력 파라미터.제일 외측의 윤곽에의 포인터가 들어가 있다.</param>
            <param name="header_size">시퀸스 헤더의 사이즈.method=CV_CHAIN_CODE의 경우,>=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour).</param>
            <returns>추출한 윤곽의 개수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint}@,System.Int32,OpenCvSharp.ContourRetrieval)">
            <summary>
            2진 화상중의 윤곽을 찾아낸다
            </summary>
            <param name="image">입력 화상(8비트 싱글 채널).값이  0이외의 픽셀은 「1」, 0의 픽셀은 「0」(이)라고 한다.</param>
            <param name="storage">추출된 윤곽을 보존하는 영역</param>
            <param name="first_contour">출력 파라미터.제일 외측의 윤곽에의 포인터가 들어가 있다.</param>
            <param name="header_size">시퀸스 헤더의 사이즈.method=CV_CHAIN_CODE의 경우,>=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour).</param>
            <param name="mode">추출 모드 </param>
            <returns>추출한 윤곽의 개수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint}@,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain)">
            <summary>
            2진 화상중의 윤곽을 찾아낸다
            </summary>
            <param name="image">입력 화상(8비트 싱글 채널).값이  0이외의 픽셀은 「1」, 0의 픽셀은 「0」(이)라고 한다.</param>
            <param name="storage">추출된 윤곽을 보존하는 영역</param>
            <param name="first_contour">출력 파라미터.제일 외측의 윤곽에의 포인터가 들어가 있다.</param>
            <param name="header_size">시퀸스 헤더의 사이즈.method=CV_CHAIN_CODE의 경우,>=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour).</param>
            <param name="mode">추출 모드 </param>
            <param name="method">근사 수법</param>
            <returns>추출한 윤곽의 개수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint}@,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain,OpenCvSharp.CvPoint)">
            <summary>
            2진 화상중의 윤곽을 찾아낸다
            </summary>
            <param name="image">입력 화상(8비트 싱글 채널).값이  0이외의 픽셀은 「1」, 0의 픽셀은 「0」(이)라고 한다.</param>
            <param name="storage">추출된 윤곽을 보존하는 영역</param>
            <param name="first_contour">출력 파라미터.제일 외측의 윤곽에의 포인터가 들어가 있다.</param>
            <param name="header_size">시퀸스 헤더의 사이즈.method=CV_CHAIN_CODE의 경우,>=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour).</param>
            <param name="mode">추출 모드 </param>
            <param name="method">근사 수법</param>
            <param name="offset">오프셋.모든 윤곽점은 이것에 의해서 시프트 된다.</param>
            <returns>추출한 윤곽의 개수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindCornerSubPix(OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f[],System.Int32,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvTermCriteria)">
            <summary>
            코너 위치를 고정밀화한다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="corners">코너의 초기 좌표가 입력되어 고정밀화된 좌표가 출력된다.</param>
            <param name="count">코너의 수</param>
            <param name="win">검색 윈도우의 반의 사이즈.(예) win=(5,5)라면 5*2+1 × 5*2+1 = 11 × 11 이 탐색 윈도우 해서 사용된다.</param>
            <param name="zero_zone">총화를 계산할 때에 포함되지 않는, 탐색 영역의 중심으로 존재하는 총화 대상외 영역의 반의 사이즈.이 값은, 자기 상관 행렬에 대해 발생할 수 있는 특이점을 피하기 위해서 이용된다. 값이 (-1,-1)의 경우는, 그러한 사이즈는 없다고 하는 것을 의미한다</param>
            <param name="criteria">코너 좌표의 고정밀화를 위한 반복 처리의 종료 조건.코너 위치의 고정밀화의 반복 처리는, 규정 회수에 이르는지, 목표 정도에 이르렀을 때에 종료한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FindExtrinsicCameraParams2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@)">
            <summary>
            기존의 내부 파라미터를 이용하고, 각각의 뷰에 있어서의 외부 파라미터를 추정한다.
            3 차원의 오브젝트의 점과 거기에 대응하는 2 차원 투영점이 지정되지 않으면 안 된다.이 함수도 역투영 오차의 최소화를 실시한다.
            </summary>
            <param name="object_points">오브젝트의 점의 배열.3 xN 또는 Nx3로 N는 뷰에 있어서의 점의 수.</param>
            <param name="image_points">대응하는 화상상의 점의 배열.2 xN 또는 Nx2로 N는 뷰에 있어서의 점의 수.</param>
            <param name="intrinsic_matrix">카메라 내부 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">일그러짐 계수의 벡터.4 x1 또는 1x4 [k1, k2, p1, p2].NULL의 경우, 일그러짐 계수는 모두 0 이다고 한다.</param>
            <param name="rotation_vector">출력되는 3x1 의 회전 벡터</param>
            <param name="translation_vector">출력되는 3x1 의 병진 벡터</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FindFeatures(OpenCvSharp.CvFeatureTree,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
             베스트 빈 퍼스트(Best-Bin-First) 탐색을 이용하고, 주어진 벡터의 대략적인 k 근사값을 구한다
            </summary>
            <param name="tr">참조 벡터에 대한 k-d목 인덱스의 포인터.</param>
            <param name="desc">(행) 벡터의 m × d 행렬. 이러한 벡터의 근사값을 탐색한다.</param>
            <param name="results">일치한 벡터의 행 인덱스 (cvCreateFeatureTree에 인수로서 건네받는 행렬을 참조한다)의 집합.m × k의 행렬.k 근방보다 먼 경우는, 그 열에는 -1 이 들어간다.</param>
            <param name="dist">k 근사값까지의 거리의 m × k 행렬.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FindFeatures(OpenCvSharp.CvFeatureTree,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,System.Int32)">
            <summary>
            베스트 빈 퍼스트(Best-Bin-First) 탐색을 이용하고, 주어진 벡터의 대략적인 k 근사값을 구한다
            </summary>
            <param name="tr">참조 벡터에 대한 k-d트리 인덱스의 포인터.</param>
            <param name="desc">(행) 벡터의 m × d 행렬. 이러한 벡터의 근사값을 탐색한다.</param>
            <param name="results">일치한 벡터의 행 인덱스 (cvCreateFeatureTree에 인수로서 건네받는 행렬을 참조한다)의 집합.m × k의 행렬.k 근방보다 먼 경우는, 그 열에는 -1 이 들어간다.</param>
            <param name="dist">k 근사값까지의 거리의 m × k 행렬.</param>
            <param name="k">검출된 근사값.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FindFeatures(OpenCvSharp.CvFeatureTree,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,System.Int32,System.Int32)">
            <summary>
            베스트 빈 퍼스트(Best-Bin-First) 탐색을 이용하고, 주어진 벡터의 대략적인 k 근사값을 구한다
            </summary>
            <param name="tr">참조 벡터에 대한 k-d트리 인덱스의 포인터.</param>
            <param name="desc">(행) 벡터의 m × d 행렬. 이러한 벡터의 근사값을 탐색한다.</param>
            <param name="results">일치한 벡터의 행 인덱스 (cvCreateFeatureTree에 인수로서 건네받는 행렬을 참조한다)의 집합.m × k의 행렬.k 근방보다 먼 경우는, 그 열에는 -1 이 들어간다.</param>
            <param name="dist">k 근사값까지의 거리의 m × k 행렬.</param>
            <param name="k">검출된 근사값.</param>
            <param name="emax">탐색하는 잎의 최대수.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FindFeaturesBoxed(OpenCvSharp.CvFeatureTree,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            주어진 k-d 트리에 직교 영역 탐색을 실시한다.
            </summary>
            <param name="tr">참조 벡터에 대한 k-d트리 인덱스의 포인터.</param>
            <param name="bounds_min">각 차원의 최소치를 주는 1×d 혹은 d×1 의 벡터(CV_32FC1 or CV_64 FC1)</param>
            <param name="bounds_max">각 차원의 최대치를 주는 1×d 혹은 d×1 의 벡터(CV_32FC1 or CV_64 FC1)</param>
            <param name="result">출력행 인덱스(cvCreateFeatureTree에 인수로서 건네받는 행렬을 참조한다)의 1×m 혹은 m×1 의 벡터(CV_32 SC1)</param>
            <returns>구해진 벡터수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindFundamentalMat(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            2매의 화상간의 점대응으로부터 기초 행렬(F행렬)을 계산한다
            </summary>
            <param name="points1">크기가 2xN, Nx2, 3 xN, 또는 Nx3 의 1매째의 화상상의 점의 배열 (N 는 점의 수).멀티 채널로 크기 1 xN, 또는 Nx1 의 배열도 사용 가능하다. 점의 좌표는 부동 소수점형으로 나타내진다(단정도 또는 배정도).</param>
            <param name="points2">2매째의 화상상의 점의 배열로 point1와 포맷이나 사이즈는 같다.</param>
            <param name="fundamental_matrix">출력되는 기초 행렬.사이즈는 3 x3, 또는 9 x3(7-point method는 3개의 행렬을 돌려준다).</param>
            <returns>요구한 기초 행렬의 수(1 또는 3).만약 행렬이 구해지지 않을 때는 0.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindFundamentalMat(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.FundamentalMatMethod)">
            <summary>
            2매의 화상간의 점대응으로부터 기초 행렬(F행렬)을 계산한다
            </summary>
            <param name="points1">크기가 2xN, Nx2, 3 xN, 또는 Nx3 의 1매째의 화상상의 점의 배열 (N 는 점의 수).멀티 채널로 크기 1 xN, 또는 Nx1 의 배열도 사용 가능하다. 점의 좌표는 부동 소수점형으로 나타내진다(단정도 또는 배정도).</param>
            <param name="points2">2매째의 화상상의 점의 배열로 point1와 포맷이나 사이즈는 같다.</param>
            <param name="fundamental_matrix">출력되는 기초 행렬.사이즈는 3 x3, 또는 9 x3(7-point method는 3개의 행렬을 돌려준다).</param>
            <param name="method">기초 행렬의 계산 수법</param>
            <returns>요구한 기초 행렬의 수(1 또는 3).만약 행렬이 구해지지 않을 때는 0.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindFundamentalMat(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.FundamentalMatMethod,System.Double,System.Double)">
            <summary>
            2매의 화상간의 점대응으로부터 기초 행렬(F행렬)을 계산한다
            </summary>
            <param name="points1">크기가 2xN, Nx2, 3 xN, 또는 Nx3 의 1매째의 화상상의 점의 배열 (N 는 점의 수).멀티 채널로 크기 1 xN, 또는 Nx1 의 배열도 사용 가능하다. 점의 좌표는 부동 소수점형으로 나타내진다(단정도 또는 배정도).</param>
            <param name="points2">2매째의 화상상의 점의 배열로 point1와 포맷이나 사이즈는 같다.</param>
            <param name="fundamental_matrix">출력되는 기초 행렬.사이즈는 3 x3, 또는 9 x3(7-point method는 3개의 행렬을 돌려준다).</param>
            <param name="method">기초 행렬의 계산 수법</param>
            <param name="param1">RANSAC 메소드 때에게만 사용되는 파라미터.점으로부터 에피포라선까지의 최대 거리(그 거리를 넘는 것은 빗나가 값이다고 판단해, 그것들을 최종적인 기초 행렬의 계산에 사용하지 않는다)를 피크셀 단위로 나타내 보인다. 통상은 1~3 의 값에 세트 된다. </param>
            <param name="param2">RANSAC 또는 LMedS 메소드 때에게만 사용되는 파라미터. F행렬의 추정 정도의 신뢰 레벨을 나타낸다.</param>
            <returns>요구한 기초 행렬의 수(1 또는 3).만약 행렬이 구해지지 않을 때는 0.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindFundamentalMat(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.FundamentalMatMethod,System.Double,System.Double,OpenCvSharp.CvMat)">
            <summary>
            2매의 화상간의 점대응으로부터 기초 행렬(F행렬)을 계산한다
            </summary>
            <param name="points1">크기가 2xN, Nx2, 3 xN, 또는 Nx3 의 1매째의 화상상의 점의 배열 (N 는 점의 수).멀티 채널로 크기 1 xN, 또는 Nx1 의 배열도 사용 가능하다. 점의 좌표는 부동 소수점형으로 나타내진다(단정도 또는 배정도).</param>
            <param name="points2">2매째의 화상상의 점의 배열로 point1와 포맷이나 사이즈는 같다.</param>
            <param name="fundamental_matrix">출력되는 기초 행렬.사이즈는 3 x3, 또는 9 x3(7-point method는 3개의 행렬을 돌려준다).</param>
            <param name="method">기초 행렬의 계산 수법</param>
            <param name="param1">RANSAC 메소드 때에게만 사용되는 파라미터.점으로부터 에피포라선까지의 최대 거리(그 거리를 넘는 것은 빗나가 값이다고 판단해, 그것들을 최종적인 기초 행렬의 계산에 사용하지 않는다)를 피크셀 단위로 나타내 보인다. 통상은 1~3 의 값에 세트 된다. </param>
            <param name="param2">RANSAC 또는 LMedS 메소드 때에게만 사용되는 파라미터. F행렬의 추정 정도의 신뢰 레벨을 나타낸다.</param>
            <param name="status">N개의 요소로부터 되는 출력 배열. 각 요소는, 아우트라이아(빗나가 값)에 대해서는 0, 「인라이아」, 즉 추정된 에피포라 기하에 자주(잘) 적합하는 값, 에 대해서는 1 에 세트 된다. 이 배열은 RANSAC 또는 LMedS 때 마셔 계산된다.다른 수법에서는, 모두 1 에 세트 된다.</param>
            <returns>요구한 기초 행렬의 수(1 또는 3).만약 행렬이 구해지지 않을 때는 0.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindGraphEdge(OpenCvSharp.CvGraph,System.Int32,System.Int32)">
            <summary>
            그래프로부터 엣지를 검출한다(인덱스 지정)
            </summary>
            <param name="graph">그래프. </param>
            <param name="start_idx">엣지의 시점을 나타내는 정점의 인덱스. </param>
            <param name="end_idx">엣지의 종점을 나타내는 정점의 인덱스. 무방향그래프의 경우 시퀸스는 어디라도 좋다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphFindEdge(OpenCvSharp.CvGraph,System.Int32,System.Int32)">
            <summary>
            그래프로부터 엣지를 검출한다(인덱스 지정)
            </summary>
            <param name="graph">그래프. </param>
            <param name="start_idx">엣지의 시점을 나타내는 정점의 인덱스. </param>
            <param name="end_idx">엣지의 종점을 나타내는 정점의 인덱스. 무방향그래프의 경우 시퀸스는 어디라도 좋다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindGraphEdgeByPtr(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx,OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프로부터 엣지를 검출한다(인덱스 지정)
            </summary>
            <param name="graph">그래프. </param>
            <param name="start_vtx">엣지의 시점을 나타내는 정점의 인덱스. </param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점의 인덱스. 무방향그래프의 경우 시퀸스는 어디라도 좋다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphFindEdgeByPtr(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx,OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프로부터 엣지를 검출한다(인덱스 지정)
            </summary>
            <param name="graph">그래프. </param>
            <param name="start_vtx">엣지의 시점을 나타내는 정점의 인덱스. </param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점의 인덱스. 무방향그래프의 경우 시퀸스는 어디라도 좋다. </param>
            <returns>지정한 두 개의 정점을 접속하는 엣지</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindHomography(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            2매의 화상간의 투영 변환을 요구한다
            </summary>
            <param name="src_points">1매째의 화상상의 좌표. 2 xN, Nx2, 3xN 또는 Nx3의 배열 (뒤 둘은 동다음 좌표계 표기이다).여기서 N 는 점의 수.</param>
            <param name="dst_points">2매째의 화상상의 좌표. 2 xN, Nx2, 3xN 또는 Nx3의 배열 (뒤 둘은 동다음 좌표계 표기이다).</param>
            <param name="homography">출력되는 3 x3호모그라피 행렬(평면 투영 변환 행렬). </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindHomography(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.HomographyMethod)">
            <summary>
            2매의 화상간의 투영 변환을 요구한다
            </summary>
            <param name="src_points">1매째의 화상상의 좌표. 2 xN, Nx2, 3xN 또는 Nx3의 배열 (뒤 둘은 동다음 좌표계 표기이다).여기서 N 는 점의 수.</param>
            <param name="dst_points">2매째의 화상상의 좌표. 2 xN, Nx2, 3xN 또는 Nx3의 배열 (뒤 둘은 동다음 좌표계 표기이다).</param>
            <param name="homography">출력되는 3 x3호모그라피 행렬(평면 투영 변환 행렬). </param>
            <param name="method">호모그라피 행렬을 계산하기 위한 방법</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindHomography(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.HomographyMethod,System.Double)">
            <summary>
            2매의 화상간의 투영 변환을 요구한다
            </summary>
            <param name="src_points">1매째의 화상상의 좌표. 2 xN, Nx2, 3xN 또는 Nx3의 배열 (뒤 둘은 동다음 좌표계 표기이다).여기서 N 는 점의 수.</param>
            <param name="dst_points">2매째의 화상상의 좌표. 2 xN, Nx2, 3xN 또는 Nx3의 배열 (뒤 둘은 동다음 좌표계 표기이다).</param>
            <param name="homography">출력되는 3 x3호모그라피 행렬(평면 투영 변환 행렬). </param>
             <param name="method">호모그라피 행렬을 계산하기 위한 방법</param>
            <param name="ransacReprojThreshold">점의 페어를 인라이아치로서 취급하기 위해서 허용 되는, 역투영 오차의 최대치.이 파라미터는, CV_RANSAC 가 지정되었을 경우에게만 이용된다.예를 들면, dst_points 가 피크셀 정도의 피크셀 좌표인 경우, 이 파라미터는, 대체로 1~3 에 세트 되는 것이 올바르다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindHomography(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.HomographyMethod,System.Double,OpenCvSharp.CvMat)">
            <summary>
            2매의 화상간의 투영 변환을 요구한다
            </summary>
            <param name="src_points">1매째의 화상상의 좌표. 2 xN, Nx2, 3xN 또는 Nx3의 배열 (뒤 둘은 동다음 좌표계 표기이다).여기서 N 는 점의 수.</param>
            <param name="dst_points">2매째의 화상상의 좌표. 2 xN, Nx2, 3xN 또는 Nx3의 배열 (뒤 둘은 동다음 좌표계 표기이다).</param>
            <param name="homography">출력되는 3 x3호모그라피 행렬(평면 투영 변환 행렬). </param>
            <param name="method">호모그라피 행렬을 계산하기 위한 방법</param>
            <param name="ransacReprojThreshold">점의 페어를 인라이아치로서 취급하기 위해서 허용 되는, 역투영 오차의 최대치.이 파라미터는, CV_RANSAC 가 지정되었을 경우에게만 이용된다.예를 들면, dst_points 가 피크셀 정도의 피크셀 좌표인 경우, 이 파라미터는, 대체로 1~3 에 세트 되는 것이 올바르다. </param>
            <param name="mask">옵션：로바스트 추정(CV_RANSAC, CV_LMEDS)으로 이용되는 출력 마스크. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindNearestPoint2D(OpenCvSharp.CvSubdiv2D,OpenCvSharp.CvPoint2D32f)">
            <summary>
            주어진 점에 가장 가까운 subdivision의 정점을 요구한다. 입력점을 subdivision내에 배치하는 또 하나의 함수이다.
            이 함수는 입력된 점에 가장 가까운 정점을 요구한다. 
            </summary>
            <param name="subdiv">들로네 또는 다른 subdivision</param>
            <param name="pt">입력점</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindNextContour(OpenCvSharp.CvContourScanner)">
            <summary>
            화상중의 다음의 윤곽을 검색한다
            </summary>
            <param name="scanner">함수 cvStartFindContours로 초기화된 윤곽 스캐너</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FindStereoCorrespondence(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DisparityMode,OpenCvSharp.CvArr,System.Int32)">
            <summary>
            스테레오 페어간의 시차를 계산한다
            </summary>
            <param name="leftImage">스테레오 페어의 왼쪽 화상.8비트, 그레이 스케일의(기울기나 위치등이) 수정된 화상.</param>
            <param name="rightImage">스테레오 페어의 오른쪽 화상.8비트, 그레이 스케일의 수정된 화상.</param>
            <param name="mode">시차를 계산하기 위한 알고리즘(현재는, CV_DISPARITY_BIRCHFIELD 만을 서포트하고 있다).</param>
            <param name="depthImage">결과의 데프스 화상.시차를 나타내도록(듯이) 슬캘링 된, 8비트, 그레이 스케일 화상. 즉, 제로 시차(이것은, 카메라로부터 매우 먼 장소의 점에 해당한다)는 0 에 매핑 되어 최대 시차는 255 에 매핑 된다.</param>
            <param name="maxDisparity">취할 수 있는 최대 시차.오브젝트가 카메라에 가까우면 가까울 수록, 여기에는 큰 값이 지정 되는 것이 당연하다. 다만, 너무 큰 값은, 처리 속도를 극단적으로 저하시킨다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FindStereoCorrespondence(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DisparityMode,OpenCvSharp.CvArr,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            스테레오 페어간의 시차를 계산한다
            </summary>
            <param name="leftImage">스테레오 페어의 왼쪽 화상.8비트, 그레이 스케일의(기울기나 위치등이) 수정된 화상.</param>
            <param name="rightImage">스테레오 페어의 오른쪽 화상.8비트, 그레이 스케일의 수정된 화상.</param>
            <param name="mode">시차를 계산하기 위한 알고리즘(현재는, CV_DISPARITY_BIRCHFIELD 만을 서포트하고 있다).</param>
            <param name="depthImage">결과의 데프스 화상.시차를 나타내도록(듯이) 슬캘링 된, 8비트, 그레이 스케일 화상. 즉, 제로 시차(이것은, 카메라로부터 매우 먼 장소의 점에 해당한다)는 0 에 매핑 되어 최대 시차는 255 에 매핑 된다.</param>
            <param name="maxDisparity">취할 수 있는 최대 시차.오브젝트가 카메라에 가까우면 가까울 수록, 여기에는 큰 값이 지정 되는 것이 당연하다. 다만, 너무 큰 값은, 처리 속도를 극단적으로 저하시킨다.</param>
            <param name="param1">알고리즘의 파라미터. 오크 루 존 패널티 정수 등</param>
            <param name="param2">알고리즘의 파라미터. 일치 보수 등</param>
            <param name="param3">알고리즘의 파라미터. 고신뢰도의 영역(param3 이상의 신뢰성을 가지는, 인접하는 피크셀의 조)의 정의 등</param>
            <param name="param4">알고리즘의 파라미터. 주신뢰도의 영역의 정의 등</param>
            <param name="param5">알고리즘의 파라미터. 저신뢰도의 영역의 정의 등</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FindStereoCorrespondenceBM(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvStereoBMState)">
            <summary>
            블록 매칭 알고리즘을 이용해 시차 화상을 계산한다 (cvFindStereoCorrespondenceBM 해당)
            </summary>
            <param name="left">왼쪽 화상.싱글 채널, 8비트.</param>
            <param name="right">오른쪽 화상.왼쪽 화상과 같은 사이즈, 같은 종류.</param>
            <param name="disparity">출력의 시차 배열.싱글 채널, 16비트, 부호 있는 정수, 입력 화상과 동사이즈.각 요소는, 계산된 시차이며, 16배 되어 정수치에.</param>
            <param name="state">스테레오 매칭 구조체.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FindStereoCorrespondenceGC(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvStereoGCState)">
            <summary>
            그래프 컷에 근거하는 알고리즘에 의해 시차 화상을 계산한다 
            </summary>
            <param name="left">왼쪽 화상.싱글 채널, 8비트.</param>
            <param name="right">오른쪽 화상.왼쪽 화상과 같은 사이즈, 같은 종류.</param>
            <param name="dispLeft">출력 옵션：싱글 채널, 16비트, 부호 있어 정수.입력 화상과 같은 사이즈의 왼쪽 시차 화상. </param>
            <param name="dispRight">출력 옵션：싱글 채널, 16비트, 부호 있어 정수.입력 화상과 같은 사이즈의 오른쪽 시차 화상. </param>
            <param name="state">스테레오 매칭 구조체.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FindStereoCorrespondenceGC(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvStereoGCState,System.Boolean)">
            <summary>
            그래프 컷에 근거하는 알고리즘에 의해 시차 화상을 계산한다 
            </summary>
            <param name="left">왼쪽 화상.싱글 채널, 8비트.</param>
            <param name="right">오른쪽 화상.왼쪽 화상과 같은 사이즈, 같은 종류.</param>
            <param name="dispLeft">출력 옵션：싱글 채널, 16비트, 부호 있어 정수.입력 화상과 같은 사이즈의 왼쪽 시차 화상. </param>
            <param name="dispRight">출력 옵션：싱글 채널, 16비트, 부호 있어 정수.입력 화상과 같은 사이즈의 오른쪽 시차 화상. </param>
            <param name="state">스테레오 매칭 구조체.</param>
            <param name="useDisparityGuess">이 파라미터가 0 이 아닌 경우, 미리 정의된 시차 화상을 이용해 계산이 개시된다.즉, dispLeft 와 dispRight 가 모두, 타당한 시차 화상일 필요가 있다. 그렇지 않은 경우는, (모든 피크셀이 오크 루 존이 되고 있다) 하늘의 시차 화상으로부터 개시된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FindType(System.String)">
            <summary>
            이름으로부터 형태를 찾아낸다
            </summary>
            <param name="type_name">형태의 이름</param>
            <returns>등록된 형태.null의 경우, 지정한 이름의 형태는 존재하지 않는다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FirstType">
            <summary>
            형태 리스트의 선두를 돌려준다
            </summary>
            <returns>등록되어 있는 형태의 리스트의 선두의 것</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FitEllipse2(OpenCvSharp.CvArr)">
            <summary>
            2 차원의 점렬에 타원을 fitting 한다
            </summary>
            <param name="points">점의 순서, 또는 배열</param>
            <returns>2 차원의 점렬에 피팅되는 최선의 타원</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FitLine(OpenCvSharp.CvArr,OpenCvSharp.DistanceType,System.Double,System.Double,System.Double,System.Single[]@)">
            <summary>
            2 차원 또는 3 차원의 점렬에 선을 fitting 한다
            </summary>
            <param name="points">32비트 정수형 또는 부동 소수점형의 2 차원 또는 3 차원의 점의 배열, 또는 순서.</param>
            <param name="dist_type">fitting에 사용되는 거리.</param>
            <param name="param">각각의 거리 함수에 있어서의 수치 파라미터(C).0을 지정했을 경우, 최적인 값이 선택된다.</param>
            <param name="reps">반경(좌표 원점과 선의 거리)과 각도에 대한 정도. 각각 0.01이 초기치로서 적합하다.</param>
            <param name="aeps">반경(좌표 원점과 선의 거리)과 각도에 대한 정도. 각각 0.01이 초기치로서 적합하다.</param>
            <param name="line">출력되는 선의 파라미터.2 차원 fitting의 경우, 네 개의 부동 소수점형수(vx, vy, x0, y0)의 배열로, (vx, vy)는 정규화된 방향 벡터, (x0, y0)는 선상의 점을 의미한다.3 차원 fitting의 경우, (vx, vy, vz, x0, y0, z0)의 여섯 개의 부동 소수점형수의 배열로, (vx, vy, vz)는 정규화된 방향 벡터, (x0, y0, z0)는 선상의 점을 의미한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Flip(OpenCvSharp.CvArr)">
            <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다
            </summary>
            <param name="src">입력 배열(출력도 여기에 보관된다)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Flip(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
             <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다
             </summary>
             <param name="src">입력 배열</param>
             <param name="dst">출력 배열.만약 null이면, 반전은 인프레이스모드로 행해진다</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Flip(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.FlipMode)">
            <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열.만약 null이면, 반전은 인프레이스모드로 행해진다</param>
            <param name="flip_mode">배열의 반전 방법의 지정</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Mirror(OpenCvSharp.CvArr)">
            <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다. cvFlip의 앨리어스(alias).
            </summary>
            <param name="src">입력 배열(출력도 여기에 보관된다)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Mirror(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다. cvFlip의 앨리어스(alias).
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열.만약 null이면, 반전은 인프레이스모드로 행해진다</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Mirror(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.FlipMode)">
            <summary>
            2 차원 배열을 수직, 수평, 또는 양축으로 반전한다. cvFlip의 앨리어스(alias).
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열.만약 null이면, 반전은 인프레이스모드로 행해진다</param>
            <param name="flip_mode">배열의 반전 방법의 지정</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FloodFill(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="image">입력 화상.1 채널 혹은 3 채널, 8비트 혹은 부동 소수점형.CV_FLOODFILL_MASK_ONLY 플래그가 세트 되었을 때 이외는, 데이터를 고쳐 쓸 수 있다.</param>
            <param name="seed_point">연결 성분의 개시점.시드 픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FloodFill(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="image">입력 화상.1 채널 혹은 3 채널, 8비트 혹은 부동 소수점형.CV_FLOODFILL_MASK_ONLY 플래그가 세트 되었을 때 이외는, 데이터를 고쳐 쓸 수 있다.</param>
            <param name="seed_point">연결 성분의 개시점. 시드픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
            <param name="lo_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 하한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.FloodFill(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="image">입력 화상.1 채널 혹은 3 채널, 8비트 혹은 부동 소수점형.CV_FLOODFILL_MASK_ONLY 플래그가 세트 되었을 때 이외는, 데이터를 고쳐 쓸 수 있다.</param>
            <param name="seed_point">연결 성분의 개시점. 시드픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
            <param name="lo_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 하한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="up_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 상한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.FloodFill(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvConnectedComp)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="image">입력 화상.1 채널 혹은 3 채널, 8비트 혹은 부동 소수점형.CV_FLOODFILL_MASK_ONLY 플래그가 세트 되었을 때 이외는, 데이터를 고쳐 쓸 수 있다.</param>
            <param name="seed_point">연결 성분의 개시점.시드 픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
            <param name="lo_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 하한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="up_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 픽셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽크셀과의, 휘도치/색 차이(차이)의 허용 상한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="comp">구조체에의 포인터.이 함수는, 전부 칠해진 영역의 정보를 구조체에 대입한다. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.FloodFill(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvConnectedComp,System.Int32)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="image">입력 화상.1 채널 혹은 3 채널, 8비트 혹은 부동 소수점형.CV_FLOODFILL_MASK_ONLY 플래그가 세트 되었을 때 이외는, 데이터를 고쳐 쓸 수 있다.</param>
            <param name="seed_point">연결 성분의 개시점.시드 픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
            <param name="lo_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 피크셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 하한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="up_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 피크셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 상한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="comp">구조체에의 포인터.이 함수는, 전부 칠해진 영역의 정보를 구조체에 대입한다. </param>
            <param name="flags">조작 플래그.하위 비트는 함수내에서 이용되는 연결성에 관한 값 4(디폴트) 또는 8이 들어가 있다. 
            연결성은, 어느 픽셀을 인접 픽셀이라고 보는지를 정의한다.상위 비트는 0, 혹은 Cv.FLOODFILL_FIXED_RANGE, Cv.FLOODFILL_MASK_ONLY 와의 편성이다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.FloodFill(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvConnectedComp,System.Int32,OpenCvSharp.CvArr)">
            <summary>
            연결 성분을 지정한 색으로 전부 칠한다
            </summary>
            <param name="image">입력 화상.1 채널 혹은 3 채널, 8비트 혹은 부동 소수점형.CV_FLOODFILL_MASK_ONLY 플래그가 세트 되었을 때 이외는, 데이터를 고쳐 쓸 수 있다.</param>
            <param name="seed_point">연결 성분의 개시점.시드 픽셀. </param>
            <param name="new_val">전부 칠해지는 영역이 새로운 픽셀치(전부 칠하는 값).</param>
            <param name="lo_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 피크셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 하한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="up_diff">현재의 관측 대상 픽셀과 그 연결 성분에 속하는 인접 피크셀, 또는 그 픽셀을 연결 성분에 추가하기 위한 시드 픽셀과의, 휘도치/색 차이(차이)의 허용 상한치. 8비트 칼라 화상 때는, 팩 된 값. </param>
            <param name="comp">구조체에의 포인터.이 함수는, 전부 칠해진 영역의 정보를 구조체에 대입한다. </param>
            <param name="flags">조작 플래그.하위 비트는 함수내에서 이용되는 연결성에 관한 값 4(디폴트) 또는 8이 들어가 있다. 
            연결성은, 어느 픽셀을 인접 픽셀이라고 보는지를 정의한다.상위 비트는 0, 혹은 Cv.FLOODFILL_FIXED_RANGE, Cv.FLOODFILL_MASK_ONLY 와의 편성이다.</param>
            <param name="mask">처리용 마스크</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Floor(System.Double)">
            <summary>
            인수보다 크지 않은 최대의 정수치를 돌려준다.
            </summary>
            <param name="value">부동 소수점형의 입력치</param>
            <returns>인수보다 크지 않은 최대의 정수치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FlushSeqWriter(OpenCvSharp.CvSeqWriter)">
            <summary>
            라이터(writer) 상태로부터 시퀸스 헤더를 갱신한다
            </summary>
            <param name="writer">라이터 상태.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Free(System.IntPtr@)">
            <summary>
            메모리 버퍼를 해제
            </summary>
            <param name="ptr">해제하는 영역의 포인터의 포인터</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GEMM(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,OpenCvSharp.CvArr,System.Double,OpenCvSharp.CvArr)">
            <summary>
            범용적인 행렬의 곱셈을 실시한다.
            dst = alpha*op(src1) *op(src2) + beta*op(src3), 　　여기서, op(X)는 X 혹은 X^t. 
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="alpha">곱셈 결과에 대한 스케일링 계수</param>
            <param name="src3">3번째의 입력 배열(시프트용). 만약 시프트 하지 않는 경우는 NULL로 할 수 있다</param>
            <param name="beta">3번째의 입력 배열에 대한 스케일링 계수</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GEMM(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,OpenCvSharp.CvArr,System.Double,OpenCvSharp.CvArr,OpenCvSharp.GemmOperation)">
            <summary>
            범용적인 행렬의 곱셈을 실시한다.
            dst = alpha*op(src1) *op(src2) + beta*op(src3), 　　여기서, op(X)는 X 혹은 X^t. 
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="alpha">곱셈 결과에 대한 스케일링 계수</param>
            <param name="src3">3번째의 입력 배열(시프트용).만약 시프트 하지 않는 경우는 NULL로 할 수 있다</param>
            <param name="beta">3번째의 입력 배열에 대한 스케일링 계수</param>
            <param name="dst">출력 배열</param>
            <param name="tABC">조작 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MatMul(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            행렬의 곱셈을 실시한다.
            dst = A*B.
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MatMulAdd(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            행렬의 곱셈을 실시한다.
            dst = A*B + C, C is optional.
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="src3">3번째의 입력 배열(시프트용). 만약 시프트 하지 않는 경우는 null로 할 수 있다</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Get1D(OpenCvSharp.CvArr,System.Int32)">
            <summary>
            특정의 배열 요소를 돌려준다.
            희소 배열로, 지정한 노드가 존재하지 않는 경우, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <returns>지정한 요소의 값. 희소 배열로 지정한 노드가 존재하지 않는 경우 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Get2D(OpenCvSharp.CvArr,System.Int32,System.Int32)">
            <summary>
            특정의 배열 요소를 돌려준다.
            희소 배열로, 지정한 노드가 존재하지 않는 경우, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <returns>지정한 요소의 값. 희소 배열로 지정한 노드가 존재하지 않는 경우 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Get3D(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32)">
            <summary>
            특정의 배열 요소를 돌려준다.
            희소 배열로, 지정한 노드가 존재하지 않는 경우, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <returns>지정한 요소의 값. 희소 배열로 지정한 노드가 존재하지 않는 경우 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetND(OpenCvSharp.CvArr,System.Int32[])">
            <summary>
            특정의 배열 요소를 돌려준다.
            희소 배열로, 지정한 노드가 존재하지 않는 경우, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetAffineTransform(OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvPoint2D32f[])">
            <summary>
            3점과 각각 대응하는 점으로부터 아핀 변환을 계산한다 (2 x 3 의 CV_32 FC1형). 인수로서 out를 취하는 overload의 간략판.
            아마 out로 나오는 행렬과 함수의 돌아가 값은 같아서, out 인수의 분을 생략한 것이다.
            </summary>
            <param name="src">입력(변환전) 화상내에 존재하는 삼각형의 3개의 정점 좌표를 격납한 배열</param>
            <param name="dst">출력(변환 후) 화상내에 존재하는 src에 대응한 삼각형의 3개의 정점 좌표를 격납한 배열</param>
            <returns>구할 수 있던 2×3의 아핀 변환 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetAffineTransform(OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvMat@)">
            <summary>
            3점과 각각 대응하는 점으로부터 아핀 변환을 계산한다 (2 x 3 의 CV_32 FC1형).
            </summary>
            <param name="src">입력(변환전) 화상내에 존재하는 삼각형의 3개의 정점 좌표를 격납한 배열</param>
            <param name="dst">출력(변환 후) 화상내에 존재하는 src에 대응한 삼각형의 3개의 정점 좌표를 격납한 배열</param>
            <param name="map_matrix">출력되는 2×3의 아핀 변환 행렬</param>
            <returns>구할 수 있던 2×3의 아핀 변환 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetCaptureProperty(OpenCvSharp.CvCapture,OpenCvSharp.CaptureProperty)">
            <summary>
            비디오 캡쳐의 프롭퍼티를 취득한다
            </summary>
            <param name="capture">비디오 캡쳐 클래스</param>
            <param name="property_id">프롭퍼티 ID</param>
            <returns>프롭퍼티의 값</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetCentralMoment(OpenCvSharp.CvMoments,System.Int32,System.Int32)">
            <summary>
            화상 모멘트 구조체로부터 중심 모멘트를 계산한다
            </summary>
            <param name="moments">화상 모멘트 구조체에의 포인터</param>
            <param name="x_order">꺼내는 모멘트의 x방향의 차수, x_order >= 0. </param>
            <param name="y_order">꺼내는 모멘트의 y방향의 차수, y_order >= 0 한편 x_order + y_order 작거나 같은 3. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetCol(OpenCvSharp.CvArr,OpenCvSharp.CvMat@,System.Int32)">
            <summary>
            지정된 열을 돌려준다
            </summary>
            <param name="arr">입력 배열</param>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="col">선택한 열의, 0을 기준으로 한 인덱스.</param>
            <returns>지정된 범위의 열</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetCols(OpenCvSharp.CvArr,OpenCvSharp.CvMat@,System.Int32,System.Int32)">
            <summary>
            지정된 범위의 열(복수열)을 돌려준다
            </summary>
            <param name="arr">입력 배열</param>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="start_col">범위의 최초의(이 값을 포함한다) 열의, 0을 기준으로 한 인덱스.</param>
            <param name="end_col">범위의 마지막(이 값을 포함하지 않는다) 열의, 0을 기준으로 한 인덱스.</param>
            <returns>지정된 범위의 열</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetDiag(OpenCvSharp.CvArr,OpenCvSharp.CvMat@)">
            <summary>
            입력 배열중의 지정된 대각열에 상당하는 헤더를 돌려준다. 
            </summary>
            <param name="arr">입력 배열</param>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <returns>결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetDiag(OpenCvSharp.CvArr,OpenCvSharp.CvMat@,OpenCvSharp.DiagType)">
            <summary>
            입력 배열중의 지정된 대각열에 상당하는 헤더를 돌려준다. 
            </summary>
            <param name="arr">입력 배열</param>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="diag">대각 배열의 종류</param>
            <returns>결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetDims(OpenCvSharp.CvArr)">
            <summary>
            배열의 차원과 그 사이즈를 돌려준다.
            IplImage 또는 CvMat의 경우에는, 화상이나 행렬의 행수에 관계없이 항상 2 를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <returns>배열의 차원수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetDims(OpenCvSharp.CvArr,System.Int32[]@)">
            <summary>
            배열의 차원과 그 사이즈를 돌려준다.
            IplImage 또는 CvMat의 경우에는, 화상이나 행렬의 행수에 관계없이 항상 2 를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="sizes">배열의 차원의 크기를 나타내는 옵션의 출력 벡터.2 차원 배열의 경우는 1번째에 행수(높이), 다음은 렬수(폭)를 나타낸다.</param>
            <returns>배열의 차원수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetDimSize(OpenCvSharp.CvArr,System.Int32)">
            <summary>
            배열의 지정된 차원의 요소수를 돌려준다. 
            </summary>
            <param name="arr">입력 배열</param>
            <param name="index">0을 기준으로 한 차원의 인덱스(행렬에서는 0은 행수, 1은 렬수를 나타낸다.화상에서는 0은 높이, 1은 폭을 나타낸다).</param>
            <returns>지정된 차원의 요소수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetElemType(OpenCvSharp.CvArr)">
            <summary>
            배열 요소의 타입을 돌려준다. 
            </summary>
            <param name="arr">입력 배열</param>
            <returns>배열 요소의 타입</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetErrMode">
            <summary>
            현재의 에러 모드를 돌려준다
            </summary>
            <returns>현재의 에러 모드</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetErrStatus">
            <summary>
            현재의 에러 status를 돌려준다
            </summary>
            <returns>현재의 에러 status</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetFileNode(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,OpenCvSharp.CvStringHashNode)">
            <summary>
            맵 또는 파일 스토리지내의 노드를 찾아낸다
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="map">부모 맵. null의 경우, 이 함수는 톱 레벨 노드를 찾는다. 만약 map와 key의 양쪽 모두가 null의 경우에는, 이 함수는 톱 레벨 노드를 가지는 맵인 루트 파일 노드를 돌려준다.</param>
            <param name="key">cvGetHashedKey으로 취득되는 노드명헤의 유일한 포인터</param>
            <returns> map, key에 대한 파일 노드</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetFileNode(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,OpenCvSharp.CvStringHashNode,System.Boolean)">
            <summary>
            맵 또는 파일 스토리지내의 노드를 찾아낸다
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="map">부모맵. null의 경우, 이 함수는 톱 레벨 노드를 찾는다.만약 map와 key의 양쪽 모두가 null의 경우에는, 이 함수는 톱 레벨 노드를 가지는 맵인 루트 파일 노드를 돌려준다.</param>
            <param name="key">cvGetHashedKey로 취득되는 노드명헤의 유일한 포인터</param>
            <param name="create_missing">absent key를 해시 테이블에 추가할지를 지정하는 플래그</param>
            <returns> map,key에 대한 파일 노드</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetFileNodeName(OpenCvSharp.CvFileNode)">
            <summary>
            파일 노드의 이름을 돌려준다.파일 노드가 이름을 가지지 않는지, node가 null의 경우에는 null를 돌려준다.
            </summary>
            <param name="node">파일 노드</param>
            <returns>파일 노드의 이름</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetFileNodeByName(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,System.String)">
            <summary>
            맵내 또는 파일 스토리지내로부터 노드를 탐색한다
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="map">부모맵. null의 경우, 이 함수는 제일 최초의 것으로부터 개시하고, 모든 톱 레벨 노드(스트림) 내를 탐색한다.</param>
            <param name="name">파일 노드명</param>
            <returns> name의 파일 노드</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetGraphVtx(OpenCvSharp.CvGraph,System.Int32)">
            <summary>
            인덱스를 이용해 그래프의 정점을 검색한다
            </summary>
            <param name="graph">그래프</param>
            <param name="vtx_idx">정점의 인덱스</param>
            <returns>그래프의 정점</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetHashedKey(OpenCvSharp.CvFileStorage,System.String)">
            <summary>
            주어진 이름에 대한 독특한 포인터를 돌려준다
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="name">파일 노드명</param>
            <returns>준 이름에 대한 독특한 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetHashedKey(OpenCvSharp.CvFileStorage,System.String,System.Boolean)">
            <summary>
            주어진 이름에 대한 독특한 포인터를 돌려준다
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="name">파일 노드명</param>
            <param name="create_missing">absent key를 해시 테이블에 추가할지를 지정하는 플래그</param>
            <returns>준 이름에 대한 독특한 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetHistValue_1D(OpenCvSharp.CvHistogram,System.Int32)">
            <summary>
            1 차원 히스토그램의 지정된 빈의 포인터를 돌려준다. 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="hist">히스토그램</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetHistValue_2D(OpenCvSharp.CvHistogram,System.Int32,System.Int32)">
            <summary>
            2 차원 히스토그램의 지정된 빈의 포인터를 돌려준다. 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="hist">히스토그램</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetHistValue_3D(OpenCvSharp.CvHistogram,System.Int32,System.Int32,System.Int32)">
            <summary>
            3 차원 히스토그램의 지정된 빈의 포인터를 돌려준다. 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="hist">히스토그램</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetHistValue_nD(OpenCvSharp.CvHistogram,System.Int32[])">
            <summary>
            n차원 히스토그램의 지정된 빈의 포인터를 돌려준다. 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="hist">히스토그램</param>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetHuMoments(OpenCvSharp.CvMoments,OpenCvSharp.CvHuMoments@)">
            <summary>
            7개의 Hu모멘트 불변량을 계산한다
            </summary>
            <param name="moments">화상 모멘트 구조체에의 참조</param>
            <param name="humoments">Hu모멘트 구조체에의 참조</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetImage(OpenCvSharp.CvArr,OpenCvSharp.IplImage)">
            <summary>
            Returns image header for arbitrary array
            </summary>
            <param name="arr">Input array. </param>
            <param name="image_header">IplImage structure used as a temporary buffer. </param>       
            <returns>cThe function cvGetImage returns image header for the input array that can be matrix - CvMat*, or image - IplImage*. In the case of image the function simply returns the input pointer. In the case of CvMat* it initializes image_header structure with parameters of the input matrix. Note that if we transform IplImage to CvMat and then transform CvMat back to IplImage, we can get different headers if the ROI is set, and thus some IPL functions that calculate image stride from its width and align may fail on the resultant image.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetImageCOI(OpenCvSharp.IplImage)">
            <summary>
            화상의 COI(channel of interest)를 돌려준다.
            전채널이 선택되는 경우에는, 0 이 돌려주어진다).
            </summary>
            <param name="image">화상 헤더</param>
            <returns>COI（channel of interest）를 돌려준다(전채널이 선택되는 경우에는 0 이 돌려진다).</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetImageROI(OpenCvSharp.IplImage)">
            <summary>
            화상의 ROI 좌표를 돌려준다. ROI 가 존재하지 않는 경우에는, 사각형 cvRect(0,0,image->width,image->height)가 돌려주어진다.
            </summary>
            <param name="image">화상 헤더</param>
            <returns>ROI</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetMat(OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
             <summary>
             Returns matrix header for arbitrary array
             </summary>
             <param name="arr">Input array. </param>
             <param name="header">Pointer to CvMat structure used as a temporary buffer. </param>       
             <returns>The function cvGetMat returns matrix header for the input array that can be matrix - CvMat, image - IplImage or multi-dimensional dense array - CvMatND* (latter case is allowed only if allowND != 0) . In the case of matrix the function simply returns the input pointer. In the case of IplImage* or CvMatND* it initializes header structure with parameters of the current image ROI and returns pointer to this temporary structure. Because COI is not supported by CvMat, it is returned separately.
            
            The function provides an easy way to handle both types of array - IplImage and CvMat -, using the same code. Reverse transform from CvMat to IplImage can be done using cvGetImage function.
            
            Input array must have underlying data allocated or attached, otherwise the function fails.
            If the input array is IplImage with planar data layout and COI set, the function returns pointer to the selected plane and COI = 0. It enables per-plane processing of multi-channel images with planar data layout using OpenCV functions. </returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetMat(OpenCvSharp.CvArr,OpenCvSharp.CvMat,System.Int32@)">
             <summary>
             Returns matrix header for arbitrary array
             </summary>
             <param name="arr">Input array. </param>
             <param name="header">Pointer to CvMat structure used as a temporary buffer. </param>       
             <param name="coi">Optional output parameter for storing COI. </param>
             <returns>The function cvGetMat returns matrix header for the input array that can be matrix - CvMat, image - IplImage or multi-dimensional dense array - CvMatND* (latter case is allowed only if allowND != 0) . In the case of matrix the function simply returns the input pointer. In the case of IplImage* or CvMatND* it initializes header structure with parameters of the current image ROI and returns pointer to this temporary structure. Because COI is not supported by CvMat, it is returned separately.
            
            The function provides an easy way to handle both types of array - IplImage and CvMat -, using the same code. Reverse transform from CvMat to IplImage can be done using cvGetImage function.
            
            Input array must have underlying data allocated or attached, otherwise the function fails.
            If the input array is IplImage with planar data layout and COI set, the function returns pointer to the selected plane and COI = 0. It enables per-plane processing of multi-channel images with planar data layout using OpenCV functions. </returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetMat(OpenCvSharp.CvArr,OpenCvSharp.CvMat,System.Int32@,System.Boolean)">
             <summary>
             Returns matrix header for arbitrary array
             </summary>
             <param name="arr">Input array. </param>
             <param name="header">Pointer to CvMat structure used as a temporary buffer. </param>       
             <param name="coi">Optional output parameter for storing COI. </param>
             <param name="allowND">If true, the function accepts multi-dimensional dense arrays (CvMatND*) and returns 2D (if CvMatND has two dimensions) or 1D matrix (when CvMatND has 1 dimension or more than 2 dimensions). The array must be continuous. </param>       
             <returns>The function cvGetMat returns matrix header for the input array that can be matrix - CvMat, image - IplImage or multi-dimensional dense array - CvMatND* (latter case is allowed only if allowND != 0) . In the case of matrix the function simply returns the input pointer. In the case of IplImage* or CvMatND* it initializes header structure with parameters of the current image ROI and returns pointer to this temporary structure. Because COI is not supported by CvMat, it is returned separately.
            
            The function provides an easy way to handle both types of array - IplImage and CvMat -, using the same code. Reverse transform from CvMat to IplImage can be done using cvGetImage function.
            
            Input array must have underlying data allocated or attached, otherwise the function fails.
            If the input array is IplImage with planar data layout and COI set, the function returns pointer to the selected plane and COI = 0. It enables per-plane processing of multi-channel images with planar data layout using OpenCV functions. </returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetMinMaxHistValue(OpenCvSharp.CvHistogram,System.Single@,System.Single@)">
            <summary>
            히스토그램의 빈의 최소치/최대치를 요구한다. 
            같은 값의 최대치나 최소치가 복수 존재하는 경우, 사전순서에 늘어놓았을 때에 가장 선두가 되는 인덱스가 돌려주어진다. 
            </summary>
            <param name="hist">히스토그램</param>
            <param name="min_value">히스토그램의 최소치의 출력</param>
            <param name="max_value">히스토그램의 최대치의 출력</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GetMinMaxHistValue(OpenCvSharp.CvHistogram,System.Single@,System.Single@,System.Int32[]@,System.Int32[]@)">
            <summary>
            히스토그램의 빈의 최소치/최대치와 그러한 장소를 요구한다. 
            같은 값의 최대치나 최소치가 복수 존재하는 경우, 사전순서에 늘어놓았을 때에 가장 선두가 되는 인덱스가 돌려주어진다. 
            </summary>
            <param name="hist">히스토그램</param>
            <param name="min_value">히스토그램의 최소치의 출력</param>
            <param name="max_value">히스토그램의 최대치의 출력</param>
            <param name="min_idx">최소치의 배열중의 인덱스의 출력</param>
            <param name="max_idx">최대치의 배열중의 인덱스의 출력</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GetModuleInfo(System.String,System.String@,System.String@)">
            <summary>
            등록된 모듈과 플러그 인의 정보를 꺼낸다
            </summary>
            <param name="module_name">대상의 모듈명, null의 경우는 모든 모듈.</param>
            <param name="version">출력 파라미터.모듈에 대한 정보(버젼을 포함한다).</param>
            <param name="loaded_addon_plugins">CXCORE가 로드 가능한 최적화 플러그 인의 이름과 버젼의 리스트.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GetNormalizedCentralMoment(OpenCvSharp.CvMoments,System.Int32,System.Int32)">
            <summary>
            화상 모멘트 구조체로부터 정규화된 중심 모멘트를 계산한다
            </summary>
            <param name="moments">화상 모멘트 구조체에의 참조</param>
            <param name="x_order">꺼내는 모멘트의 x방향의 차수, x_order >= 0. </param>
            <param name="y_order">꺼내는 모멘트의 y방향의 차수, y_order >= 0 한편 x_order + y_order 작거나 같은 3. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetNumThreads">
            <summary>
            OpenMP를 이용해 병렬화 된 OpenCV 함수에 의해 사용되어지는 현재의 쓰레드수를 돌려준다.
            </summary>
            <returns>현재 사용되고 있는 쓰레드수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetOptimalDFTSize(System.Int32)">
            <summary>
            주어진 벡터의 사이즈에 대한 최적인 DFT의 사이즈를 돌려준다.
            </summary>
            <param name="size0">벡터의 사이즈</param>
            <returns>최적인 DFT의 사이즈</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetPerspectiveTransform(OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvPoint2D32f[])">
            <summary>
            4점과 각각 대응하는 점을 이용해 투시 변환 행렬을 요구한다 (3 x 3 의 CV_32 FC1형). 인수로서 out를 취하는 overload의 간략판.
            아마 out로 나오는 행렬과 함수의 돌아가 값은 같아서, out 인수의 분을 생략한 것이다.
            </summary>
            <param name="src">입력 화상중의 구형의 4 정점의 좌표</param>
            <param name="dst">출력 화상중의 대응하는 구형의 4 정점의 좌표</param>
            <returns>구할 수 있던 3×3의 투영 변환 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetPerspectiveTransform(OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvMat@)">
            <summary>
            4점과 각각 대응하는 점을 이용해 투시 변환 행렬을 요구한다 (3 x 3 의 CV_32 FC1형).
            </summary>
            <param name="src">입력 화상중의 구형의 4 정점의 좌표</param>
            <param name="dst">출력 화상중의 대응하는 구형의 4 정점의 좌표</param>
            <param name="map_matrix">출력되는 3×3의 투영 변환 행렬</param>
            <returns>구할 수 있던 3×3의 투영 변환 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.WarpPerspectiveQMatrix(OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvPoint2D32f[])">
            <summary>
            4점과 각각 대응하는 점을 이용해 투시 변환 행렬을 요구한다 (3 x 3 의 CV_32 FC1형). GetPerspectiveTransform의 앨리어스(alias).
            </summary>
            <param name="src">입력 화상중의 구형의 4 정점의 좌표</param>
            <param name="dst">출력 화상중의 대응하는 구형의 4 정점의 좌표</param>
            <returns>구할 수 있던 3×3의 투영 변환 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.WarpPerspectiveQMatrix(OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvMat@)">
            <summary>
            4점과 각각 대응하는 점을 이용해 투시 변환 행렬을 요구한다 (3 x 3 의 CV_32 FC1형).GetPerspectiveTransform의 앨리어스(alias).
            </summary>
            <param name="src">입력 화상중의 구형의 4 정점의 좌표</param>
            <param name="dst">출력 화상중의 대응하는 구형의 4 정점의 좌표</param>
            <param name="map_matrix">출력되는 3×3의 투영 변환 행렬</param>
            <returns>구할 수 있던 3×3의 투영 변환 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetQuadrangleSubPix(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            사각형 영역의 픽셀치를 화상으로부터 서브 픽셀로 취득한다(화상의 회전＋병진 이동을 행한다).
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">추출된 구형</param>
            <param name="map_matrix">2 × 3 의 변환 행렬[A|b]</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GetRawData(OpenCvSharp.CvArr,System.IntPtr@)">
            <summary>
            배열의 로레벨 정보를 꺼낸다
            </summary>
            <param name="arr">배열 헤더.</param>
            <param name="data">출력인 전 화상의 원점에의 포인터, 혹은 ROI 가 설정되어 있는 경우는 ROI 의 원점에의 포인터.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GetRawData(OpenCvSharp.CvArr,System.IntPtr@,System.Int32@)">
            <summary>
            배열의 로레벨 정보를 꺼낸다
            </summary>
            <param name="arr">배열 헤더.</param>
            <param name="data">출력인 전화상의 원점에의 포인터, 혹은 ROI 가 설정되어 있는 경우는 ROI 의 원점에의 포인터.</param>
            <param name="step">출력인 바이트 단위로 나타내진 행의 길이.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GetRawData(OpenCvSharp.CvArr,System.IntPtr@,System.Int32@,OpenCvSharp.CvSize@)">
            <summary>
            배열의 로레벨 정보를 꺼낸다
            </summary>
            <param name="arr">배열 헤더.</param>
            <param name="data">출력인 전화상의 원점에의 포인터, 혹은 ROI 가 설정되어 있는 경우는 ROI 의 원점에의 포인터.</param>
            <param name="step">출력인 바이트 단위로 나타내진 행의 길이.</param>
            <param name="roi_size">출력인 ROI 사이즈.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GetReal1D(OpenCvSharp.CvArr,System.Int32)">
            <summary>
            싱글 채널의 배열의 특정의 요소를 돌려준다.배열이 멀티 채널의 경우는, 런타임 에러가 발생한다.
            </summary>
            <param name="arr">입력 배열.싱글 채널이 아니면 안 된다.</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <returns>지정한 요소의 값. 지정한 노드가 존재하지 않으면, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetReal2D(OpenCvSharp.CvArr,System.Int32,System.Int32)">
            <summary>
            싱글 채널의 배열의 특정의 요소를 돌려준다.배열이 멀티 채널의 경우는, 런타임 에러가 발생한다.
            </summary>
            <param name="arr">입력 배열.싱글 채널이 아니면 안 된다.</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <returns>지정한 요소의 값. 지정한 노드가 존재하지 않으면, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetReal3D(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32)">
            <summary>
            싱글 채널의 배열의 특정의 요소를 돌려준다.배열이 멀티 채널의 경우는, 런타임 에러가 발생한다.
            </summary>
            <param name="arr">입력 배열.싱글 채널이 아니면 안 된다.</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <returns>지정한 요소의 값. 지정한 노드가 존재하지 않으면, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetRealND(OpenCvSharp.CvArr,System.Int32[])">
            <summary>
            싱글 채널의 배열의 특정의 요소를 돌려준다.배열이 멀티 채널의 경우는, 런타임 에러가 발생한다.
            </summary>
            <param name="arr">입력 배열.싱글 채널이 아니면 안 된다.</param>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
            <returns>지정한 요소의 값. 지정한 노드가 존재하지 않으면, 이 함수는 0을 돌려준다(이 함수에 의해서 새로운 노드는 생성되지 않는다).</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetRectSubPix(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f)">
            <summary>
            사각형 영역의 픽셀치를 화상으로부터 서브 픽셀로 취득한다(화상의 병진 이동을 행한다).
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">추출된 사각형</param>
            <param name="center">입력 화상중에 있는 추출된 사각형 중심의 부동 소수점형 좌표.중심은 화상중에 없으면 안 된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GetRootFileNode(OpenCvSharp.CvFileStorage)">
            <summary>
            톱 레벨 파일 노드의 하나를 돌려준다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <returns>톱 레벨 파일 노드의 하나</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetRootFileNode(OpenCvSharp.CvFileStorage,System.Int32)">
            <summary>
            톱 레벨 파일 노드의 하나를 돌려준다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="stream_index">0으로부터 시작되는 스트림의 인덱스.많은 경우, 파일중에 존재하는 것은 하나의 스톰이지만, 복수로도 될 수 있다.</param>
            <returns>톱 레벨 파일 노드의 하나</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetRow(OpenCvSharp.CvArr,OpenCvSharp.CvMat@,System.Int32)">
            <summary>
            지정된 행을 돌려준다
            </summary>
            <param name="arr">입력 배열</param>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더의 참조</param>
            <param name="row">선택한 행의, 0을 기준으로 한 인덱스.</param>
            <returns>지정된 범위의 행</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetRows(OpenCvSharp.CvArr,OpenCvSharp.CvMat@,System.Int32,System.Int32)">
            <summary>
            지정된 범위의 행(복수행)을 돌려준다
            </summary>
            <param name="arr">입력 배열</param>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더의 참조</param>
            <param name="start_row">범위의 최초의(이 값을 포함한다) 행의, 0을 기준으로 한 인덱스.</param>
            <param name="end_row">범위의 마지막(이 값을 포함하지 않는다) 행의, 0을 기준으로 한 인덱스.</param>
            <returns>지정된 범위의 행</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetRows(OpenCvSharp.CvArr,OpenCvSharp.CvMat@,System.Int32,System.Int32,System.Int32)">
            <summary>
            지정된 범위의 행(복수행)을 돌려준다
            </summary>
            <param name="arr">입력 배열</param>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더의 참조</param>
            <param name="start_row">범위의 최초의(이 값을 포함한다) 행의, 0을 기준으로 한 인덱스.</param>
            <param name="end_row">범위의 마지막(이 값을 포함하지 않는다) 행의, 0을 기준으로 한 인덱스.</param>
            <param name="delta_row">행의 범위의 인덱스 간격. 이 함수는, start_row로부터 end_row(는 포함하지 않는다)까지, delta_row마다행을 추출한다. </param>
            <returns>지정된 범위의 행</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetSeqElem``1(OpenCvSharp.CvSeq,System.Int32)">
            <summary>
            주어진 인덱스를 가지는 요소를 시퀸스중에서 요구해 그 요소를 돌려준다.
            </summary>
            <typeparam name="T">출력 오브젝트의 형태</typeparam>
            <param name="seq">시퀸스</param>
            <param name="index">요소의 인덱스. 부의 인덱스의 지정도 가능하고, 예를 들면,-1은 순서의 마지막 요소,-2는 마지막 하나전을 가리킨다.</param>
            <returns>주어진 인덱스를 가지는 요소. 요소가 발견되지 않는 경우는 null.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetSeqElem``1(OpenCvSharp.CvSeq{``0},System.Int32)">
            <summary>
            주어진 인덱스를 가지는 요소를 시퀸스중에서 구해 그 요소를 돌려준다.
            </summary>
            <typeparam name="T">출력 오브젝트의 형태</typeparam>
            <param name="seq">시퀸스</param>
            <param name="index">요소의 인덱스. 부(거짓의 값)의 인덱스의 지정도 가능하고, 예를 들면,-1은 시퀸스의 마지막 요소, -2는 마지막 하나전을 가리킨다.</param>
            <returns>주어진 인덱스를 가지는 요소. 요소가 발견되지 않는 경우는 null.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetSeqReaderPos(OpenCvSharp.CvSeqReader)">
            <summary>
            현재의 리더의 위치(0 ... reader->seq->total - 1 의 범위)를 돌려준다.
            </summary>
            <param name="reader">리더 상태</param>
            <returns>리더의 위치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetSetElem(OpenCvSharp.CvSet,System.Int32)">
            <summary>
            인덱스에 의한 세트 요소를 검색한다
            </summary>
            <param name="set">세트.</param>
            <param name="index">시퀸 세트의 요소 인덱스.</param>
            <returns>찾아낸 요소의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetSize(OpenCvSharp.CvArr)">
            <summary>
            행렬 또는 화상의 ROI 의 사이즈를 돌려준다
            </summary>
            <param name="arr">배열의 헤더</param>
            <returns>사이즈</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetNextSparseNode(OpenCvSharp.CvSparseMatIterator)">
            <summary>
            희소 배열에 대해 다음의 요소의 포인터를 돌려준다
            </summary>
            <param name="mat_iterator">희소 배열의 iterator.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetSpatialMoment(OpenCvSharp.CvMoments,System.Int32,System.Int32)">
            <summary>
            화상 모멘트 구조체로부터 공간 모멘트를 계산한다
            </summary>
            <param name="moments">cvMoments 에 의해서 얻을 수 있는 화상 모멘트 구조체.</param>
            <param name="x_order">꺼내는 모멘트의 x방향의 차수, x_order >= 0. </param>
            <param name="y_order">꺼내는 모멘트의 y방향의 차수, y_order >= 0 한편 x_order + y_order 작거나 같은 3. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetSubRect(OpenCvSharp.CvArr,OpenCvSharp.CvMat@,OpenCvSharp.CvRect)">
            <summary>
            입력 배열중의 지정한 사각형 영역에 해당하는 헤더를 돌려준다.
            즉, 입력 배열의 일부의 사각형 영역을, 독립한 배열로서 취급할 수 있도록 한다.이 함수에서는 ROI 를 고려해, 실제로는 ROI의 부분 배열이 꺼내진다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="rect">주목하는 사각형 영역의, 0 을 기준으로 한 좌표</param>
            <returns>결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetSubArr(OpenCvSharp.CvArr,OpenCvSharp.CvMat@,OpenCvSharp.CvRect)">
            <summary>
            입력 배열중의 지정한 사각형 영역에 상당하는 헤더를 돌려준다.
            즉, 입력 배열의 일부의 사각형 영역을, 독립한 배열로서 취급할 수 있도록 한다.이 함수에서는 ROI 를 고려해, 실제로는 ROI 의 부분 배열이 꺼내진다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="submat">결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</param>
            <param name="rect">주목하는 구형 영역의, 0 을 기준으로 한 좌표</param>
            <returns>결과적으로 얻을 수 있는 부분 배열의 헤더에의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetTextSize(System.String,OpenCvSharp.CvFont,OpenCvSharp.CvSize@,System.Int32@)">
            <summary>
            문자열의 폭과 높이를 취득한다
            </summary>
            <param name="text_string">입력 문자열</param>
            <param name="font">폰트 구조체에의 참조</param>
            <param name="text_size">결과적으로 얻을 수 있는 문자열의 사이즈. 문자의 높이에는, baseline보다 아래의 부분의 높이는 포함되지 않는다.</param>
            <param name="baseline">문자의 최하점에서 본 baseline의 y좌표</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GetTickCount">
            <summary>
            시스템 의존의 시작시점부터의 tics수(스타트 업으로부터의 CPU ticks수, 1970년부터의 밀리 세컨드등 )를 돌려준다.
            이 함수는, 어느 함수나 유저 코드의 실행 시간을 정확하게 계측하는데 편리하다. ticks수로부터 시간 단위로 변환하기 위해서는, cvGetTickFrequency를 이용한다. 
            </summary>
        </member>
        <member name="M:OpenCvSharp.Cv.GetTickFrequency">
            <summary>
            1마이크로 세컨드 당의 tics수를 돌려준다.
            즉, cvGetTickCount()를 cvGetTickFrequency()로 나눈 값이, 플랫폼 의존의 개시시각으로부터의 마이크로 세컨드 단위의 시각이 된다. 
            </summary>
            <returns>1마이크로 세컨드 당의 ticks수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetThreadNum">
            <summary>
            현재의 쓰레드의 인덱스를 돌려준다
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetTrackbarPos(System.String,System.String)">
            <summary>
            지정된 트랙바의 현재 위치를 돌려준다
            </summary>
            <param name="trackbar_name">트랙바의 이름</param>
            <param name="window_name">트랙바의 부모 윈도우의 이름</param>
            <returns>트랙바의 현재 위치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetWindowHandle(System.String)">
            <summary>
            네이티브 윈도우 핸들(Win32 의 경우는 HWND, GTK+ 의 경우는 GtkWidget)을 돌려준다.
            </summary>
            <param name="name">윈도우의 이름</param>
            <returns>윈도우 핸들</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GetWindowName(System.IntPtr)">
            <summary>
            주어진 네이티브 윈도우 핸들(Win32 의 경우는 HWND, GTK+ 의 경우는 GtkWidget)이 나타내 보이는 윈도우의 이름을 돌려준다.
            </summary>
            <param name="window_handle">윈도우의 핸들</param>
            <returns>윈도우의 이름</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GoodFeaturesToTrack(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f[]@,System.Int32@,System.Double,System.Double)">
            <summary>
            화상중으로부터 큰 고유치를 가지는 코너를 검출한다.
            </summary>
            <param name="image">8비트, 또는 32비트 부동 소수점형 싱글 채널의 입력 화상</param>
            <param name="eig_image">32비트 부동 소수점형의 템포리 화상. 사이즈는 image 와 같다</param>
            <param name="temp_image">다른 템포리 화상. 사이즈·포맷 모두 eig_image 와 같다</param>
            <param name="corners">출력 파라미터. 검출된 코너</param>
            <param name="corner_count">출력 파라미터. 검출된 코너의 수</param>
            <param name="quality_level">최대·최소의 고유치 정수(검출되는 화상 코너의 허용 최저 품질을 지정한다)</param>
            <param name="min_distance">출력되는 화상 코너간의 허용 최저 거리(Euclid 거리를 이용한다)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GoodFeaturesToTrack(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f[]@,System.Int32@,System.Double,System.Double,OpenCvSharp.CvArr)">
            <summary>
            화상중으로부터 큰 고유치를 가지는 코너를 검출한다.
            </summary>
            <param name="image">8비트, 또는 32비트 부동 소수점형 싱글 채널의 입력 화상</param>
            <param name="eig_image">32비트 부동 소수점형의 템포리 화상.사이즈는 image 와 같다</param>
            <param name="temp_image">다른 템포리 화상.사이즈·포맷 모두 eig_image 와 같다</param>
            <param name="corners">출력 파라미터.검출된 코너</param>
            <param name="corner_count">출력 파라미터.검출된 코너의 수</param>
            <param name="quality_level">최대·최소의 고유치 정수(검출되는 화상 코너의 허용 최저 품질을 지정한다)</param>
            <param name="min_distance">출력되는 화상 코너간의 허용 최저 거리(Euclid 거리를 이용한다)</param>
            <param name="mask">주목 영역(ROI).지정된 영역 또는 mask 가 null 의 경우는 화상 전체로부터 점을 선택한다</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GoodFeaturesToTrack(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f[]@,System.Int32@,System.Double,System.Double,OpenCvSharp.CvArr,System.Int32)">
            <summary>
            화상중으로부터 큰 고유치를 가지는 코너를 검출한다.
            </summary>
            <param name="image">8비트, 또는 32비트 부동 소수점형 싱글 채널의 입력 화상</param>
            <param name="eig_image">32비트 부동 소수점형의 템포리 화상.사이즈는 image 와 같다</param>
            <param name="temp_image">다른 템포리 화상. 사이즈·포맷 모두 eig_image 와 같다</param>
            <param name="corners">출력 파라미터.검출된 코너</param>
            <param name="corner_count">출력 파라미터.검출된 코너의 수</param>
            <param name="quality_level">최대·최소의 고유치 정수(검출되는 화상 코너의 허용 최저 품질을 지정한다)</param>
            <param name="min_distance">출력되는 화상 코너간의 허용 최저 거리(Euclid 거리를 이용한다)</param>
            <param name="mask">주목 영역(ROI).지정된 영역 또는 mask 가 null 의 경우는 화상 전체로부터 점을 선택한다</param>
            <param name="block_size">평균화 블록의 사이즈. 이 함수로 내부적으로 이용되는 cvCornerMinEigenVal 혹은, cvCornerHarris 에, 이 인수가 건네받는다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GoodFeaturesToTrack(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f[]@,System.Int32@,System.Double,System.Double,OpenCvSharp.CvArr,System.Int32,System.Boolean)">
            <summary>
            화상중으로부터 큰 고유치를 가지는 코너를 검출한다.
            </summary>
            <param name="image">8비트, 또는 32비트 부동 소수점형 싱글 채널의 입력 화상</param>
            <param name="eig_image">32비트 부동 소수점형의 템포리 화상.사이즈는 image 와 같다</param>
            <param name="temp_image">다른 템포리 화상.사이즈·포맷 모두 eig_image 와 같다</param>
            <param name="corners">출력 파라미터.검출된 코너</param>
            <param name="corner_count">출력 파라미터.검출된 코너의 수</param>
            <param name="quality_level">최대·최소의 고유치 정수(검출되는 화상 코너의 허용 최저 품질을 지정한다)</param>
            <param name="min_distance">출력되는 화상 코너간의 허용 최저 거리(Euclid 거리를 이용한다)</param>
            <param name="mask">주목 영역(ROI).지정된 영역 또는 mask 가 null 의 경우는 화상 전체로부터 점을 선택한다</param>
            <param name="block_size">평균화 블록의 사이즈.이 함수로 내부적으로 이용되는 cvCornerMinEigenVal 혹은, cvCornerHarris 에, 이 인수가 건네받는다.</param>
            <param name="use_harris">true의 경우는, 디폴트의 cvCornerMinEigenVal 대신에, Harris 검출기(cvCornerHarris)를 이용한다</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GoodFeaturesToTrack(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f[]@,System.Int32@,System.Double,System.Double,OpenCvSharp.CvArr,System.Int32,System.Boolean,System.Double)">
            <summary>
            화상중으로부터 큰 고유치를 가지는 코너를 검출한다.
            </summary>
            <param name="image">8비트, 또는 32비트 부동 소수점형 싱글 채널의 입력 화상</param>
            <param name="eig_image">32비트 부동 소수점형의 템포리 화상.사이즈는 image 와 같다</param>
            <param name="temp_image">다른 템포리 화상.사이즈·포맷 모두 eig_image 와 같다</param>
            <param name="corners">출력 파라미터.검출된 코너</param>
            <param name="corner_count">출력 파라미터.검출된 코너의 수</param>
            <param name="quality_level">최대·최소의 고유치 정수(검출되는 화상 코너의 허용 최저 품질을 지정한다)</param>
            <param name="min_distance">출력되는 화상 코너간의 허용 최저 거리(Euclid 거리를 이용한다)</param>
            <param name="mask">주목 영역(ROI).지정된 영역 또는 mask 가 null 의 경우는 화상 전체로부터 점을 선택한다</param>
            <param name="block_size">평균화 블록의 사이즈.이 함수로 내부적으로 이용되는 cvCornerMinEigenVal 혹은, cvCornerHarris 에, 이 인수가 건네받는다.</param>
            <param name="use_harris">true의 경우는, 디폴트의 cvCornerMinEigenVal 대신에, Harris 검출기(cvCornerHarris)를 이용한다</param>
            <param name="k">Harris 검출기의 파라미터(use_harris==true 때 마셔 사용)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.GrabFrame(OpenCvSharp.CvCapture)">
            <summary>
            카메라나 파일로부터 프레임을 꺼낸다. 꺼내진 프레임은 내부적으로 보존된다.
            꺼내진 프레임을 유저측에서 이용하기 위해서는, cvRetrieveFrame 를 이용해야 하는 것이다.
            </summary>
            <param name="capture">비디오 캡쳐 클래스</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphAddVtx(OpenCvSharp.CvGraph)">
            <summary>
            그래프에 정점을 추가한다
            </summary>
            <param name="graph">그래프</param>
            <returns>정점의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphAddVtx(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프에 정점을 추가한다
            </summary>
            <param name="graph">그래프</param>
            <param name="vtx">추가되는 정점의 초기화에 사용되는 옵션의 입력 인수(sizeof(CvGraphVtx)의 영역을 넘은 유저 정의 필드만 카피된다). </param>
            <returns>정점의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphAddVtx(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx,OpenCvSharp.CvGraphVtx@)">
            <summary>
            그래프에 정점을 추가한다
            </summary>
            <param name="graph">그래프</param>
            <param name="vtx">추가되는 정점의 초기화에 사용되는 옵션의 입력 인수(sizeof(CvGraphVtx)의 영역을 넘은 유저 정의 필드만 카피된다). </param>
            <param name="inserted_vtx">새로운 정점의 주소가 여기에 쓰여진다.</param>
            <returns>정점의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphAddEdge(OpenCvSharp.CvGraph,System.Int32,System.Int32)">
            <summary>
            그래프에 엣지를 추가한다(인덱스 지정)
            </summary>
            <param name="graph">그래프</param>
            <param name="start_idx">엣지의 시점을 나타내는 인덱스</param>
            <param name="end_idx">엣지의 종점을 나타내는 인덱스. 무방향그래프의 경우, 순서는 어디라도 좋다. </param>
            <returns>추가에 성공하면 1을 돌려줌, 이미 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려주어, 정점의 어느 쪽인지가 존재하지 않는, 시점과 종점이 같을때나 다른 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphAddEdge(OpenCvSharp.CvGraph,System.Int32,System.Int32,OpenCvSharp.CvGraphEdge)">
            <summary>
            그래프에 엣지를 추가한다(인덱스 지정)
            </summary>
            <param name="graph">그래프</param>
            <param name="start_idx">엣지의 시점을 나타내는 인덱스</param>
            <param name="end_idx">엣지의 종점을 나타내는 인덱스. 무방향그래프의 경우, 순서는 어디라도 좋다. </param>
            <param name="edge">옵션의 입력 파라미터.엣지의 초기화를 위한 데이터. </param>
            <returns>추가에 성공하면 1을 돌려줌, 이미 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려주어, 정점의 어느 쪽인지가 존재하지 않는, 시점과 종점이 같을때나 다른 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphAddEdge(OpenCvSharp.CvGraph,System.Int32,System.Int32,OpenCvSharp.CvGraphEdge,System.IntPtr)">
            <summary>
            그래프에 엣지를 추가한다(인덱스 지정)
            </summary>
            <param name="graph">그래프</param>
            <param name="start_idx">엣지의 시점을 나타내는 인덱스</param>
            <param name="end_idx">엣지의 종점을 나타내는 인덱스. 무방향그래프의 경우, 순서는 어디라도 좋다. </param>
            <param name="edge">옵션의 입력 파라미터. 엣지의 초기화를 위한 데이터. </param>
            <param name="inserted_edge">입력된 엣지의 주소를 보존하기 위한 , 옵션의 출력 파라미터. </param>
            <returns>추가에 성공하면 1을 돌려줌, 이미 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려줌, 정점의 어느 쪽인지가 존재하지 않는, 시점과 종점이 같을때나 다른 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphAddEdgeByPtr(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphEdge,OpenCvSharp.CvGraphEdge)">
            <summary>
            그래프에 엣지를 추가한다(포인터 지정)
            </summary>
            <param name="graph">그래프</param>
            <param name="start_vtx">엣지의 시점을 나타내는 정점</param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점</param>
            <returns>추가에 성공하면 1을 돌려줌, 이미 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려주어, 정점의 어느 쪽인지가 존재하지 않는, 시점과 종점이 같을때나 다른 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphAddEdgeByPtr(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphEdge,OpenCvSharp.CvGraphEdge,OpenCvSharp.CvGraphEdge)">
            <summary>
            그래프에 엣지를 추가한다(포인터 지정)
            </summary>
            <param name="graph">그래프</param>
            <param name="start_vtx">엣지의 시점을 나타내는 정점</param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점</param>
            <param name="edge">옵션의 입력 파라미터, 엣지의 초기화 데이터.</param>
            <returns>추가에 성공하면 1을 돌려줌, 이미 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려주어, 정점의 어느 쪽인지가 존재하지 않는, 시점과 종점이 같을때나 다른 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphAddEdgeByPtr(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphEdge,OpenCvSharp.CvGraphEdge,OpenCvSharp.CvGraphEdge,System.IntPtr)">
            <summary>
            그래프에 엣지를 추가한다(포인터 지정)
            </summary>
            <param name="graph">그래프</param>
            <param name="start_vtx">엣지의 시점을 나타내는 정점</param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점</param>
            <param name="edge">옵션의 입력 파라미터, 엣지의 초기화 데이터.</param>
            <param name="inserted_edge">엣지의 집합 중에서 입력된 엣지의 주소를 보존하기 위한 , 옵션의 출력 파라미터.</param>
            <returns>추가에 성공하면 1을 돌려줌, 이미 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려주어, 정점의 어느 쪽인지가 존재하지 않는, 시점과 종점이 같을때나 다른 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphEdgeIdx(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphEdge)">
            <summary>
            그래프의 엣지의 인덱스를 돌려준다
            </summary>
            <param name="graph">그래프</param>
            <param name="edge">엣지의 참조</param>
            <returns>그래프의 엣지의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphGetEdgeCount(OpenCvSharp.CvGraph)">
            <summary>
            
            </summary>
            <param name="graph">グラフ</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphGetVtxCount(OpenCvSharp.CvGraph)">
            <summary>
            Returns count of vertex
            </summary>
            <param name="graph">그래프</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphRemoveEdge(OpenCvSharp.CvGraph,System.Int32,System.Int32)">
            <summary>
            그래프로부터 엣지를 삭제한다(인덱스 지정)
            </summary>
            <param name="graph">그래프</param>
            <param name="start_idx">엣지의 시점을 나타내는 정점의 인덱스. </param>
            <param name="end_idx">엣지의 종점을 나타내는 정점의 인덱스. 무방향그래프의 경우, 순서는 어디라도 좋다. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphRemoveEdgeByPtr(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx,OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프로부터 엣지를 삭제한다(포인터 지정)
            </summary>
            <param name="graph">그래프</param>
            <param name="start_vtx">엣지의 시점을 나타내는 정점에의 포인터.</param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점에의 포인터. 무방향그래프의 경우, 순서는 어디라도 좋다. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphRemoveVtx(OpenCvSharp.CvGraph,System.Int32)">
            <summary>
            
            </summary>
            <param name="graph"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphRemoveVtxByPtr(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx)">
            <summary>
            
            </summary>
            <param name="graph"></param>
            <param name="vtx"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphVtxDegree(OpenCvSharp.CvGraph,System.Int32)">
            <summary>
            
            </summary>
            <param name="graph"></param>
            <param name="vtx_idx"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphVtxDegreeByPtr(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx)">
            <summary>
            정점으로 연결되어 있는 엣지의 수를 센다(포인터 지정)
            </summary>
            <param name="graph">그래프</param>
            <param name="vtx">정점에의 포인터</param>
            <returns>지정한 정점으로 접속한(들어가는/나오는 양방향의) 엣지의 수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.GraphVtxIdx(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx)">
            <summary>
            
            </summary>
            <param name="graph"></param>
            <param name="vtx"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Rand(OpenCvSharp.CvRandState,OpenCvSharp.CvArr)">
            <summary>
            배열을 랜덤 값으로 채운다
            </summary>
            <param name="state">CvRandState Structure</param>
            <param name="arr">The array to randomize</param>
        </member>
        <member name="M:OpenCvSharp.Cv.RandArr(OpenCvSharp.CvRNG,OpenCvSharp.CvArr,OpenCvSharp.DistributionType,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar)">
            <summary>
            한가지 형태 또는 정규 분포의 난수로 출력 배열을 묻는다 
            </summary>
            <param name="rng">cvRNG에 의해서 초기화된 RNG 상태</param>
            <param name="arr">출력 배열</param>
            <param name="dist_type">분포의 타입</param>
            <param name="param1">분포의 제1 파라미터. 한가지 형태 분포에서 발생하는 난수의 하한치(이 값을 포함한다)이다. 정규 분포에서는, 난수의 평균치이다.</param>
            <param name="param2">분포의 제2 파라미터. 한가지 형태 분포에서 발생하는 난수의 상한치(이 값은 포함하지 않는다)이다. 정규 분포에서는, 난수의 표준 편차이다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.RandInit(OpenCvSharp.CvRandState,System.Double,System.Double,System.Int32)">
            <summary>
            Initialize CvRandState structure
            </summary>
            <param name="state">CvRandState structure to initialize</param>
            <param name="param1">The first parameter of distribution. In case of uniform distribution it is the inclusive lower boundary of random numbers range. In case of normal distribution it is the mean value of random numbers. </param>
            <param name="param2">The second parameter of distribution. In case of uniform distribution it is the exclusive upper boundary of random numbers range. In case of normal distribution it is the standard deviation of random numbers. </param>
            <param name="seed">Seed value</param>
        </member>
        <member name="M:OpenCvSharp.Cv.RandInit(OpenCvSharp.CvRandState,System.Double,System.Double,System.Int32,OpenCvSharp.DistributionType)">
            <summary>
            Initialize CvRandState structure
            </summary>
            <param name="state">CvRandState structure to initialize</param>
            <param name="param1">The first parameter of distribution. In case of uniform distribution it is the inclusive lower boundary of random numbers range. In case of normal distribution it is the mean value of random numbers. </param>
            <param name="param2">The second parameter of distribution. In case of uniform distribution it is the exclusive upper boundary of random numbers range. In case of normal distribution it is the standard deviation of random numbers. </param>
            <param name="seed">Seed value</param>
            <param name="disttype">Type of distribution</param>
        </member>
        <member name="M:OpenCvSharp.Cv.RandInt(OpenCvSharp.CvRNG)">
            <summary>
            한가지 모양으로 분포한 32비트 부호 없는 정수형의 난수를 돌려주어, RNG 상태를 갱신한다.
            </summary>
            <param name="rng">RandInit에 의해서 초기화되어 옵션으로 RandSetRange에 의해서 커스텀마인즈 된 RNG 상태(후자의 함수는, 이 함수의 결과에 영향을 미치지 않는다)</param>
            <returns>32비트 부호 없는 정수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.RandReal(OpenCvSharp.CvRNG)">
            <summary>
            0에서 1(1은 포함되지 않는다)의 범위에 한가지 모양으로 분포하는 부동 소수점형의 난수를 돌려준다.
            </summary>
            <param name="rng">cvRNG에 의해서 초기화된, RNG 상태</param>
            <returns>0에서 1(1은 포함되지 않는다)의 범위에 한가지 모양으로 분포하는 부동 소수점형</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.RandSetRange(OpenCvSharp.CvRandState,System.Double,System.Double)">
            <summary>
            Changes RNG range while preserving RNG state
            </summary>
            <param name="state">CvRandState structure to be opdated</param>
            <param name="param1">The first parameter of distribution. In case of uniform distribution it is the inclusive lower boundary of random numbers range. In case of normal distribution it is the mean value of random numbers. </param>
            <param name="param2"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.RandSetRange(OpenCvSharp.CvRandState,System.Double,System.Double,System.Int32)">
            <summary>
            Changes RNG range while preserving RNG state
            </summary>
            <param name="state"></param>
            <param name="param1"></param>
            <param name="param2"></param>
            <param name="index"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.RandShuffle(OpenCvSharp.CvArr)">
            <summary>
            랜덤으로 선택된 배열 요소 페어의 교체를 반복하는 것으로써 행렬을 Shuffle한다(멀티 채널 배열의 경우, 각각의 요소는 복수의 성분을 포함한다).
            </summary>
            <param name="mat">입력/출력 행렬.인프레이스모드로 Shuffle 된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.RandShuffle(OpenCvSharp.CvArr,OpenCvSharp.CvRNG)">
            <summary>
            랜덤으로 선택된 배열 요소 페어의 교체를 반복하는 것으로써 행렬을 Shuffle한다(멀티 채널 배열의 경우, 각각의 요소는 복수의 성분을 포함한다).
            </summary>
            <param name="mat">입력/출력 행렬.인프레이스모드로 Shuffle 된다.</param>
            <param name="rng">요소의 Shuffle로 이용되는 Random Number Generator.포인터가 null의 경우, 일시적인 RNG가 생성되어 이용된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.RandShuffle(OpenCvSharp.CvArr,OpenCvSharp.CvRNG,System.Double)">
            <summary>
            랜덤으로 선택된 배열 요소 페어의 교체를 반복하는 것으로써 행렬을 Shuffle 한다(멀티 채널 배열의 경우, 각각의 요소는 복수의 성분을 포함한다).
            </summary>
            <param name="mat">입력/출력 행렬.인프레이스모드로 상훌 된다.</param>
            <param name="rng">요소의 Shuffle로 이용되는 Random Number Generator.포인터가 null의 경우, 일시적인 RNG가 생성되어 이용된다.</param>
            <param name="iter_factor">셔플의 정도를 지정하는 파라미터</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Range(OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            주어진 범위의 수로 행렬을 묻는다. 다음과 같이 행렬을 초기화한다.
            arr(i,j) = (End-Start) * (i*cols(arr) +j) / (cols(arr) *rows(arr)) 
            </summary>
            <param name="mat">초기화되는 행렬. 이것은, 정수형 혹은 부동 소수점형 32 비트 싱글 채널이 아니면 안 된다.</param>
            <param name="start">범위의 하한(범위에 포함된다)</param>
            <param name="end">범위의 상한(범위에 포함되지 않는다)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Read``1(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode)">
            <summary>
            오브젝트를 디코드해, 그 참조를 돌려준다.
            </summary>
            <typeparam name="T">반환치의 형태(CvArr 파생형)</typeparam>
            <param name="fs">파일 스토리지</param>
            <param name="node">루트 오브젝트 노드</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadByName``1(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,System.String)">
            <summary>
            오브젝트를 디코드한다.
            cvGetFileNodeByName 와 cvRead의 단순한 합성이다.
            </summary>
            <typeparam name="T">반환치의 형태(CvArr 파생형)</typeparam>
            <param name="fs">파일 스토리지</param>
            <param name="map">부모 맵. null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadChainPoint(OpenCvSharp.CvChainPtReader)">
            <summary>
            체인상의 다음의 점을 얻는다
            </summary>
            <param name="reader">체인 리더 상태</param>
            <returns>현재의 체인상의 점</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadInt(OpenCvSharp.CvFileNode)">
            <summary>
            파일 노드로 표현된 정수치를 돌려준다.
            </summary>
            <param name="node">파일 노드</param>
            <returns>파일 노드로 표현된 정수치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadInt(OpenCvSharp.CvFileNode,System.Int32)">
            <summary>
            파일 노드로 표현된 정수치를 돌려준다.
            </summary>
            <param name="node">파일 노드</param>
            <param name="default_value">node가 null의 경우의 반환값</param>
            <returns>파일 노드로 표현된 정수치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadIntByName(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,System.String)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadInt의 단순한 합성이다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="map">부모 맵. null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <returns>파일 노드로 표현된 정수치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadIntByName(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,System.String,System.Int32)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadInt의 단순한 합성이다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="map">부모 맵. null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <param name="default_value">파일 노드가 발견되지 않는 경우의 반환값</param>
            <returns>파일 노드로 표현된 정수치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadRawData``1(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,``0[]@,System.String)">
            <summary>
            복수의 수치를 읽어들인다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fs">파일 스토리지</param>
            <param name="src">수치를 읽어들이는 파일 노드(순서)</param>
            <param name="dst">기입처의 배열에의 포인터.</param>
            <param name="dt">배열의 개개의 요소의 사양.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadRawDataSlice``1(OpenCvSharp.CvFileStorage,OpenCvSharp.CvSeqReader,System.Int32,``0[]@,System.String)">
            <summary>
            복수의 수치의 순서를 읽어들인다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fs">파일 스토리지</param>
            <param name="reader">순서 리더</param>
            <param name="count">읽어들이는 요소수</param>
            <param name="dst">출력 배열</param>
            <param name="dt">각 배열 요소의 사양</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadReal(OpenCvSharp.CvFileNode)">
            <summary>
            파일 노드로 표현된 부동 소수점형의 값을 돌려준다.
            </summary>
            <param name="node">파일 노드</param>
            <returns>파일 노드로 표현된 부동 소수점형의 값</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadReal(OpenCvSharp.CvFileNode,System.Double)">
            <summary>
            파일 노드로 표현된 부동 소수점형의 값을 돌려준다.
            </summary>
            <param name="node">파일 노드</param>
            <param name="default_value">node가 null의 경우의 반환값</param>
            <returns>파일 노드로 표현된 부동 소수점형의 값</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadRealByName(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,System.String)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadReal의 단순한 합성이다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="map">부모맵. null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <returns>파일 노드로 표현된 부동 소수점형의 값</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadRealByName(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,System.String,System.Double)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadReal의 단순한 합성이다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="map">부모맵. null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <param name="default_value">파일 노드가 발견되지 않는 경우의 반환값</param>
            <returns>파일 노드로 표현된 부동 소수점형의 값</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadString(OpenCvSharp.CvFileNode)">
            <summary>
            파일 노드로 표현된 문자열을 돌려준다.
            </summary>
            <param name="node">파일 노드</param>
            <returns>파일 노드로 표현된 문자열</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadString(OpenCvSharp.CvFileNode,System.String)">
            <summary>
            파일 노드로 표현된 문자열을 돌려준다.
            </summary>
            <param name="node">파일 노드</param>
            <param name="default_value">node가 null의 경우의 반환값</param>
            <returns>파일 노드로 표현된 문자열</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadStringByName(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,System.String)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadString의 단순한 합성이다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="map">부모맵. null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <returns>파일 노드로 표현된 문자열</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReadStringByName(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,System.String,System.String)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadString의 단순한 합성이다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="map">부모맵. null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <param name="default_value">파일 노드가 발견되지 않는 경우의 반환값</param>
            <returns>파일 노드로 표현된 문자열</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.RealScalar(System.Double)">
            <summary>
            지정한 값을 선두 요소로 해, 나머지를 0으로 초기화해 돌려준다
            </summary>
            <param name="val0"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.Rectangle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Rectangle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Rectangle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Rectangle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Rectangle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Rectangle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Rectangle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Rectangle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawRect(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawRect(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawRect(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawRect(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">사각형의 하나의 정점의 x좌표</param>
            <param name="pt1_y">사각형의 하나의 정점의 y좌표</param>
            <param name="pt2_x">사각형의 반대측의 정점의 x좌표</param>
            <param name="pt2_y">사각형의 반대측의 정점의 y좌표</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawRect(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawRect(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawRect(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawRect(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            테두리만 있는 혹은 전부 칠해진 사각형을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="pt1">사각형의 하나의 정점</param>
            <param name="pt2">사각형의 반대측의 정점</param>
            <param name="color">선의 색(RGB), 혹은 휘도(그레이 스케일 화상).</param>
            <param name="thickness">사각형을 그리는 선의 굵기.부의 값, 예를 들면 CV_FILLED를 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Reduce(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            행렬을 벡터에 축소한다
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">행(또는 1열)의 출력 벡터(모든 행/렬로부터 지정된 방법으로 계산된다)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Reduce(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.ReduceDimension)">
            <summary>
            행렬을 벡터에 축소한다
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">행(또는 1열)의 출력 벡터(모든 행/렬로부터 지정된 방법으로 계산된다)</param>
            <param name="dim">배열을 어떻게 축소하는지를 나타내는 인덱스</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Reduce(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.ReduceDimension,OpenCvSharp.ReduceOperation)">
            <summary>
            행렬을 벡터에 축소한다
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">행(또는 1열)의 출력 벡터(모든 행/렬로부터 지정된 방법으로 계산된다)</param>
            <param name="dim">배열을 어떻게 축소하는지를 나타내는 인덱스</param>
            <param name="type">축소 처리의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.RegisterType(OpenCvSharp.CvTypeInfo)">
            <summary>
            새로운 형태를 등록한다
            </summary>
            <param name="info">형태 정보 구조체</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Release(System.IntPtr@)">
            <summary>
            오브젝트를 해제한다
            </summary>
            <param name="struct_ptr">오브젝트의 포인터의 포인터.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Release(OpenCvSharp.ICvPtrHolder@)">
            <summary>
            오브젝트를 해제한다
            </summary>
            <param name="struct_ptr">오브젝트의 포인터의 포인터.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseCapture(OpenCvSharp.CvCapture)">
            <summary>
            CvCapture 구조체를 해제한다
            </summary>
            <param name="capture">캡쳐 구조체에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseConDensation(OpenCvSharp.CvConDensation)">
            <summary>
            ConDensation 필터 구조체를 해제한다
            </summary>
            <param name="condens">해제하는 구조체에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseData(OpenCvSharp.CvArr)">
            <summary>
            배열 데이터를 해제한다. CvMat 혹은 CvMatND 의 경우, 이것은 단지 cvDecRefData()를 부르는 것만으로 있다.
            즉, 이 함수는 외부 데이터를 해제할 수 없다. cvCreateData의 주의 사항도 참조할 것. 
            </summary>
            <param name="arr">배열 헤더</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseFeatureTree(OpenCvSharp.CvFeatureTree)">
            <summary>
            특징 벡터의 트리를 해제한다
            </summary>
            <param name="tr">해제되는 트리의 포인터.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseFileStorage(OpenCvSharp.CvFileStorage)">
            <summary>
            파일을 닫고, 일시적인 구조체를 모두 해제한다.
            이 함수는, 모든 입출력 조작이 종료한 후에 실행되지 않으면 안 된다. 
            </summary>
            <param name="fs">해제하는 파일에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseGraphScanner(OpenCvSharp.CvGraphScanner)">
            <summary>
            그래프의 주사 처리를 종료한다
            </summary>
            <param name="scanner">스캐너의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseHaarClassifierCascade(OpenCvSharp.CvHaarClassifierCascade)">
            <summary>
            Haar 분류기 캐스케이드를 해제한다 
            </summary>
            <param name="cascade">해제하는 캐스케이드 분류기에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseHist(OpenCvSharp.CvHistogram)">
            <summary>
            히스토그램(헤더·데이터)을 해제한다. 
            히스토그램에의 포인터는, 이 함수로 클리어 된다. 
            </summary>
            <param name="hist">해제하는 히스토그램에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseImage(OpenCvSharp.IplImage)">
            <summary>
            헤더와 화상 데이터를 해제한다
            </summary>
            <param name="image">확보한 화상 헤더에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseImageHeader(OpenCvSharp.IplImage)">
            <summary>
            화상의 헤더를 해제한다
            </summary>
            <param name="image">확보한 헤더에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseKalman(OpenCvSharp.CvKalman)">
            <summary>
            칼만 필터 구조체를 해제한다
            </summary>
            <param name="kalman">칼만 필터 클래스</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseMat(OpenCvSharp.CvMat)">
            <summary>
            행렬을 해제한다
            </summary>
            <param name="mat">행렬에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseMatND(OpenCvSharp.CvMatND)">
            <summary>
            CvMatND를 해제한다
            </summary>
            <param name="mat">행렬에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseMemStorage(OpenCvSharp.CvMemStorage)">
            <summary>
            메모리 스토레이지를 해제한다
            </summary>
            <param name="storage">해제하는 스토리지의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleasePOSITObject(OpenCvSharp.CvPOSITObject)">
            <summary>
            3 차원 오브젝트 구조체의 메모리를 해제한다
            </summary>
            <param name="posit_object">구조체 CvPOSIT 에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseMatND(OpenCvSharp.CvSparseMat)">
            <summary>
            CvSparseMat를 해제한다
            </summary>
            <param name="mat">행렬에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseStereoBMState(OpenCvSharp.CvStereoBMState)">
            <summary>
            스테레오 블록 매칭 구조체를 해제한다
            </summary>
            <param name="state">해제되는 구조체에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseStereoGCState(OpenCvSharp.CvStereoGCState)">
            <summary>
            그래프 컷 알고리즘에 근거하는 스테레오 매칭 구조체를 해제한다
            </summary>
            <param name="state">해제되는 구조체에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseStructuringElement(OpenCvSharp.IplConvKernel)">
            <summary>
            cvDilate, cvErode로 이용하는 구조 요소를 해제한다
            </summary>
            <param name="element">구조 요소</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReleaseVideoWriter(OpenCvSharp.CvVideoWriter)">
            <summary>
            비디오 파일 라이터를 해제한다
            </summary>
            <param name="writer">비디오 라이터 구조체에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Remap(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            화상에 대해서 기하 변환을 실시한다. 지정된 맵을 이용해 입력 화상을 이하와 같이 변환한다.
            dst(x,y) &lt;-src(mapx(x,y),mapy(x,y)) .
            다른 기하 변환과 같이, 비정수 좌표치를 가지는 픽셀을 추출하기 위해서, 유저에 의해서 지정된 보간 방법이 이용된다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="mapx">x좌표 맵 (32FC1 포맷의 화상)</param>
            <param name="mapy">y좌표 맵 (32FC1 포맷의 화상)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Remap(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.Interpolation)">
            <summary>
             화상에 대해서 기하 변환을 실시한다. 지정된 맵을 이용해 입력 화상을 이하와 같이 변환한다.
            dst(x,y) &lt;-src(mapx(x,y),mapy(x,y)) .
            다른 기하 변환과 같이, 비정수 좌표치를 가지는 픽셀을 추출하기 위해서, 유저에 의해서 지정된 보간 방법이 이용된다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="mapx">x좌표 맵 (32FC1 포맷의 화상)</param>
            <param name="mapy">y좌표 맵 (32FC1 포맷의 화상)</param>
            <param name="flags">보간 방법</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Remap(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.Interpolation,OpenCvSharp.CvScalar)">
            <summary>
            화상에 대해서 기하 변환을 실시한다. 지정된 맵을 이용해 입력 화상을 이하와 같이 변환한다.
            dst(x,y) &lt;-src(mapx(x,y),mapy(x,y)) .
            다른 기하 변환과 같이, 비정수 좌표치를 가지는 픽셀을 추출하기 위해서, 유저에 의해서 지정된 보간 방법이 이용된다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="mapx">x좌표 맵 (32FC1 포맷의 화상)</param>
            <param name="mapy">y좌표 맵 (32FC1 포맷의 화상)</param>
            <param name="flags">보간 방법</param>
            <param name="fillval">대응되지 않는 점에 대해서 주는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.RemoveNodeFromTree``1(OpenCvSharp.CvTreeNode{``0},OpenCvSharp.CvTreeNode{``0})">
            <summary>
            트리로부터 노드를 삭제한다
            </summary>
            <param name="node">삭제되는 노드.</param>
            <param name="frame">톱 레벨 노드. node->v_prev = null 한편 node->h_prev = null (즉, node 가 frame의 최초의 자식 노드이다)인 경우, 
            frame->v_next 는 node->h_next에 세트 된다 (즉, 최초의 자식 노드나 frame이 변경된다).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Repeat(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            출력 배열을 타일화된 입력 배열로 채운다 
            </summary>
            <param name="src">입력 배열, 화상 또는 행렬.</param>
            <param name="dst">출력 배열, 화상 또는 행렬.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ReprojectImageTo3D(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            시차 화상을 삼차원 공간에 재투영 한다
            </summary>
            <param name="disparityImage">시차 화상</param>
            <param name="_3dImage">3 채널, 16비트 혹은 32비트의 부동 소수점형 화상. 출력은, 삼차원점의 집합이 된다.</param>
            <param name="Q">4×4 의 재투영 행렬</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ResetImageROI(OpenCvSharp.IplImage)">
            <summary>
            화상의 ROI 를 해제한다. 해제 후는 전 화상이 선택되고 있는 상태와 같게 된다.
            </summary>
            <param name="image">화상 헤더</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Reshape(OpenCvSharp.CvArr,OpenCvSharp.CvMat,System.Int32)">
            <summary>
            오리지날의 배열과 같은 데이터이지만, 다른 형상(다른 채널수, 다른 행수, 또 그 양쪽 모두)을 가지는 CvMat의 헤더를 초기화한다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="header">써지는 출력 헤더</param>
            <param name="new_cn">새로운 채널수 .new_cn = 0은 채널수가 변경되어 있지 않은 것을 의미한다.</param>
            <returns>행렬 데이터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Reshape(OpenCvSharp.CvArr,OpenCvSharp.CvMat,System.Int32,System.Int32)">
            <summary>
            오리지날의 배열과 같은 데이터이지만, 다른 형상(다른 채널수, 다른 행수, 또 그 양쪽 모두)을 가지는 CvMat의 헤더를 초기화한다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="header">써지는 출력 헤더</param>
            <param name="new_cn">새로운 채널수 .new_cn = 0은 채널수가 변경되어 있지 않은 것을 의미한다.</param>
            <param name="new_rows">새로운 행수. new_rows = 0은, 행수가 new_cn의 값에 따라 변경할 필요가 있는데도 관련되지 않고, 변경되지 않은 채인 것을 의미한다.</param>
            <returns>행렬 데이터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReshapeMatND``1(OpenCvSharp.CvArr,System.Int32,``0,System.Int32,System.Int32,System.Int32[])">
            <summary>
            cvReshape 의 확장 버젼.
            이것은 다차원 배열을 취급하는 것이 가능(보통 화상과 행렬에 대해서도 사용하는 것이 가능)으로, 한층 더 차원의 변경도 가능하다.
            </summary>
            <typeparam name="T">출력 헤더의 형태</typeparam>
            <param name="arr">입력 배열</param>
            <param name="sizeof_header">IplImage와 CvMat, CvMatND 각각의 출력 헤더를 구별하기 위한 출력 헤더의 사이즈.</param>
            <param name="header">써지는 출력 헤더</param>
            <param name="new_cn">새로운 채널수 .new_cn = 0은 채널수가 변경되어 있지 않은 것을 의미한다.</param>
            <param name="new_dims">새로운 차원수. new_dims = 0은, 차원수가 같은 까지 있는 것을 의미한다.</param>
            <param name="new_sizes">새로운 차원 사이즈의 배열.요소의 총수는 변화해선 안 되기 때문에, new_dims-1의 값만 사용된다.따라서, new_dims = 1이면 new_sizes는 사용되지 않는다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ReshapeND``1(OpenCvSharp.CvArr,``0,System.Int32,System.Int32,System.Int32[])">
            <summary>
            cvReshape 의 확장 버젼.
            이것은 다차원 배열을 취급하는 것이 가능(보통 화상과 행렬에 대해서도 사용하는 것이 가능)으로, 한층 더 차원의 변경도 가능하다.
            </summary>
            <typeparam name="T">출력 헤더의 형태</typeparam>
            <param name="arr">입력 배열</param>
            <param name="header">써지는 출력 헤더</param>
            <param name="new_cn">새로운 채널수 .new_cn = 0은 채널수가 변경되어 있지 않은 것을 의미한다.</param>
            <param name="new_dims">새로운 차원수. new_dims = 0은, 차원수가 같은 까지 있는 것을 의미한다.</param>
            <param name="new_sizes">새로운 차원 사이즈의 배열.요소의 총수는 변화해선 안 되기 때문에, new_dims-1의 값만 사용된다.따라서, new_dims = 1이면 new_sizes는 사용되지 않는다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Resize(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            화상의 사이즈 변경을 실시한다 (바이리니아 보간)
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Resize(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.Interpolation)">
            <summary>
            화상의 사이즈 변경을 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="interpolation">보간 방법</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ResizeWindow(System.String,System.Int32,System.Int32)">
            <summary>
            윈도우사이즈를 변경한다
            </summary>
            <param name="name">사이즈 변경하는 윈도우의 이름</param>
            <param name="width">새로운 폭</param>
            <param name="height">새로운 높이</param>
        </member>
        <member name="M:OpenCvSharp.Cv.RestoreMemStoragePos(OpenCvSharp.CvMemStorage,OpenCvSharp.CvMemStoragePos)">
            <summary>
            메모리 스토레이지의 위치를 복원한다
            </summary>
            <param name="storage">메모리 스토레이지</param>
            <param name="pos">새로운 스토리지의 선두 위치</param>
        </member>
        <member name="M:OpenCvSharp.Cv.RetrieveFrame(OpenCvSharp.CvCapture)">
            <summary>
            GrabFrame 함수에 의해서 꺼내진 화상에의 참조를 돌려준다.
            돌려주어진 화상은, 유저가 해제하거나 변경하거나 해서는 안된다.
            </summary>
            <param name="capture">비디오 캡쳐 클래스</param>
            <returns>1 프레임의 화상 (GC금지 플래그가 서있다). 캡쳐 할 수 없는 경우는 null.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.RNG">
            <summary>
            난수 생성기 상태를 초기화한다
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.RNG(System.UInt64)">
            <summary>
            난수 생성기 상태를 초기화한다
            </summary>
            <param name="seed">랜덤시퀀스를 시작하기 위해서 사용되는 64비트의 수치</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Rodrigues2(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            회전 벡터를 회전 행렬로 변환한다. 또는 그 반대도 가능하다.
            </summary>
            <param name="src">입력의 회전 벡터(3x1 혹은 1 x3), 또는 회전 행렬(3 x3)</param>
            <param name="dst">각 입력에 대응한 출력의 회전 행렬(3 x3), 또는 회전 벡터(3x1 혹은 1 x3)</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Rodrigues2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            회전 벡터를 회전 행렬로 변환한다.또는 그 반대도 가능하다.
            </summary>
            <param name="src">입력의 회전 벡터(3x1 혹은 1 x3), 또는 회전 행렬(3 x3)</param>
            <param name="dst">각 입력에 대응한 출력의 회전 행렬(3 x3), 또는 회전 벡터(3x1 혹은 1 x3)</param>
            <param name="jacobian">옵션 출력의 3 x9 또는 9 x3의 jacobian - 출력 배열의 각 요소의, 입력 배열의 각 요소에 관한 편미분 계수.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Round(System.Double)">
            <summary>
            인수에 가장 가까운 정수치를 돌려준다.
            </summary>
            <param name="value">부동 소수점형의 입력치</param>
             <returns>인수에 가장 가까운 정수치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.RunHaarClassifierCascade(OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvPoint)">
            <summary>
            부스트 된 만큼 분류기의 캐스케이드를, 주어진 화상 위치에서 실행한다
            </summary>
            <param name="cascade">Haar 분류기 캐스케이드</param>
            <param name="pt">해석하는 영역의 좌상의 모퉁이</param>
            <returns>분석 대상의 영역이 모든 분류기 스테이지를 통과했을 경우(이것은 후보의 하나가 된다)는 true, 그렇지 않으면 false.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.RunHaarClassifierCascade(OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvPoint,System.Boolean)">
            <summary>
            부스트 된 만큼 분류기의 캐스케이드를, 주어진 화상 위치에서 실행한다
            </summary>
            <param name="cascade">Haar 분류기 캐스케이드</param>
            <param name="pt">해석하는 영역의 좌상의 모퉁이</param>
            <param name="start_stage">0으로부터 시작되는 인덱스로, 캐스케이드 스테이지를 어디에서 개시할까를 결정한다</param>
            <returns>분석 대상의 영역이 모든 분류기 스테이지를 통과했을 경우(이것은 후보의 하나가 된다)는 true, 그렇지 않으면 false.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.RunningAvg(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            입력 화상 image 와 누산기 acc 의 중량감  화를 계산해, 그 결과 acc 가 프레임열의 현재의 평균치가 된다.
            mask(x,y)!=0의 경우, acc(x,y)=(1-α) acc(x,y) + αimage(x,y) 
            </summary>
            <param name="image">입력 화상, 1 또는 3 채널, 8 비트 혹은 32 비트 부동 소수점형.(멀티 채널 화상의 각 채널은, 개별적으로 처리된다).</param>
            <param name="acc">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형.</param>
            <param name="alpha">입력 화상의 무게중심.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.RunningAvg(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,OpenCvSharp.CvArr)">
            <summary>
            입력 화상 image 와 누산기 acc 의 무게 합을 계산해, 그 결과 acc 가 프레임열의 현재의 평균치가 된다.
            mask(x,y)!=0의 경우, acc(x,y)=(1-α) acc(x,y) + αimage(x,y) 
            </summary>
            <param name="image">입력 화상, 1 또는 3 채널, 8 비트 혹은 32 비트 부동 소수점형.(멀티 채널 화상의 각 채널은, 개별적으로 처리된다).</param>
            <param name="acc">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형.</param>
            <param name="alpha">입력 화상의 무게중심.</param>
            <param name="mask">옵션의 처리 마스크.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SampleLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint[]@,System.Int32)">
            <summary>
            라스터 표현의 선분을 구성하는 점을 샘플링 한다
            </summary>
            <param name="image">선분을 샘플링하기 위한 입력 화상</param>
            <param name="pt1">선분의 시점</param>
            <param name="pt2">선분의 종점</param>
            <param name="buffer">선분상의 점을 보존하기 위한 버퍼</param>
            <param name="connectivity">선분의 접속성.4 또는 8.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Save(System.String,System.IntPtr)">
            <summary>
            オブジェクトをファイルに保存する
            </summary>
            <param name="filename">ファイル名.</param>
            <param name="struct_ptr">保存するオブジェクト.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Save(System.String,System.IntPtr,System.String)">
            <summary>
            오브젝트를 파일에 저장한다
            </summary>
            <param name="filename">파일명.</param>
            <param name="struct_ptr">저장하는 오브젝트.</param>
            <param name="name">오브젝트명(옵션).null의 경우, 이름은 filename로부터 생성된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Save(System.String,System.IntPtr,System.String,System.String)">
            <summary>
            오브젝트를 파일에 저장한다
            </summary>
            <param name="filename">파일명.</param>
            <param name="struct_ptr">저장하는 오브젝트.</param>
            <param name="name">오브젝트명(옵션).null의 경우, 이름은 filename로부터 생성된다.</param>
            <param name="comment">파일의 시작에 놓여지는 코멘트(옵션).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Save(System.String,System.IntPtr,System.String,System.String,OpenCvSharp.CvAttrList)">
            <summary>
            오브젝트를 파일에 저장한다
            </summary>
            <param name="filename">파일명.</param>
            <param name="struct_ptr">저장하는 오브젝트.</param>
            <param name="name">오브젝트명(옵션).null의 경우, 이름은 filename로부터 생성된다.</param>
            <param name="comment">파일의 시작에 놓여지는 코멘트(옵션).</param>
            <param name="attributes">cvWrite에게 건네지는 속성(옵션).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Save(OpenCvSharp.ICvPtrHolder,System.String)">
            <summary>
            오브젝트를 파일에 저장한다
            </summary>
            <param name="struct_ptr">저장하는 오브젝트.</param>
            <param name="filename">파일명.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Save(OpenCvSharp.ICvPtrHolder,System.String,System.String)">
            <summary>
            오브젝트를 파일에 저장한다
            </summary>
            <param name="struct_ptr">저장하는 오브젝트.</param>
            <param name="filename">파일명.</param>
            <param name="name">오브젝트명(옵션).null의 경우, 이름은 filename로부터 생성된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Save(OpenCvSharp.ICvPtrHolder,System.String,System.String,System.String)">
            <summary>
            오브젝트를 파일에 저장한다
            </summary>
            <param name="struct_ptr">저장하는 오브젝트.</param>
            <param name="filename">파일명.</param>
            <param name="name">오브젝트명(옵션).null의 경우, 이름은 filename로부터 생성된다.</param>
            <param name="comment">파일의 시작에 놓여지는 코멘트(옵션).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Save(OpenCvSharp.ICvPtrHolder,System.String,System.String,System.String,OpenCvSharp.CvAttrList)">
            <summary>
            오브젝트를 파일에 저장한다
            </summary>
            <param name="struct_ptr">저장하는 오브젝트.</param>
            <param name="filename">파일명.</param>
            <param name="name">오브젝트명(옵션).null의 경우, 이름은 filename로부터 생성된다.</param>
            <param name="comment">파일의 시작에 놓여지는 코멘트(옵션).</param>
            <param name="attributes">cvWrite에게 건네지는 속성(옵션).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SaveImage(System.String,OpenCvSharp.CvArr)">
            <summary>
            화상을 지정한 파일에 보존한다.화상 포맷은, filename 의 확장자(extension)에 의해 결정된다.
            이 함수로 보존할 수 있는 것은, 8 비트 1 채널, 혹은 8 비트 3 채널('BGR'의 시퀸스) 화상 뿐이다.
            </summary>
            <param name="filename">파일명</param>
            <param name="image">화상 포인터</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SaveMemStoragePos(OpenCvSharp.CvMemStorage,OpenCvSharp.CvMemStoragePos@)">
            <summary>
            메모리 스토레이지의 위치를 보존한다
            </summary>
            <param name="storage">메모리 스토레이지.</param>
            <param name="pos">출력하는 스토리지 선두의 위치.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ScalarAll(System.Double)">
            <summary>
            지정한 값을 배열의 모든 요소로서 초기화해, 돌려준다
            </summary>
            <param name="val0123"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.ScaleAdd(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            스케일링 된 배열과 또 하나의 배열의 화(곱셈?)를 계산한다.
            dst(I) =src1(I) *scale + src2(I)
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="scale">1번째의 배열을 위한 스케일 팩터</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MulAddS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            스케일링 된 배열과 또 하나의 배열의 화(곱셈?)를 계산한다 (cvScaleAdd의 앨리어스(alias)).
            dst(I) =src1(I) *scale + src2(I)
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="scale">1번째의 배열을 위한 스케일 팩터</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.AXPY(OpenCvSharp.CvArr,System.Double,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            cvScaleAdd(A, cvRealScalar(real_scalar), B, C)
            </summary>
            <param name="A"></param>
            <param name="real_scalar"></param>
            <param name="B"></param>
            <param name="C"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.SegmentMotion(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Double,System.Double)">
            <summary>
            전체 동작을 나누어진 움직임 파트로 분할 
             </summary> 
             <param name="mhi"> 모션 히스토리 화상 </param> 
             <param name="seg_mask"> 발견된 마스크가 저장되는 이미지, 단일 채널, 32 비트 부동 소수점 형식입니다. </param> 
             <param name="storage"> 콤포넌트에  관련된 모션 열이 저장되는 메모리 영역. </param> 
             <param name="timestamp"> 밀리세컨드 또는 기타 단위로 대표되는 현재 시간. </param> 
             <param name="seg_thresh"> 세분화 임계값. 모션 기록 거리와 동일하거나 더 큰 값으로하는 것이 권장된다. </param> 
        </member>
        <member name="M:OpenCvSharp.Cv.SeqElemIdx``1(OpenCvSharp.CvSeq,``0)">
            <summary>
            지정된 시퀸스의 요소의 인덱스를 돌려준다
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="seq">시퀸스.</param>
            <param name="element">시퀸스 요소</param>
            <returns>지정된 시퀸스 요소의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqElemIdx``1(OpenCvSharp.CvSeq,``0,OpenCvSharp.CvSeqBlock@)">
            <summary>
            지정된 시퀸스의 요소의 인덱스를 돌려준다
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="seq">시퀸스.</param>
            <param name="element">시퀸스 요소</param>
            <param name="block">요소를 포함한 시퀸스 블록의 주소가 이 장소에 보존된다.</param>
            <returns>지정된 시퀸스 요소의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqInsert``1(OpenCvSharp.CvSeq,System.Int32,``0)">
            <summary>
            시퀸스안에 요소를 삽입한다
            </summary>
            <typeparam name="T">추가하는 요소의 형태. 원시적형인가, OpenCV의 구조체(CvPoint 등).</typeparam>
            <param name="seq">시퀸스</param>
            <param name="before_index">요소가 삽입되는 인덱스(이 인덱스의 전에 삽입된다)</param>
            <param name="element">추가되는 요소. 원시적형인가, OpenCV의 구조체(CvPoint 등).</param>
            <returns>추가된 요소</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqInsertSlice(OpenCvSharp.CvSeq,System.Int32,OpenCvSharp.CvArr)">
            <summary>
            시퀸스내에 배열을 삽입한다
            </summary>
            <param name="seq">시퀸스.</param>
            <param name="before_index">배열이 삽입되는 장소에의 인덱스(인덱스의 전에 삽입된다).</param>
            <param name="from_arr">추가되는 요소의 배열.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqInvert(OpenCvSharp.CvSeq)">
            <summary>
            시퀸스 요소의 순서를 반전시킨다
            </summary>
            <param name="seq">시퀸스</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqRemove(OpenCvSharp.CvSeq,System.Int32)">
            <summary>
            주어진 인덱스를 가지는 요소를 삭제한다.
            </summary>
            <param name="seq">시퀸스</param>
            <param name="index">삭제되는 요소의 인덱스</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqRemoveSlice(OpenCvSharp.CvSeq,OpenCvSharp.CvSlice)">
            <summary>
            시퀸스 슬라이스를 삭제한다
            </summary>
            <param name="seq">시퀸스</param>
            <param name="slice">삭제하는 시퀸스의 일부분. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPartition(OpenCvSharp.CvSeq,OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq@,OpenCvSharp.CvCmpFunc)">
            <summary>
            데이터 순서를 동치류(같은 클래스에 속한다고 정의된 데이터군)에 분할한다
            </summary>
            <param name="seq">분할 대상의 순서.</param>
            <param name="storage">동치류로서 분할된 순서의 보존 영역.null의 경우는, seq->storage 를 사용한다.</param>
            <param name="labels">출력 파라미터.입력 순서의 각 요소에 할당해진(분할 결과를 나타낸다) 0으로부터 시작되는 라벨 순서에의 포인터의 포인터.</param>
            <param name="is_equal">2개의 순서 요소가 같은 클래스인 경우, 관계 함수는 0이외를 돌려준다. 그렇지 않으면 0을 돌려준다.분할 알고리즘은, 동치 기준으로서 관계 함수의 추이폐포를 이용한다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPartition``1(OpenCvSharp.CvSeq{``0},OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq@,OpenCvSharp.CvCmpFunc{``0})">
            <summary>
            데이터 순서를 동치류(같은 클래스에 속한다고 정의된 데이터군)에 분할한다
            </summary>
            <param name="seq">분할 대상의 순서.</param>
            <param name="storage">동치류로서 분할된 순서의 보존 영역.null의 경우는, seq->storage 를 사용한다.</param>
            <param name="labels">출력 파라미터.입력 순서의 각 요소에 할당해진(분할 결과를 나타낸다) 0으로부터 시작되는 라벨 순서에의 포인터의 포인터.</param>
            <param name="is_equal">2개의 순서 요소가 같은 클래스인 경우, 관계 함수는 0이외를 돌려준다. 그렇지 않으면 0을 돌려준다.분할 알고리즘은, 동치 기준으로서 관계 함수의 추이폐포를 이용한다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPop``1(OpenCvSharp.CvSeq)">
            <summary>
            시퀸스의 말미로부터 하나의 요소를 삭제한다.
            시퀸스가 이미 비어있는 경우는, 에러를 돌려준다. 이 함수의 계산량은 O(1)이다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="seq">시퀸스</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPop``1(OpenCvSharp.CvSeq,``0@)">
            <summary>
            시퀸스의 말미로부터 하나의 요소를 삭제한다.
            시퀸스가  이미 비어있는 경우는, 에러를 돌려준다.이 함수의 계산량은 O(1)이다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="seq">시퀸스</param>
            <param name="element">삭제한 요소를 카피하는 출력처</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPopFront(OpenCvSharp.CvSeq)">
            <summary>
            시퀸스의 선두로부터 하나의 요소를 삭제한다.
            시퀸스가 이미 비어있는 경우는, 에러를 돌려준다. 이 함수의 계산량은 O(1)이다.
            </summary>
            <param name="seq">시퀸스</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPopFront``1(OpenCvSharp.CvSeq,``0@)">
            <summary>
            시퀸스의 선두로부터 하나의 요소를 삭제한다.
            시퀸스가 이미 비어있는 경우는, 에러를 돌려준다. 이 함수의 계산량은 O(1)이다.
            </summary>
            <typeparam name="T">출력처 오브젝트의 형태</typeparam>
            <param name="seq">시퀸스</param>
            <param name="element">삭제한 요소를 카피하는 출력처</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPopMulti``1(OpenCvSharp.CvSeq,``0[]@,System.Int32,OpenCvSharp.InsertPosition)">
            <summary>
            복수의 요소를 시퀸스의 어느 쪽인가의 단(선두나 말미)으로부터 삭제한다
            </summary>
            <typeparam name="T">삭제하는 요소의 형태</typeparam>
            <param name="seq">시퀸스</param>
            <param name="elements">삭제되는 요소.</param>
            <param name="count">삭제되는 요소수. </param>
            <param name="in_front">변경하는 시퀸스의 구석을 지정하는 플래그.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPush(OpenCvSharp.CvSeq)">
            <summary>
            시퀸스의 말미에 요소 하나 분의 영역을 확보한다.
            </summary>
            <param name="seq">시퀸스</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPush``1(OpenCvSharp.CvSeq,System.Nullable{``0})">
            <summary>
            시퀸스의 말미에 요소를 추가해, 할당할 수 있었던 요소를 돌려준다.
            입력의 element 가 null 의 경우, 이 함수는 단지 요소 하나 분의 영역을 확보한다.
            </summary>
            <param name="seq">시퀸스</param>
            <param name="element">추가되는 요소. 원시적형인가, OpenCV의 구조체(CvPoint 등).</param>
            <returns>추가된 요소</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPushFront(OpenCvSharp.CvSeq)">
            <summary>
            시퀸스의 선두에 요소 하나 분의 영역을 확보한다.
            </summary>
            <param name="seq">시퀸스</param>
            <returns>추가된 요소에의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPushFront``1(OpenCvSharp.CvSeq,System.Nullable{``0})">
            <summary>
            시퀸스의 선두에 요소를 추가해, 할당할 수 있었던 요소에의 포인터를 돌려준다.
            입력의 element 가 null 의 경우, 이 함수는 단지 요소 하나 분의 영역을 확보한다.
            </summary>
            <typeparam name="T">추가하는 요소의 형태. 원시적형인가, OpenCV의 구조체(CvPoint 등).</typeparam>
            <param name="seq">시퀸스</param>
            <param name="element">추가되는 요소. 원시적형인가, OpenCV의 구조체(CvPoint 등).</param>
            <returns>추가된 요소</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqPushMulti``1(OpenCvSharp.CvSeq,``0[],OpenCvSharp.InsertPosition)">
            <summary>
            복수의 요소를 순서의 어느 쪽인가의단(선두나 말미)에 추가한다
            </summary>
            <typeparam name="T">추가하는 요소의 형태</typeparam>
            <param name="seq">순서.</param>
            <param name="elements">추가되는 요소군.</param>
            <param name="in_front">변경하는 순서의 구석을 지정하는 플래그.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqSearch(OpenCvSharp.CvSeq,System.IntPtr,OpenCvSharp.CvCmpFunc,System.Boolean,System.Int32@)">
            <summary>
            시퀸스중에서 요소를 검색한다
            </summary>
            <param name="seq">소트 되는 시퀸스</param>
            <param name="elem">검색하는 요소</param>
            <param name="func">요소의 관계에 따르고, 부·0·정의 값을 돌려주는 비교 함수</param>
            <param name="is_sorted">시퀸스가 소트가 끝난 상태인가 아닌가를 나타내는 플래그</param>
            <param name="elem_idx">출력 파라미터.발견된 요소의 인덱스.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqSearch``1(OpenCvSharp.CvSeq,``0,OpenCvSharp.CvCmpFunc{``0},System.Boolean,System.Int32@)">
            <summary>
            시퀸스중에서 요소를 검색한다
            </summary>
            <param name="seq">소트 되는 시퀸스</param>
            <param name="elem">검색하는 요소</param>
            <param name="func">요소의 관계에 따르고, 부·0·정의 값을 돌려주는 비교 함수</param>
            <param name="is_sorted">시퀸스가 소트가 끝난 상태인가 아닌가를 나타내는 플래그</param>
            <param name="elem_idx">출력 파라미터.발견된 요소의 인덱스.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqSlice(OpenCvSharp.CvSeq,OpenCvSharp.CvSlice)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다
            </summary>
            <param name="seq">시퀸스</param>
            <param name="slice">추출하는 시퀸스의 일부분</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqSlice(OpenCvSharp.CvSeq,OpenCvSharp.CvSlice,OpenCvSharp.CvMemStorage)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다
            </summary>
            <param name="seq">시퀸스</param>
            <param name="slice">추출하는 시퀸스의 일부분</param>
            <param name="storage">새로운 시퀸스 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 이 함수는 입력 순서에 포함되는 스토리지를 사용한다</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqSlice(OpenCvSharp.CvSeq,OpenCvSharp.CvSlice,OpenCvSharp.CvMemStorage,System.Boolean)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다
            </summary>
            <param name="seq">시퀸스</param>
            <param name="slice">추출하는 시퀸스의 일부분</param>
            <param name="storage">새로운 시퀸스 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 이 함수는 입력 순서에 포함되는 스토리지를 사용한다</param>
            <param name="copy_data">추출된 슬라이스의 요소를 카피할까 하지 않을까를 나타내는 플래그</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqSlice``1(OpenCvSharp.CvSeq{``0},OpenCvSharp.CvSlice)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다
            </summary>
            <param name="seq">시퀸스</param>
            <param name="slice">추출하는 시퀸스의 일부분</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqSlice``1(OpenCvSharp.CvSeq{``0},OpenCvSharp.CvSlice,OpenCvSharp.CvMemStorage)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다
            </summary>
            <param name="seq">시퀸스</param>
            <param name="slice">추출하는 시퀸스의 일부분</param>
            <param name="storage">새로운 시퀸스 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 이 함수는 입력 순서에 포함되는 스토리지를 사용한다</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqSlice``1(OpenCvSharp.CvSeq{``0},OpenCvSharp.CvSlice,OpenCvSharp.CvMemStorage,System.Boolean)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다
            </summary>
            <param name="seq">시퀸스</param>
            <param name="slice">추출하는 시퀸스의 일부분</param>
            <param name="storage">새로운 시퀸스 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 이 함수는 입력 순서에 포함되는 스토리지를 사용한다</param>
            <param name="copy_data">추출된 슬라이스의 요소를 카피할까 하지 않을까를 나타내는 플래그</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqSort(OpenCvSharp.CvSeq,OpenCvSharp.CvCmpFunc)">
            <summary>
            시퀸스의 요소를, 지정한 비교 함수를 이용해 소트 한다
            </summary>
            <param name="seq">소트 되는 시퀸스</param>
            <param name="func">요소의 관계에 따르고, 부·0·정의 값을 돌려주는 비교 함수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SeqSort``1(OpenCvSharp.CvSeq,OpenCvSharp.CvCmpFunc{``0})">
            <summary>
            시퀸스의 요소를, 지정한 비교 함수를 이용해 소트 한다
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="seq">소트 되는 시퀸스</param>
            <param name="func">요소의 관계에 따르고, 부·0·정의 값을 돌려주는 비교 함수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Set(OpenCvSharp.CvArr,OpenCvSharp.CvScalar)">
            <summary>
            스칼라치 value 를, 배열의 선택된 각 요소에 카피한다.
            </summary>
            <param name="arr">값을 세트 하는 배열. IplImage 형의 경우, ROI는 이용되지만, COI 가 세트 되서는 안 된다.</param>
            <param name="value">배열을 묻는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Set(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            스칼라치 value 를, 배열의 선택된 각 요소에 카피한다.
            mask(I) != null 의 경우, arr(I) =value. 
            </summary>
            <param name="arr">값을 세트 하는 배열. IplImage 형의 경우, ROI는 이용되지만, COI 가 세트 되어서는 안 된다.</param>
            <param name="value">배열을 묻는 값</param>
            <param name="mask">8비트 싱글 채널 배열의 처리 마스크. 배열의 변경하는 요소를 지정한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Set1D(OpenCvSharp.CvArr,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            새로운 값을 지정한 배열 요소에 할당한다. 
            희소 배열의 경우, 노드가 존재하지 않으면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Set2D(OpenCvSharp.CvArr,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            새로운 값을 지정한 배열 요소에 할당한다. 
            희소 배열의 경우, 노드가 존재하지 않으면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Set3D(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            새로운 값을 지정한 배열 요소에 할당한다. 
            희소 배열의 경우, 노드가 존재하지 않으면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetND(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,System.Int32[])">
            <summary>
            새로운 값을 지정한 배열 요소에 할당한다. 
            희소 배열의 경우, 노드가 존재하지 않으면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="value">할당하는 값</param>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetAdd(OpenCvSharp.CvSet)">
            <summary>
            세트에 새로운 노드(요소)를 추가한다
            </summary>
            <param name="set_header">세트</param>
            <returns>노드의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SetAdd(OpenCvSharp.CvSet,OpenCvSharp.CvSetElem)">
            <summary>
            세트에 새로운 노드(요소)를 추가한다
            </summary>
            <param name="set_header">세트</param>
            <param name="elem">삽입하는 요소. null이 아닌 경우 새롭게 확보한 노드에 데이터를 카피한다 (카피한 후, 선두의 정수 필드의 최상위비트는 클리어 된다). </param>
            <returns>노드의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SetAdd(OpenCvSharp.CvSet,OpenCvSharp.CvSetElem,OpenCvSharp.CvSetElem@)">
            <summary>
            세트에 새로운 노드(요소)를 추가한다
            </summary>
            <param name="set_header">세트</param>
            <param name="elem">삽입하는 요소. null이 아닌 경우, 새롭게 확보한 노드에 데이터를 카피한다 (카피한 후, 선두의 정수 필드의 최상위비트는 클리어 된다). </param>
            <param name="inserted_elem">할당할 수 있었던 요소의 참조</param>
            <returns>노드의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SetHistBinRanges(OpenCvSharp.CvHistogram,System.Single[][])">
            <summary>
            히스토그램의 빈의 레인지를 세트 한다
            </summary>
            <param name="hist">히스토그램</param>
            <param name="ranges">빈의 레인지의 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetHistBinRanges(OpenCvSharp.CvHistogram,System.Single[][],System.Boolean)">
            <summary>
            히스토그램의 빈의 레인지를 세트 한다
            </summary>
            <param name="hist">히스토그램</param>
            <param name="ranges">빈의 레인지의 배열</param>
            <param name="uniform"> uniform 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetCaptureProperty(OpenCvSharp.CvCapture,OpenCvSharp.CaptureProperty,System.Double)">
            <summary>
            비디오 캡쳐의 프롭퍼티를 세트 한다
            </summary>
            <param name="capture">비디오 캡쳐 클래스</param>
            <param name="property_id">프롭퍼티 ID</param>
            <param name="value">프롭퍼티의 값</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SetData``1(OpenCvSharp.CvArr,``0[],System.Int32)">
            <summary>
            유저 데이터를 배열의 헤더에 할당한다. 
            헤더는, 함수 cvCreate*Header, 함수 cvInit*Header 혹은 함수 cvMat(행렬의 경우)를 이용하고, 미리 초기화 되는 것이 당연하다.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="arr">배열 헤더</param>
            <param name="data">유저 데이터</param>
            <param name="step">바이트 단위로 나타내진 행의 길이</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetErrMode(OpenCvSharp.ErrMode)">
            <summary>
            エ에러 모드를 세트 한다. 직전의 에러 모드를 돌려준다.
            </summary>
            <param name="mode">에러 모드</param>
            <returns>세트 하기 전의 에러 모드</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SetErrStatus(OpenCvSharp.CvStatus)">
            <summary>
            에러 status를 세트 한다
            </summary>
            <param name="status">에러 status</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetIdentity(OpenCvSharp.CvArr)">
            <summary>
            스케일 된 단위행렬을 초기화한다
            </summary>
            <param name="mat">초기화되는 행렬(정방일 필요는 없다)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetIdentity(OpenCvSharp.CvArr,OpenCvSharp.CvScalar)">
            <summary>
            스케일 된 단위행렬을 초기화한다
            </summary>
            <param name="mat">초기화되는 행렬(정방일 필요는 없다)</param>
            <param name="value">대각 성분의 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetImageCOI(OpenCvSharp.IplImage,System.Int32)">
            <summary>
            주어진 값을 channel of interest(COI)로서 세트 한다.
            값 0 은 모든 채널이 선택되고 있는 일을 의미해, 값 1 은 최초의 채널이 선택되고 있는 일을 의미한다.
            </summary>
            <param name="image">화상 헤더</param>
            <param name="coi">COI(Channel of interest)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetImageROI(OpenCvSharp.IplImage,OpenCvSharp.CvRect)">
            <summary>
            주어진 사각형을 화상의 ROI로서 세트 한다.
            </summary>
            <param name="image">화상 헤더</param>
            <param name="rect">ROI를 나타내는 사각형</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetImagesForHaarClassifierCascade(OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            화상을 히든 분류기 캐스케이드에 할당한다.
            </summary>
            <param name="cascade">cvCreateHidHaarClassifierCascade 에 의해서 작성된 숨은 Haar 분류기 캐스케이드</param>
            <param name="sum">32 비트 정수 싱글 채널의 인테그랄 이미지</param>
            <param name="sqsum">64비트 부동 소수점형의 싱글 채널 화상의 각 픽셀을 제곱 한 값에 대한 인테그랄 이미지</param>
            <param name="tilted_sum">32 비트 정수형의 싱글 채널 화상을 45о기울인 것에 대한 인테그랄 이미지</param>
            <param name="scale">캐스케이드의 윈도우 스케일</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetMouseCallback(System.String,OpenCvSharp.CvMouseCallback)">
            <summary>
            지정된 윈도우내에서 발생하는 마우스 이벤트에 대한 콜백 함수를 설정한다
            </summary>
            <param name="window_name">윈도우의 이름</param>
            <param name="on_mouse">지정된 윈도우내에서 마우스 이벤트가 발생할 때마다 불리는 Delegate</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetNew(OpenCvSharp.CvSet)">
            <summary>
            세트에 요소를 더한다(고속판)
            </summary>
            <param name="set_header">세트</param>
            <returns>노드의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SetNumThreads">
            <summary>
            병렬화 된 OpenCV 함수에 의해서 사용되는 쓰레드 수를 0으로 세트 한다.
            </summary>
        </member>
        <member name="M:OpenCvSharp.Cv.SetNumThreads(System.Int32)">
            <summary>
            병렬화 된 OpenCV 함수에 의해서 사용되는 쓰레드수를 세트 한다.
            </summary>
            <param name="threads">쓰레드 수.
            거짓의 경우 또는 프로그램 시작시의 쓰레드 수나 OpenMP 런타임의 함수 omp_get_num_procs()의 반환값인 시스템의 프로세서 수가 세트 된다. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetPostprocessFuncWin32(OpenCvSharp.CvWin32WindowCallback)">
            <summary>
            
            </summary>
            <param name="on_postprocess"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetPreprocessFuncWin32(OpenCvSharp.CvWin32WindowCallback)">
            <summary>
            
            </summary>
            <param name="on_preprocess"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetReal1D(OpenCvSharp.CvArr,System.Int32,System.Double)">
            <summary>
            싱글 채널의 배열의 지정한 요소에 새로운 값을 할당한다.
            희소 배열의 경우에, 노드가 존재해 되면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetReal2D(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Double)">
            <summary>
            싱글 채널의 배열의 지정한 요소에 새로운 값을 할당한다.
            희소 배열의 경우에, 노드가 존재해 되면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetReal3D(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            싱글 채널의 배열의 지정한 요소에 새로운 값을 할당한다.
            희소 배열의 경우에, 노드가 존재해 되면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetRealND(OpenCvSharp.CvArr,System.Double,System.Int32[])">
            <summary>
            싱글 채널의 배열의 지정한 요소에 새로운 값을 할당한다.
            희소 배열의 경우에, 노드가 존재해 되면, 이 함수는 노드를 생성한다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="value">할당하는 값</param>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetRemove(OpenCvSharp.CvSet,System.Int32)">
            <summary>
            세트로부터 요소를 삭제한다
            </summary>
            <param name="set_header">세트.</param>
            <param name="index">삭제하는 요소의 인덱스.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetRemoveByPtr(OpenCvSharp.CvSet,System.IntPtr)">
            <summary>
            포인터로 지정한 세트의 요소를 삭제한다
            </summary>
            <param name="set_header">세트.</param>
            <param name="elem">삭제되는 요소.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetSeqBlockSize(OpenCvSharp.CvSeq,System.Int32)">
            <summary>
            시퀸스의 블록 사이즈를 설정한다/// </summary>
            <param name="seq">시퀸스</param>
            <param name="delta_elems">시퀸스 요소의 블록 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetSeqReaderPos(OpenCvSharp.CvSeqReader,System.Int32)">
            <summary>
            읽기 위치를 절대 위치에서 나타내진 위치로 이동한다
            </summary>
            <param name="reader">리더 상태</param>
            <param name="index">이동처의 위치</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetSeqReaderPos(OpenCvSharp.CvSeqReader,System.Int32,System.Boolean)">
            <summary>
            읽기 위치를 절대 위치나 상대 위치에서 나타내진 위치로 이동한다
            </summary>
            <param name="reader">리더 상태</param>
            <param name="index">이동처의 위치.위치 결정 모드(다음의 파라미터 is_relative를 참조)가 사용되고 있는 경우, 실제의 위치는 index 를 reader->seq->total로 나눈 잉여가 된다.</param>
            <param name="is_relative">true, index 는 현재 위치로부터의 상대치</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetTrackbarPos(System.String,System.String,System.Int32)">
            <summary>
            지정된 트랙바의 위치를 설정한다
            </summary>
            <param name="trackbar_name">트랙바의 이름</param>
            <param name="window_name">트랙바의 부모 윈도우의 이름</param>
            <param name="pos">새로운 위치</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SetZero(OpenCvSharp.CvArr)">
            <summary>
            배열을 클리어 한다
            </summary>
            <param name="arr">클리어 되는 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Zero(OpenCvSharp.CvArr)">
            <summary>
            배열을 클리어 한다
            </summary>
            <param name="arr">클리어 되는 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ShowImage(System.String,OpenCvSharp.CvArr)">
            <summary>
            지정한 윈도우내에 화상을 표시한다.
            그 윈도우의 플래그에 CV_WINDOW_AUTOSIZE 가 지정되어 있었을 경우는, 화상은 오리지날 사이즈로 표시된다.
            그 이외의 경우, 윈도우사이즈에 맞추어 표시 화상 사이즈가 변경된다. 
            </summary>
            <param name="name">윈도우의 이름</param>
            <param name="image">화상 헤더</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Size(System.Int32,System.Int32)">
            <summary>
            사각형의 픽셀 사이즈 구조체를 생성한다 (cvSize 해당)
            </summary>
            <param name="width">폭</param>
            <param name="height">높이</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SliceLength(OpenCvSharp.CvSlice,OpenCvSharp.CvSeq)">
            <summary>
            시퀸스의 슬라이스 길이를 계산한다
            </summary>
            <param name="slice">Slice to measure</param>
            <param name="seq">Sequence</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Smooth(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Smooth(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.SmoothType)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="smoothtype">평활화 방법</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Smooth(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.SmoothType,System.Int32)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="smoothtype">평활화의 방법</param>
            <param name="param1">평활화 처리의 파라미터 1</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Smooth(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.SmoothType,System.Int32,System.Int32)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="smoothtype">평활화의 방법</param>
            <param name="param1">평활화 처리의 파라미터 1</param>
            <param name="param2">평활화 처리의 파라미터 2.스케일링 있다/없다의 단순 평활 또는 가우시안 평활화의 경우, param2 가 0 때는 param1 에 세트 된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Smooth(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.SmoothType,System.Int32,System.Int32,System.Double)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="smoothtype">평활화의 방법</param>
            <param name="param1">평활화 처리의 파라미터 1</param>
            <param name="param2">평활화 처리의 파라미터 2.스케일링 있다/없다의 단순 평활 또는 가우시안 평활화의 경우, param2 가 0 때는 param1 에 세트 된다.</param>
            <param name="param3">가우시안 평활화의 경우, 이 파라미터가 가우시안 sigma(표준 편차)를 나타낸다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Smooth(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.SmoothType,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            화상의 평활화를 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="smoothtype">평활화의 방법</param>
            <param name="param1">평활화 처리의 파라미터 1</param>
            <param name="param2">평활화 처리의 파라미터 2.스케일링 있다/없다의 단순 평활 또는 가우시안 평활화의 경우, param2 가 0 때는 param1 에 세트 된다.</param>
            <param name="param3">가우시안 평활화의 경우, 이 파라미터가 가우시안 sigma(표준 편차)를 나타낸다.</param>
            <param name="param4">비정방형의 가우시안 커넬을 사용하는 경우, 수직 방향으로 다른 sigma 치(param3와 다른 값) 지정하기 위해서 이용된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SnakeImage(OpenCvSharp.IplImage,OpenCvSharp.CvPoint[],System.Single,System.Single,System.Single,OpenCvSharp.CvSize,OpenCvSharp.CvTermCriteria)">
            <summary>
            내부 에너지와 외부 에너지의 총화가 최소가 되도록 snake 를 갱신한다. 
            내부 에너지는 윤곽 형상에 의존한다(매끄러운 윤곽정도만큼 내부 에너지가 작다).
            외부 에너지는 에너지장에 의존해, 화상 그라데이션의 경우는 화상의 엣지에 대응하는 국소적인 에너지 극소치에 대해 최소가 된다.
            </summary>
            <param name="image">원화상 혹은, 외부 에너지장</param>
            <param name="points">윤곽점. 여기에 보관되어 있는 점을 기초로 계산을 해, 결과도 여기에 들어간다</param>
            <param name="alpha"> 연속 에너지의 무게. points와 동일한 길이를 가진 부동 소수점 형식 배열 (각 개략 점 배열의 각 요소가 대응). </param>
            <param name="beta">곡율 에너지의 무게 lpha뿐만 아니라</param>
            <param name="gamma">이미지 에너지의 무게. alpha뿐만 아니라</param>
            <param name="win">최소치를 탐색하는 각 점의 근방의 사이즈. Width 와 Height 는 홀수가 아니면 안된다.</param>
            <param name="criteria">종료 조건</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SnakeImage(OpenCvSharp.IplImage,OpenCvSharp.CvPoint[],System.Single,System.Single,System.Single,OpenCvSharp.CvSize,OpenCvSharp.CvTermCriteria,System.Boolean)">
            <summary>
            내부 에너지와 외부 에너지의 총화가 최소가 되도록 snake 를 갱신한다. 
            내부 에너지는 윤곽 형상에 의존한다(매끄러운 윤곽정도만큼 내부 에너지가 작다).
            외부 에너지는 에너지장에 의존해, 화상 그라데이션의 경우는 화상의 엣지에 대응하는 국소적인 에너지 극소치에 대해 최소가 된다.
            </summary>
            <param name="image">원화상 혹은, 외부 에너지장</param>
            <param name="points">윤곽점. 여기에 보관되어 있는 점을 기초로 계산을 해, 결과도 여기에 들어간다</param>
            <param name="alpha">연속 에너지의 무게. points와 동일한 길이를 가진 부동 소수점 형식 배열 (각 개략 점 배열의 각 요소가 대응). </param>
            <param name="beta">곡율 에너지의 무게 lpha뿐만 아니라</param>
            <param name="gamma">이미지 에너지의 무게. alpha뿐만 아니라</param>
            <param name="win">최소치를 탐색하는 각 점의 근방의 사이즈. Width 와 Height 는 홀수가 아니면 안된다.</param>
            <param name="criteria">종료 조건</param>
            <param name="calc_gradient">그라데이션 플래그.true의 경우, 이 함수는 모든 화상 픽셀에 대한 그라데이션의 힘을 계산해, 이것을 에너지장이라고 본다. false의 경우는, 입력 화상 자체가 에너지장이라고 보여진다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SnakeImage(OpenCvSharp.IplImage,OpenCvSharp.CvPoint[],System.Single[],System.Single[],System.Single[],OpenCvSharp.CvSize,OpenCvSharp.CvTermCriteria)">
            <summary>
            내부 에너지와 외부 에너지의 총화가 최소가 되도록 snake 를 갱신한다. 
            내부 에너지는 윤곽 형상에 의존한다(매끄러운 윤곽정도만큼 내부 에너지가 작다).
            외부 에너지는 에너지장에 의존해, 화상 그라데이션의 경우는 화상의 엣지에 대응하는 국소적인 에너지 극소치에 대해 최소가 된다.
            </summary>
            <param name="image">원화상 혹은, 외부 에너지장</param>
            <param name="points">윤곽점. 여기에 보관되어 있는 점을 기초로 계산을 해, 결과도 여기에 들어간다</param>
            <param name="alpha">연속 에너지의 중량감.points와 같은 길이를 가지는 부동 소수점형 배열(각 바퀴곽점에 배열의 각 요소가 대응).</param>
            <param name="beta">곡율 에너지의 중량감.alpha 와 같이.</param>
            <param name="gamma">화상 에너지의 중량감.alpha 와 같이.</param>
            <param name="win">최소치를 탐색하는 각 점의 근방의 사이즈. Width 와 Height 는 홀수가 아니면 안된다.</param>
            <param name="criteria">종료 조건</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SnakeImage(OpenCvSharp.IplImage,OpenCvSharp.CvPoint[],System.Single[],System.Single[],System.Single[],OpenCvSharp.CvSize,OpenCvSharp.CvTermCriteria,System.Boolean)">
            <summary>
            내부 에너지와 외부 에너지의 총화가 최소가 되도록(듯이) snake 를 갱신한다. 
            내부 에너지는 윤곽 형상에 의존한다(매끄러운 윤곽(정도)만큼 내부 에너지가 작다).
            외부 에너지는 에너지장에 의존해, 화상 그라데이션 경우는 화상의 엣지에 대응하는 국소적인 에너지 극소치에 대해 최소가 된다.
            </summary>
            <param name="image">원화상 혹은, 외부 에너지장</param>
            <param name="points">윤곽점. 여기에 보관되어 있는 점을 기초로 계산을 해, 결과도 여기에 들어간다</param>
            <param name="alpha">연속 에너지의 중량감.points와 같은 길이를 가지는 부동 소수점형 배열(각 바퀴곽점에 배열의 각 요소가 대응).</param>
            <param name="beta">곡율 에너지의 중량감.alpha 와 같이.</param>
            <param name="gamma">화상 에너지의 중량감.alpha 와 같이.</param>
            <param name="win">최소치를 탐색하는 각 점의 근방의 사이즈. Width 와 Height 는 홀수가 아니면 안된다.</param>
            <param name="criteria">종료 조건</param>
            <param name="calc_gradient">그라데이션 플래그.true의 경우, 이 함수는 모든 화상 픽셀에 대한 그라데이션의 힘을 계산해, 이것을 에너지장이라고 본다. false의 경우는, 입력 화상 자체가 에너지장이라고 보여진다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Sobel(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Int32,System.Int32)">
            <summary>
            확장 Sobel 연산자를 이용해 1차, 2차, 3차 또는 혼합 차수의 미분 화상을 계산하는 [aperture_size=3]
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="xorder">x-도함수의 차수</param>
            <param name="yorder">y-도함수의 차수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Sobel(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Int32,System.Int32,OpenCvSharp.ApertureSize)">
            <summary>
            확장 Sobel 연산자를 이용해 1차, 2차, 3차 또는 혼합 차수의 미분 화상을 계산한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="xorder">x-도함수의 차수</param>
            <param name="yorder">y-도함수의 차수</param>
            <param name="aperture_size">확장 Sobel 커넬의 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Solve(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            선형 문제 또는 최소 이승법 문제를 푼다. dst = arg min_x||A*X-B||
            </summary>
            <param name="src1">입력 행렬</param>
            <param name="src2">선형 시스템의 우변</param>
            <param name="dst">출력솔루션</param>
            <returns>method에 LU를 지정했을 경우, src1이 non-singula 행렬이면 true를 돌려주고 그렇지 않으면 false를 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Solve(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.InvertMethod)">
            <summary>
            선형 문제 또는 최소 이승법 문제를 푼다. dst = arg min_x||A*X-B||
            </summary>
            <param name="src1">입력 행렬</param>
            <param name="src2">선형 시스템의 우변</param>
            <param name="dst">출력솔루션</param>
            <param name="method">역행열의 해법</param>
            <returns>method에 LU를 지정했을 경우, src1이 non-singula 행렬이면 true를 돌려주고 그렇지 않으면 false를 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SolveCubic(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            3차 방정식의 실수근을 요구한다
            </summary>
            <param name="coeffs">식의 계수로, 3개 또는 4개의 요소를 가지는 배열.</param>
            <param name="roots">실수근의 출력 배열.세 개의 요소를 가진다.</param>
            <returns>구한 real roots 수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SolvePoly(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            실계수 다항식의 실수근 및 복소근을 요구한다
            </summary>
            <param name="coeffs">(degree + 1)의 길이의, 방정식의 계수 배열(CV_32FC1 or CV_64 FC1)</param>
            <param name="roots">degree 의 길이 것 실수근과 복소근의 출력 배열(CV_32FC2 or CV_64 FC2)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SolvePoly(OpenCvSharp.CvMat,OpenCvSharp.CvMat,System.Int32)">
            <summary>
            실계수 다항식의 실수근 및 복소근을 요구한다
            </summary>
            <param name="coeffs">(degree + 1)의 길이의, 방정식의 계수 배열(CV_32FC1 or CV_64 FC1)</param>
            <param name="roots">degree 의 길이 것 실수근과 복소근의 출력 배열(CV_32FC2 or CV_64 FC2)</param>
            <param name="maxiter">반복 계산의 최대 반복수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SolvePoly(OpenCvSharp.CvMat,OpenCvSharp.CvMat,System.Int32,System.Int32)">
            <summary>
            실계수 다항식의 실수근 및 복소근을 요구한다
            </summary>
            <param name="coeffs">(degree + 1)의 길이의, 방정식의 계수 배열(CV_32FC1 or CV_64 FC1)</param>
            <param name="roots">degree 의 길이 것 실수근과 복소근의 출력 배열(CV_32FC2 or CV_64 FC2)</param>
            <param name="maxiter">반복 계산의 최대 반복수</param>
            <param name="fig">요구 정도의 자리수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Sort(OpenCvSharp.CvArr)">
            <summary>
            올림내림차순 배열의 행과열의 소트
            </summary>
            <param name="src">소트할 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Sort(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            올림내림차순 배열의 행과열의 소트
            </summary>
            <param name="src">소트할 배열</param>
            <param name="dst">저장될 타겟(옵션)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Sort(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            올림내림차순 배열의 행과열의 소트
            </summary>
            <param name="src">소트할 배열</param>
            <param name="dst">저장될 타겟(옵션)</param>
            <param name="idxmat">행렬의 인덱스</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Sort(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.SortFlag)">
            <summary>
            올림내림차순 배열의 행과열의 소트
            </summary>
            <param name="src">소트할 배열</param>
            <param name="dst">저장될 타겟(옵션)</param>
            <param name="idxmat">행렬의 인덱스</param>
            <param name="flags">정렬 parameter</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Split(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            멀티 채널의 배열을, 복수의 싱글 채널의 배열에 분할한다.또는, 배열로부터 하나의 채널을 꺼낸다.
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst0">출력 채널 1</param>
            <param name="dst1">출력 채널 2</param>
            <param name="dst2">출력 채널 3</param>
            <param name="dst3">출력 채널 4</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Sqrt(System.Single)">
            <summary>
            인수의 평방근을 계산한다. 
            인수가 0의 값의 경우, 결과는 구해지지 않는다. 
            </summary>
            <param name="value">부동 소수점형의 입력치</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SquareAcc(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            누산기에 입력 화상의 제곱을 가산한다
            </summary>
            <param name="image">입력 화상,1- 혹은 3-채널, 8 비트 혹은 32 비트 부동 소수점형.(멀티 채널 화상의 각 채널은, 개별적으로 처리된다).</param>
            <param name="sqsum">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.SquareAcc(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            누산기에 입력 화상의 제곱을 가산한다
            </summary>
            <param name="image">입력 화상,1- 혹은 3-채널, 8 비트 혹은 32 비트 부동 소수점형.(멀티 채널 화상의 각 채널은, 개별적으로 처리된다).</param>
            <param name="sqsum">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형. </param>
            <param name="mask">옵션의 처리 마스크</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StartAppendToSeq(OpenCvSharp.CvSeq,OpenCvSharp.CvSeqWriter@)">
            <summary>
            시퀸스의 데이터 쓰기 처리를 초기화한다
            </summary>
            <param name="seq">시퀸스의 포인터.</param>
            <param name="writer">라이터(Writer) 상태. 이 함수로 초기화된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StartFindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage)">
            <summary>
            윤곽 주사(탐색) 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상.8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.StartFindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32)">
            <summary>
            윤곽 주사(탐색) 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상. 8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size"></param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.StartFindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval)">
            <summary>
            윤곽 주사(탐색) 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상.8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀸스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.StartFindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain)">
            <summary>
            윤곽 주사(탐색) 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상.8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀸스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
            <param name="method">근사 수법.cvFindContours와 같이, 단 CV_LINK_RUNS 는 사용 불가. </param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.StartFindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain,OpenCvSharp.CvPoint)">
            <summary>
            윤곽 주사(탐색) 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상.8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀸스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
            <param name="method">근사 수법.cvFindContours와 같이, 단 CV_LINK_RUNS 는 사용 불가. </param>
            <param name="offset">ROI의 오프셋.cvFindContours를 참조. </param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.StartNextStream(OpenCvSharp.CvFileStorage)">
            <summary>
            파일 스토리지내의 다음의 스트림을 시작한다. 
            YAML와 XML는 어느쪽이나 복수의 「스트림」을 서포트하고 있다.이것은 파일의 연결이나 써 프로세스의 재개에 도움이 된다.
            </summary>
            <param name="fs">파일 스토리지</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StartReadChainPoints(OpenCvSharp.CvChain,OpenCvSharp.CvChainPtReader)">
            <summary>
            체인 리더를 초기화한다
            </summary>
            <param name="chain">체인에의 포인터</param>
            <param name="reader">체인 리더 상태</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StartReadRawData(OpenCvSharp.CvFileStorage,OpenCvSharp.CvFileNode,OpenCvSharp.CvSeqReader@)">
            <summary>
            파일 노드의 시퀸스 리더의 초기화
            </summary>
            <param name="fs">파일 스토리지.</param>
            <param name="src">읽어들이는 파일 노드(시퀸스).</param>
            <param name="reader">시퀸스 리더에게의 포인터.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StartReadSeq(OpenCvSharp.CvSeq,OpenCvSharp.CvSeqReader)">
            <summary>
            시퀸스로부터의 연속 읽기 처리를 초기화한다
            </summary>
            <param name="seq">시퀸스</param>
            <param name="reader">리더(reader) 상태.이 함수로 초기화된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StartReadSeq(OpenCvSharp.CvSeq,OpenCvSharp.CvSeqReader,System.Boolean)">
            <summary>
            시퀸스로부터의 연속 읽기 처리를 초기화한다
            </summary>
            <param name="seq">시퀸스</param>
            <param name="reader">리더(reader) 상태.이 함수로 초기화된다.</param>
            <param name="reverse">시퀸스 주사(탐색) 방향의 지정.reverse 가 false 의 경우, 리더는 선두의 시퀸스 요소에 위치한다.그 이외는 마지막 요소에 위치한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StartWindowThread">
            <summary>
            StartWindowThread()
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.StartWriteSeq(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeqWriter@)">
            <summary>
            새로운 시퀸스를 작성해, 라이터(writer)를 초기화한다
            </summary>
            <param name="seq_flags">작성된 시퀸스의 플래그. 생성된 시퀸스가, 특정의 시퀸스 타입을 인수로 취하는 함수에 일절 건네받지 않는 경우는, 이 값에 0을 지정해도 상관없다. 그렇지 않은 경우는, 정의 끝난 시퀸스 타입의 리스트로부터 적절한 타입이 선택되지 않으면 안 된다. </param>
            <param name="header_size">시퀸스 헤더의 사이즈.sizeof(CvSeq) 이상이 아니면 안된다. 또, 특별한 타입이나 확장이 지시받고 있는 경우, 그 타입은 기본 타입의 헤드 사이즈와 합치해야 한다. </param>
            <param name="elem_size">시퀸스의 요소 사이즈(바이트 단위). 사이즈는 시퀸스 타입과 일치해야 한다. 예를 들면, 점군의 시퀸스(요소 타입은 CV_SEQ_ELTYPE_POINT)를 작성하는 경우, 파라미터 elem_size 는 sizeof(CvPoint)와 동일하지 않으면 안 된다. </param>
            <param name="storage">시퀸스의 위치. </param>
            <param name="writer">라이터 상태.이 함수로 초기화된다. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.StartWriteStruct(OpenCvSharp.CvFileStorage,System.String,OpenCvSharp.NodeType)">
            <summary>
            새로운 구조체의 쓰시를 시작한다
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="name">쓰는 구조체의 이름.읽어들이는 경우는, 이 이름으로 구조체에 액세스 할 수 있다.</param>
            <param name="struct_flags">Seq, Map, Flow의 플래그의 편성. Seq와 Map는 어느 쪽인지 1개를 지정해야 한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StartWriteStruct(OpenCvSharp.CvFileStorage,System.String,OpenCvSharp.NodeType,System.String)">
            <summary>
            새로운 구조체의 쓰시를 시작한다
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="name">쓰는 구조체의 이름.읽어들이는 경우는, 이 이름으로 구조체에 액세스 할 수 있다.</param>
            <param name="struct_flags">Seq, Map, Flow의 플래그의 편성. Seq와 Map는 어느 쪽인지 1개를 지정해야 한다.</param>
            <param name="type_name">옵션 파라미터 - 오브젝트의 형태의 이름. 
            XML의 경우, 구조체 개시 태그의 type_id속성으로서 쓰여진다. YAML의 경우, 구조체명에 계속 되는 코론의 뒤에 쓰여진다. 
            주로 유저 오브젝트와 함께 사용된다.스토리지가 읽혀졌을 때, encode 된 형명이 오브젝트의 형태를 결정한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StereoCalibrate(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            스테레오 카메라의 calibration를 실시한다
            </summary>
            <param name="object_points">오브젝트점의 결합 행렬, 3xN 혹은 Nx3. 여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="image_points1">1 번째의 카메라의 뷰에 있어서의 화상간 대응점의 결합 행렬, 2xN 혹은 Nx2.여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="image_points2">2 번째의 카메라의 뷰에 있어서의 화상간 대응점의 결합 행렬, 2xN 혹은 Nx2.여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="npoints">각 뷰에 포함되는 점수의 벡터, 1xM 혹은 Mx1. 여기서, M 는 뷰의 수. </param>
            <param name="camera_matrix1">입출력 카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS 나 CV_CALIB_FIX_ASPECT_RATIO 가 지정되었을 경우는, 이러한 행렬의 몇개 또는 모든 요소가 초기화되어 있을 것이다. </param>
            <param name="dist_coeffs1">카메라 1의 일그러짐 계수를 나타내는 입출력 벡터, 4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="camera_matrix2">입출력 카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS 나 CV_CALIB_FIX_ASPECT_RATIO 가 지정되었을 경우는, 이러한 행렬의 몇개 또는 모든 요소가 초기화되어 있을 것이다. </param>
            <param name="dist_coeffs2">카메라 2의 일그러짐 계수를 나타내는 입출력 벡터, 4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="image_size">화상 사이즈. 카메라의 내부 파라미터 행렬을 초기화할 때에만 이용된다. </param>
            <param name="R">1 번째와 2 번째의 카메라의 좌표계간의 회전 행렬. </param>
            <param name="T">카메라 좌표계간의 병진 벡터. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.StereoCalibrate(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            스테레오 카메라의 calibration를 실시한다
            </summary>
            <param name="object_points">오브젝트점의 결합 행렬, 3xN 혹은 Nx3. 여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="image_points1">1 번째의 카메라의 뷰에 있어서의 화상간 대응점의 결합 행렬, 2xN 혹은 Nx2.여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="image_points2">2 번째의 카메라의 뷰에 있어서의 화상간 대응점의 결합 행렬, 2xN 혹은 Nx2.여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="npoints">각 뷰에 포함되는 점수의 벡터, 1xM 혹은 Mx1. 여기서, M 는 뷰의 수. </param>
            <param name="camera_matrix1">입출력 카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS 나 CV_CALIB_FIX_ASPECT_RATIO 가 지정되었을 경우는, 이러한 행렬의 몇개 또는 모든 요소가 초기화되어 있을 것이다. </param>
            <param name="dist_coeffs1">카메라 1의 일그러짐 계수를 나타내는 입출력 벡터, 4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="camera_matrix2">입출력 카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS 나 CV_CALIB_FIX_ASPECT_RATIO 가 지정되었을 경우는, 이러한 행렬의 몇개 또는 모든 요소가 초기화되어 있을 것이다. </param>
            <param name="dist_coeffs2">카메라 2의 일그러짐 계수를 나타내는 입출력 벡터, 4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="image_size">화상 사이즈. 카메라의 내부 파라미터 행렬을 초기화할 때에만 이용된다. </param>
            <param name="R">1 번째와 2 번째의 카메라의 좌표계간의 회전 행렬. </param>
            <param name="T">카메라 좌표계간의 병진 벡터. </param>
            <param name="E">출력 옵션：E행렬.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StereoCalibrate(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            스테레오 카메라의 calibration를 실시한다
            </summary>
            <param name="object_points">오브젝트점의 결합 행렬, 3xN 혹은 Nx3. 여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="image_points1">1 번째의 카메라의 뷰에 있어서의 화상간 대응점의 결합 행렬, 2xN 혹은 Nx2.여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="image_points2">2 번째의 카메라의 뷰에 있어서의 화상간 대응점의 결합 행렬, 2xN 혹은 Nx2.여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="npoints">각 뷰에 포함되는 점수의 벡터, 1xM 혹은 Mx1. 여기서, M 는 뷰의 수. </param>
            <param name="camera_matrix1">입출력 카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS 나 CV_CALIB_FIX_ASPECT_RATIO 가 지정되었을 경우는, 이러한 행렬의 몇개 또는 모든 요소가 초기화되어 있을 것이다. </param>
            <param name="dist_coeffs1">카메라 1의 일그러짐 계수를 나타내는 입출력 벡터, 4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="camera_matrix2">입출력 카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS 나 CV_CALIB_FIX_ASPECT_RATIO 가 지정되었을 경우는, 이러한 행렬의 몇개 또는 모든 요소가 초기화되어 있을 것이다. </param>
            <param name="dist_coeffs2">카메라 2의 일그러짐 계수를 나타내는 입출력 벡터, 4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="image_size">화상 사이즈. 카메라의 내부 파라미터 행렬을 초기화할 때에만 이용된다. </param>
            <param name="R">1 번째와 2 번째의 카메라의 좌표계간의 회전 행렬. </param>
            <param name="T">카메라 좌표계간의 병진 벡터. </param>
            <param name="E">출력 옵션：E행렬.</param>
            <param name="F">출력 옵션：F행렬(기초 행렬).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StereoCalibrate(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvTermCriteria)">
            <summary>
            스테레오 카메라의 calibration를 실시한다
            </summary>
            <param name="object_points">오브젝트점의 결합 행렬, 3xN 혹은 Nx3. 여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="image_points1">1 번째의 카메라의 뷰에 있어서의 화상간 대응점의 결합 행렬, 2xN 혹은 Nx2.여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="image_points2">2 번째의 카메라의 뷰에 있어서의 화상간 대응점의 결합 행렬, 2xN 혹은 Nx2.여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="npoints">각 뷰에 포함되는 점수의 벡터, 1xM 혹은 Mx1. 여기서, M 는 뷰의 수. </param>
            <param name="camera_matrix1">입출력 카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS 나 CV_CALIB_FIX_ASPECT_RATIO 가 지정되었을 경우는, 이러한 행렬의 몇개 또는 모든 요소가 초기화되어 있을 것이다. </param>
            <param name="dist_coeffs1">카메라 1의 일그러짐 계수를 나타내는 입출력 벡터, 4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="camera_matrix2">입출력 카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS 나 CV_CALIB_FIX_ASPECT_RATIO 가 지정되었을 경우는, 이러한 행렬의 몇개 또는 모든 요소가 초기화되어 있을 것이다. </param>
            <param name="dist_coeffs2">카메라 2의 일그러짐 계수를 나타내는 입출력 벡터, 4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="image_size">화상 사이즈. 카메라의 내부 파라미터 행렬을 초기화할 때에만 이용된다. </param>
            <param name="R">1 번째와 2 번째의 카메라의 좌표계간의 회전 행렬. </param>
            <param name="T">카메라 좌표계간의 병진 벡터. </param>
            <param name="E">출력 옵션：E행렬.</param>
            <param name="F">출력 옵션：F행렬(기초 행렬).</param>
            <param name="term_crit">반복 최적화 알고리즘을 위한 종료 조건.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StereoCalibrate(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvTermCriteria,OpenCvSharp.CalibrationFlag)">
            <summary>
            스테레오 카메라의 calibration를 실시한다
            </summary>
            <param name="object_points">오브젝트점의 결합 행렬, 3xN 혹은 Nx3. 여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="image_points1">1 번째의 카메라의 뷰에 있어서의 화상간 대응점의 결합 행렬, 2xN 혹은 Nx2.여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="image_points2">2 번째의 카메라의 뷰에 있어서의 화상간 대응점의 결합 행렬, 2xN 혹은 Nx2.여기서, N 는 모든 뷰에 있어서의 점수의 합계. </param>
            <param name="npoints">각 뷰에 포함되는 점수의 벡터, 1xM 혹은 Mx1. 여기서, M 는 뷰의 수. </param>
            <param name="camera_matrix1">입출력 카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS 나 CV_CALIB_FIX_ASPECT_RATIO 가 지정되었을 경우는, 이러한 행렬의 몇개 또는 모든 요소가 초기화되어 있을 것이다. </param>
            <param name="dist_coeffs1">카메라 1의 일그러짐 계수를 나타내는 입출력 벡터, 4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="camera_matrix2">입출력 카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS 나 CV_CALIB_FIX_ASPECT_RATIO 가 지정되었을 경우는, 이러한 행렬의 몇개 또는 모든 요소가 초기화되어 있을 것이다. </param>
            <param name="dist_coeffs2">카메라 2의 일그러짐 계수를 나타내는 입출력 벡터, 4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="image_size">화상 사이즈. 카메라의 내부 파라미터 행렬을 초기화할 때에만 이용된다. </param>
            <param name="R">1 번째와 2 번째의 카메라의 좌표계간의 회전 행렬. </param>
            <param name="T">카메라 좌표계간의 병진 벡터. </param>
            <param name="E">출력 옵션：E행렬.</param>
            <param name="F">출력 옵션：F행렬(기초 행렬).</param>
            <param name="term_crit">반복 최적화 알고리즘을 위한 종료 조건.</param>
            <param name="flags">여러가지 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StereoRectify(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            스테레오 카메라의 평행화 변환을 구한다
            </summary>
            <param name="camera_matrix1">카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1].</param>
            <param name="camera_matrix2">카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1].</param>
            <param name="dist_coeffs1">카메라 1의 일그러짐 계수 벡터.4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="dist_coeffs2">카메라 2의 일그러짐 계수 벡터.4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="image_size">스테레오 카메라의 calibration에 이용되는 화상 사이즈. </param>
            <param name="R">1 번째와 2 번째의 카메라의 좌표계간의 회전 행렬. </param>
            <param name="T">카메라 좌표계간의 병진 벡터. </param>
            <param name="R1">1 번째의 카메라에 대한 3x3 평행화 변환(회전 행렬).</param>
            <param name="R2">2 번째의 카메라에 대한 3x3 평행화 변환(회전 행렬).</param>
            <param name="P1">새로운(평행화 된) 좌표계에 대한 3x4 의 투영 행렬. </param>
            <param name="P2">새로운(평행화 된) 좌표계에 대한 3x4 의 투영 행렬. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.StereoRectify(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            스테레오 카메라의 평행화 변환을 구한다
            </summary>
            <param name="camera_matrix1">카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1].</param>
            <param name="camera_matrix2">카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1].</param>
            <param name="dist_coeffs1">카메라 1의 일그러짐 계수 벡터.4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="dist_coeffs2">카메라 2의 일그러짐 계수 벡터.4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="image_size">스테레오 카메라의 calibration에 이용되는 화상 사이즈. </param>
            <param name="R">1 번째와 2 번째의 카메라의 좌표계간의 회전 행렬. </param>
            <param name="T">카메라 좌표계간의 병진 벡터. </param>
            <param name="R1">1 번째의 카메라에 대한 3x3 평행화 변환(회전 행렬).</param>
            <param name="R2">2 번째의 카메라에 대한 3x3 평행화 변환(회전 행렬).</param>
            <param name="P1">새로운(평행화 된) 좌표계에 대한 3x4 의 투영 행렬. </param>
            <param name="P2">새로운(평행화 된) 좌표계에 대한 3x4 의 투영 행렬. </param>
            <param name="Q">시차와 깊이의 매핑 행렬, 4x4.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StereoRectify(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.StereoRectificationFlag)">
            <summary>
            스테레오 카메라의 평행화 변환을 구한다
            </summary>
            <param name="camera_matrix1">카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1].</param>
            <param name="camera_matrix2">카메라 행렬 [fxk 0 cxk; 0 fyk  cyk; 0 0 1].</param>
            <param name="dist_coeffs1">카메라 1의 일그러짐 계수 벡터.4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="dist_coeffs2">카메라 2의 일그러짐 계수 벡터.4 x1, 1 x4, 5 x1, 1x5.</param>
            <param name="image_size">스테레오 카메라의 calibration에 이용되는 화상 사이즈. </param>
            <param name="R">1 번째와 2 번째의 카메라의 좌표계간의 회전 행렬. </param>
            <param name="T">카메라 좌표계간의 병진 벡터. </param>
            <param name="R1">1 번째의 카메라에 대한 3x3 평행화 변환(회전 행렬).</param>
            <param name="R2">2 번째의 카메라에 대한 3x3 평행화 변환(회전 행렬).</param>
            <param name="P1">새로운(평행화 된) 좌표계에 대한 3x4 의 투영 행렬. </param>
            <param name="P2">새로운(평행화 된) 좌표계에 대한 3x4 의 투영 행렬. </param>
            <param name="Q">시차와 깊이의 매핑 행렬, 4x4.</param>
            <param name="flags">옵션 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.StereoRectifyUncalibrated(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            calibration 되어 있지 않은 스테레오 카메라의 평행화 변환을 구한다
            </summary>
            <param name="points1">서로 대응하는 2 차원점의 두 개의 배열</param>
            <param name="points2">서로 대응하는 2 차원점의 두 개의 배열</param>
            <param name="F">기초 행렬. points1 와 points2 의 점 페어를 이용하고, 함수 cvFindFundamentalMat  에 의해서 계산된다.</param>
            <param name="img_size">화상 사이즈.</param>
            <param name="H1">1 번째의 화상과 2 번째의 화상에 대한 평행화 호모그라피 행렬.</param>
            <param name="H2">1 번째의 화상과 2 번째의 화상에 대한 평행화 호모그라피 행렬.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.StereoRectifyUncalibrated(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat,System.Double)">
            <summary>
            calibration 되어 있지 않은 스테레오 카메라의 평행화 변환을 구한다
            </summary>
            <param name="points1">서로 대응하는 2 차원점의 두 개의 배열</param>
            <param name="points2">서로 대응하는 2 차원점의 두 개의 배열</param>
            <param name="F">기초 행렬. points1 와 points2 의 점 페어를 이용하고, 함수 cvFindFundamentalMat  에 의해서 계산된다.</param>
            <param name="img_size">화상 사이즈.</param>
            <param name="H1">1 번째의 화상과 2 번째의 화상에 대한 평행화 호모그라피 행렬.</param>
            <param name="H2">1 번째의 화상과 2 번째의 화상에 대한 평행화 호모그라피 행렬.</param>
            <param name="threshold">옵션：빗나가 값을 배제하기 위한 임계치. 이 파라미터가 0 보다 큰 경우, 에피포라 기하에 충분히 따르지 않는 모든 점페어 (즉, fabs(points2[i]T*F*points1[i]) &gt;threshold  가 되는 점)가, 호모그라피 행렬을 계산하기 전에 기각된다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Sub(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 감산을 실시한다. 
            dst(I) =src1(I) -src2(I) 
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Sub(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 감산을 실시한다.
            dst(I) =src1(I) -src2(I) [mask(I)!=0 의 경우]
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크. 8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다). </param>
        </member>
        <member name="M:OpenCvSharp.Cv.SubS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            배열 요소로부터 스칼라를 감산한다.
            dst(I) = src(I) -value 
            </summary>
            <param name="src">입력 배열</param>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SubS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열 요소로부터 스칼라를 감산한다.
            dst(I) = src(I) -value [mask(I)!=0]
            </summary>
            <param name="src">입력 배열</param>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크. 8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SubRS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            스칼라로부터 배열 요소를 감산한다.
            dst(I) =value-src(I)
            </summary>
            <param name="src">입력 배열</param>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SubRS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            스칼라로부터 배열 요소를 감산한다.
            dst(I) =value-src(I) [mask(I)!=0 의 경우]
            </summary>
            <param name="src">입력 배열</param>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Sum(OpenCvSharp.CvArr)">
            <summary>
            배열 요소의 총화를 계산한다.
            배열의 타입이 IplImage 로 COI 가 세트 되고 있는 경우, 지정된 채널만을 처리해, 총화를 1번째의 스칼라치(S0)로서 보존한다.
            </summary>
            <param name="arr">입력 배열</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Subdiv2DEdgeDst(OpenCvSharp.CvSubdiv2DEdge)">
            <summary>
            엣지의 종점을 돌려준다. 
            엣지 두점  subdivision의 것이며, 가상점의 좌표가 아직 계산되어 있지 않은 경우는, null를 돌려준다. 
            가상점은 함수 cvCalcSubdivVoronoi2D 를 이용해 계산된다
            </summary>
            <param name="edge">subdivision의 엣지의 하나(quad-edge 표현은 아니다)</param>
            <returns>엣지의 종점</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Subdiv2DEdgeOrg(OpenCvSharp.CvSubdiv2DEdge)">
            <summary>
            엣지의 시점을 돌려준다. 
            엣지 두 점  Subdivision의 것이며, 가상점의 좌표가 아직 계산되어 있지 않은 경우는, null를 돌려준다. 
            가상점은 함수 cvCalcSubdivVoronoi2D 를 이용해 계산된다
            </summary>
            <param name="edge">세Subdivision의 엣지의 하나(quad-edge 표현은 아니다)</param>
            <returns>엣지의 시점</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Subdiv2DGetEdge(OpenCvSharp.CvSubdiv2DEdge,OpenCvSharp.CvNextEdgeType)">
            <summary>
            입력된 엣지에 관련된 하나의 엣지를 돌려준다
            </summary>
            <param name="edge">ubdivision의 엣지(quad-edge 표현은 아니다)</param>
            <param name="type">반환값으로 하는 엣지의 조건</param>
            <returns>주어진 엣지에 관련된 하나의 엣지</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Subdiv2DLocate(OpenCvSharp.CvSubdiv2D,OpenCvSharp.CvPoint2D32f,OpenCvSharp.CvSubdiv2DEdge@)">
            <summary>
            들로네 삼각형에 점을 추가한다
            </summary>
            <param name="subdiv">들로네, 또는 그 외의 subdivision</param>
            <param name="pt">배치되는 점</param>
            <param name="edge">출력되는 엣지. 배치한 점은, 그 근처 또는 오른쪽에 존재한다.</param>
            <returns>배치하는 점</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Subdiv2DLocate(OpenCvSharp.CvSubdiv2D,OpenCvSharp.CvPoint2D32f,OpenCvSharp.CvSubdiv2DEdge@,OpenCvSharp.CvSubdiv2DPoint@)">
            <summary>
            들로네 삼각형에 점을 추가한다
            </summary>
            <param name="subdiv">들로네, 또는 그 외의 subdivision</param>
            <param name="pt">배치하는 점</param>
            <param name="edge">출력되는 엣지. 배치된 점은, 그 근처 또는 오른쪽에 존재한다.</param>
            <param name="vertex">옵션 출력. 입력점으로 일치하는 subdivision의 정점의 포인터의 포인터</param>
            <returns>배치하는 점</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Subdiv2DRotateEdge(OpenCvSharp.CvSubdiv2DEdge,OpenCvSharp.RotateEdgeFlag)">
            <summary>
            입력된 엣지를 포함한 quad-edge중의 엣지 하나를 돌려준다.
            </summary>
            <param name="edge">Subdivision의 엣지(quad-edge 표현은 아니다)</param>
            <param name="rotate">관계의 지정(입력된 엣지와 같은 quad-edge의 어느 엣지를 돌려주는지를 지정)</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SubdivDelaunay2DInsert(OpenCvSharp.CvSubdiv2D,OpenCvSharp.CvPoint2D32f)">
            <summary>
            들로네 삼각형에 점을 추가한다
            </summary>
            <param name="subdiv">함수 cvCreateSubdivDelaunay2D 로 작성된 들로네 subdivision</param>
            <param name="pt">추가하는 점</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SubstituteContour(OpenCvSharp.CvContourScanner,OpenCvSharp.CvSeq{OpenCvSharp.CvPoint})">
            <summary>
            추출된 윤곽을 옮겨놓는다
            </summary>
            <param name="scanner">함수 cvStartFindContours로 초기화된 윤곽 스캐너</param>
            <param name="new_contour">새롭게 옮겨놓는 윤곽</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SURFParams(System.Double,System.Boolean)">
            <summary>
            SURF의 파라미터를 생성한다
            </summary>
            <param name="hessianThreshold">keypoint.hessian 의 값이 쓰레스홀드 보다 큰 특징만 검출된다</param>
            <param name="extended">false：기본적인 디스크립터(64 요소), true：확장된 디스크립터(128 요소)</param>
            <returns>디폴트 파라미터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SVBkSb(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.SVDFlag)">
            <summary>
            특이치의 후퇴 대입을 실시한다
            </summary>
            <param name="W">특이치의 행렬 또는 벡터</param>
            <param name="U">왼쪽 직교 행렬(전치 되고 있을지도 모르다)</param>
            <param name="V">오른쪽 직교 행렬(전치 되고 있을지도 모르다)</param>
            <param name="B">행렬 A의 의사 역행열에 타기 위한 행렬</param>
            <param name="X">출력 행렬.후퇴 대입의 결과.</param>
            <param name="flags">조작 플래그.cvSVD로의 flags와 일치하고 있지 않으면 안 된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SVD(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            부동 소수점형의 실수 행렬의 특이치 분해를 실시한다.
            행렬 A를 두 개의 직교 행렬과 하나의 대각행렬의 곱으로 분해한다.A=U*W*VT
            </summary>
            <param name="A">입력 M×N행렬</param>
            <param name="W">특이치 행렬의 결과 (M×N 또는 N×N) 또는 벡터(N×1).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SVD(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            부동 소수점형의 실수 행렬의 특이치 분해를 실시한다.
            행렬 A를 두 개의 직교 행렬과 하나의 대각행렬의 곱으로 분해한다.A=U*W*VT
            </summary>
            <param name="A">입력 M×N행렬</param>
            <param name="W">특이치 행렬의 결과 (M×N 또는 N×N) 또는 벡터(N×1).</param>
            <param name="U">임의의 왼쪽 직교 행렬 (M×M 또는 M×N).만약 CV_SVD_U_T가 지정되었을 경우, 위에서 말한, 행과 열의 수는 바뀐다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SVD(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            부동 소수점형의 실수 행렬의 특이치 분해를 실시한다.
            행렬 A를 두 개의 직교 행렬과 하나의 대일본 장기 말열의 적 으로 분해한다.A=U*W*VT
            </summary>
            <param name="A">입력 M×N행렬</param>
            <param name="W">특이치 행렬의 결과 (M×N 또는 N×N) 또는 벡터(N×1).</param>
            <param name="U">임의의 왼쪽 직교 행렬 (M×M 또는 M×N).만약 CV_SVD_U_T가 지정되었을 경우, 위에서 말한, 행과 열의 수는 바뀐다.</param>
            <param name="V">임의의 오른쪽 직교 행렬(N×N).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.SVD(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.SVDFlag)">
            <summary>
            부동 소수점형의 실수 행렬의 특이치 분해를 실시한다.
            행렬 A를 두 개의 직교 행렬과 하나의 대일본 장기 말열의 적 으로 분해한다.A=U*W*VT
            </summary>
            <param name="A">입력 M×N행렬</param>
            <param name="W">특이치 행렬의 결과 (M×N 또는 N×N) 또는 벡터(N×1).</param>
            <param name="U">임의의 왼쪽 직교 행렬 (M×M 또는 M×N).만약 CV_SVD_U_T가 지정되었을 경우, 위에서 말한, 행과 열의 수는 바뀐다.</param>
            <param name="V">임의의 오른쪽 직교 행렬(N×N).</param>
            <param name="flags">조작 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.TermCriteria(OpenCvSharp.CriteriaType,System.Int32,System.Double)">
            <summary>
            반복 알고리즘을 위한 종료 조건을 생성해 돌려준다
            </summary>
            <param name="type">종료 조건</param>
            <param name="max_iter">반복수의 최대치</param>
            <param name="epsilon">목표 정도</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ThreshHist(OpenCvSharp.CvHistogram,System.Double)">
            <summary>
            히스토그램의 쓰레스홀드를 실시한다.
            지정한 쓰레스홀드 이하의 히스토그램의 빈을 클리어 한다.
            </summary>
            <param name="hist">히스토그램에의 참조</param>
            <param name="threshold">쓰레스홀드 레벨</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Threshold(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double,OpenCvSharp.ThresholdType)">
            <summary>
            싱글 채널의 배열에 대해서, 고정 반응을 일으키는 쓰레스홀드를 실시한다
            </summary>
            <param name="src">입력 배열 (싱글 채널, 8비트, 혹은 32비트 부동 소수점형)</param>
            <param name="dst">출력 배열.src 와 같은 데이터 타입, 또는 8비트. </param>
            <param name="threshold">쓰레스홀드</param>
            <param name="max_value">threshold_type 가 Binary 와 BinaryInv 때에 사용하는 최대치</param>
            <param name="threshold_type">쓰레스홀드의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Trace(OpenCvSharp.CvArr)">
            <summary>
            행렬의 트레이스(대각 성분의 화)를 돌려준다
            </summary>
            <param name="mat">입력 행렬</param>
            <returns>대각 성분의 화</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Transform(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            반경 방향이나 원주 방향의 렌즈 일그러짐을 보정하기 위해서 화상을 변환한다.
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="transmat">변환 행렬</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Transform(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            반경 방향이나 원주 방향의 렌즈 일그러짐을 보정하기 위해서 화상을 변환한다.
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="transmat">변환 행렬</param>
            <param name="shiftvec">옵션의 시프트 벡터</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Transpose(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            행렬의 전치를 실시한다.
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">출력 행렬</param>
        </member>
        <member name="M:OpenCvSharp.Cv.T(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            행렬의 전치를 실시한다.
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">출력 행렬</param>
        </member>
        <member name="M:OpenCvSharp.Cv.TreeToNodeSeq``1(OpenCvSharp.CvTreeNode{``0},System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            모든 노드의 포인터를 하나의 시퀸스에 모은다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="first">트리의 선두 노드.</param>
            <param name="header_size">작성한 시퀸스의 헤더 사이즈(sizeof(CvSeq)가 이용되는 것이 많다).</param>
            <param name="storage">시퀸스를 위한 컨테이너.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.TypeOf(System.IntPtr)">
            <summary>
            오브젝트의 형태를 돌려준다
            </summary>
            <param name="struct_ptr">오브젝트에의 포인터</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.TypeOf(OpenCvSharp.ICvPtrHolder)">
            <summary>
            오브젝트의 형태를 돌려준다
            </summary>
            <param name="struct_ptr">OpenCV의 오브젝트</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Undistort2(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            반경 방향이나 원주 방향의 렌즈 일그러짐을 보정하기 위해서 화상을 변환한다.
            </summary>
            <param name="src">입력 화상(서로 비뚤어져)</param>
            <param name="dst">출력 화상(보정이 끝난 상태)</param>
            <param name="intrinsic_matrix">카메라 내부 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">일그러짐 계수 벡터. 4x1 또는 1x4 [k1, k2, p1, p2]. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.UndistortPoints(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            관측된 점 좌표로부터 이상적인 점 좌표를 계산한다
            </summary>
            <param name="src">카메라로 관측된 점좌표의 집합.</param>
            <param name="dst">일그러짐 보정 후에 역투시 투영을 실시한 이상적인 점좌표.</param>
            <param name="camera_matrix">카메라 행렬 A=[fx 0 cx; 0 fy cy; 0 0 1] </param>
            <param name="dist_coeffs">일그러짐 계수의 벡터, 4x1, 1x4, 5x1, 1x5.</param>
            <param name="R">오브젝트 공간에서의 평행화 변환(3x3 행렬). cvStereoRectify 로 계산된 값, R1 혹은 R2 가 건네받는다.이 파라미터가 null 의 경우, 단위행렬이 이용된다.</param>
            <param name="P">새로운 카메라 행렬(3 x3), 혹은, 새로운 투영 행렬(3 x4). cvStereoRectify  로 계산된 값, P1 혹은 P2  가 건네받는다. 이 파라미터가 null 의 경우 단위행렬이 이용된다. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.UnregisterType(System.String)">
            <summary>
            형태의 등록을 취소한다
            </summary>
            <param name="type_name">등록을 취소하는 형태의 이름</param>
        </member>
        <member name="M:OpenCvSharp.Cv.UpdateMotionHistory(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            무빙 실루엣을 이용하여 모션 히스토리 화상을 업데이트 
            </summary> 
            <param name="silhouette"> 모션이 발생한 위치가 0이 아닌 픽셀 값을 가진 실루엣 마스크. </param> 
            <param name="mhi"> 함수가 업데이트되는 모션 히스토리 화상 (단일 채널, 32 비트 부동 소수점 형식). </param> 
            <param name="timestamp"> 밀리세컨드초, 또는 기타 단위로 대표되는 현재 시간. </param> 
            <param name="duration"> timestamp와 동일한 시간 단위로 표현되는 모션 궤적의 최대 유지 시간. </param> 
        </member>
        <member name="M:OpenCvSharp.Cv.UseOptimized(System.Boolean)">
            <summary>
            최적화 모드/비최적화 모드를 바꾼다
            </summary>
            <param name="on_off">true일때 최적화 false일때 비최적화.</param>
            <returns>로드 된 최적화 함수의 수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.WaitKey">
            <summary>
            아무키나 입력될 때까지 대기한다.
            </summary>
            <returns>입력된 키의 키코드</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.WaitKey(System.Int32)">
            <summary>
            아무키나 입력되던지 혹은 delay로 지정한 시간(밀리 세컨드) 대기한다.
            </summary>
            <param name="delay">지연 시간(밀리 세컨드)</param>
            <returns>키가 눌렸을 경우는 그 키코드를, 키가 눌리지 않은 채 지정된 타임 아웃 시간이 지나 버렸을 경우는 -1</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.WarpAffine(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            화상의 아핀 변환을 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="map_matrix">2×3 변환 행렬</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WarpAffine(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.Interpolation)">
            <summary>
            화상의 아핀 변환을 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="map_matrix">2×3 변환 행렬</param>
            <param name="flags">보간 방법</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WarpAffine(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.Interpolation,OpenCvSharp.CvScalar)">
            <summary>
            화상의 아핀 변환을 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="map_matrix">2×3 변환 행렬</param>
            <param name="flags">보간 방법</param>
            <param name="fillval">대응되지 않는 점에 대해서 주는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WarpPerspective(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            화상의 투시 변환을 실시한다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="map_matrix">3×3 의 변환 행렬</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WarpPerspective(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.Interpolation)">
            <summary>
            화상의 투시 변환을 실시한다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="map_matrix">3×3 의 변환 행렬</param>
            <param name="flags">보간 방법</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WarpPerspective(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.Interpolation,OpenCvSharp.CvScalar)">
            <summary>
            화상의 투시 변환을 실시한다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="map_matrix">3×3 의 변환 행렬</param>
            <param name="flags">보간 방법</param>
            <param name="fillval">대응되지 않는 점에 대해서 주는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Watershed(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            watershed 알고리즘에 의한 화상의 부분화를 실시한다.
            화상을 이 함수에 건네주기 전에, 유저는 대략적으로 화상 markers중의 처리 대상 영역을, 정(>0)의 인덱스를 이용해 단락지어 두지 않으면 안 된다.
            </summary>
            <param name="image">입력 화상.8비트, 3 채널 화상.</param>
            <param name="markers">입출력 화상.32비트 싱글 채널의 마커 화상(맵).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Write(OpenCvSharp.CvFileStorage,System.String,OpenCvSharp.CvArr)">
            <summary>
            오브젝트를 파일 스토리지에 쓴다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="name">써지는 오브젝트의 이름. 부모의 구조체가 시퀸스의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="ptr">오브젝트에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Write(OpenCvSharp.CvFileStorage,System.String,OpenCvSharp.CvArr,OpenCvSharp.CvAttrList)">
            <summary>
            오브젝트를 파일 스토리지에 쓴다.
            </summary>
            <param name="fs">파일 스토리지.</param>
            <param name="name">써지는 오브젝트의 이름. 부모의 구조체가 시퀸스의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="ptr">오브젝트에의 참조.</param>
            <param name="attributes">오브젝트의 속성.이것은 특정의 형태에 대해서 고유하다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WriteComment(OpenCvSharp.CvFileStorage,System.String)">
            <summary>
            파일 스토리지에 코멘트를 쓴다 (eol_comment = false).
            이 코멘트는 디버그나 설명을 기술하기 위해서 사용되는 것으로, 읽기시에는 읽어 날아간다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="comment">일행 또는 복수행의, 써지는 문자열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WriteComment(OpenCvSharp.CvFileStorage,System.String,System.Boolean)">
            <summary>
            파일 스토리지에 코멘트를 쓴다.
            이 코멘트는 디버그나 설명을 기술하기 위해서 사용되는 것으로, 읽기시에는 읽어 날아간다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="comment">일행 또는 복수행의, 써지는 문자열</param>
            <param name="eol_comment">true의 경우, 이 함수는 현재의 행의 마지막에 코멘트를 넣으려고 시도한다.
            false로, 코멘트가 복수, 또는 현재의 행의 마지막에 들어가지 않는 경우는, 코멘트는 새로운 행으로부터 시작할 수 있다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WriteFileNode(OpenCvSharp.CvFileStorage,System.String,OpenCvSharp.CvFileNode,System.Boolean)">
            <summary>
            파일 노드를 다른 파일 스토리지에 쓴다
            </summary>
            <param name="fs">기입처의 파일 스토리지.</param>
            <param name="new_node_name">기입처 파일 스토리지내의 파일 노드가 새로운 이름.전의 이름을 유지하기 위해서는, cvGetFileNodeName(node)를 이용한다.</param>
            <param name="node">써지는 노드.</param>
            <param name="embed">써지는 노드가 콜렉션으로, 이 파라미터가 true의 경우, 계층의 여분의 레벨은 생성되지 않는다.
            그 대신에, node의 모든 요소는 현재 써지고 있는 구조체에 써진다.
            당연, 맵 요소는 맵에게만 써져 시퀸스 요소는 시퀸스에게만 써진다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WriteFrame(OpenCvSharp.CvVideoWriter,OpenCvSharp.IplImage)">
            <summary>
            하나의 프레임을 비디오 파일에 쓰는/추가한다
            </summary>
            <param name="writer">비디오 라이터 클래스</param>
            <param name="image">써지는 프레임</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.WriteInt(OpenCvSharp.CvFileStorage,System.String,System.Int32)">
            <summary>
            1개의 정수치(이름 있다, 또는 없다)를 파일에 쓴다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="name">써지는 문자열의 이름.부모의 구조체가 시퀸스의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="value">써지는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WriteRawData``1(OpenCvSharp.CvFileStorage,``0[],System.String)">
            <summary>
            복수의 수치를 쓴다
            </summary>
            <typeparam name="T">src의 요소의 형태</typeparam>
            <param name="fs">파일 스토리지</param>
            <param name="src">쓰는 배열</param>
            <param name="dt">포맷</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WriteReal(OpenCvSharp.CvFileStorage,System.String,System.Double)">
            <summary>
            단정도 부동 소수점형의 값(이름 있어, 또는 없음)을 파일에 쓴다.
            특별한 값은 encode 되는：Not A Number는 NaN 에,±Infinity는 +.Inf (-.Inf)가 된다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="name">써지는 문자열의 이름.부모의 구조체가 시퀸스의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="value">써지는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WriteString(OpenCvSharp.CvFileStorage,System.String,System.String)">
            <summary>
            문자열을 파일 스토리지에 쓴다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="name">써지는 문자열의 이름. 부모의 구조체가 시퀸스의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="str">써지는 문자열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.WriteString(OpenCvSharp.CvFileStorage,System.String,System.String,System.Boolean)">
            <summary>
            문자열을 파일 스토리지에 쓴다.
            </summary>
            <param name="fs">파일 스토리지</param>
            <param name="name">써지는 문자열의 이름. 부모의 구조체가 시퀸스의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="str">써지는 문자열</param>
            <param name="quote">true의 경우, 써지는 문자열은 필요할지에 관련되지 않고 인용부호로 낀다.
            false의 경우, 필요한 경우에게만 인용부호가 사용된다(예를 들면, 문자열이 숫자로 시작되어 있거나, 스페이스를 포함한 경우).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Xor(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 배타적 논리합(XOR)을 계산한다. 
            dst(I) =src1(I) ^src2(I)
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Xor(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 배타적 논리합(XOR)을 계산한다. 
            dst(I) =src1(I) ^src2(I) [mask(I)!=0의 경우]
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다). </param>
        </member>
        <member name="M:OpenCvSharp.Cv.XorS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 배타적 논리합(XOR)을 계산한다.
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) ^value
            </summary>
            <param name="src1">입력 배열</param>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.XorS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 배타적 논리합(XOR)을 계산한다. 
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) ^value [mask(I)!=0의 경우]
            </summary>
            <param name="src1">입력 배열</param>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.HaarDetectObjects(OpenCvSharp.CvArr,OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvMemStorage)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 같은 사각형 영역을 검출해, 그 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="image">이 화상중에서 오브젝트를 검출한다</param>
            <param name="cascade">Haar 분류기 캐스케이드의 내부 표현</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있는 경우에 그 사각형열을 보존하는 메모리스트레이지</param>
            <returns>CvAvgComp를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HaarDetectObjects(OpenCvSharp.CvArr,OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvMemStorage,System.Double)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 같은 사각형 영역을 검출해, 그 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="image">이 화상중에서 오브젝트를 검출한다</param>
            <param name="cascade">Haar 분류기 캐스케이드의 내부 표현</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있는 경우에, 그 사각형열을 보존하는 메모리스트레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 스케일링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <returns>CvAvgComp를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HaarDetectObjects(OpenCvSharp.CvArr,OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvMemStorage,System.Double,System.Int32)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 같은 사각형 영역을 검출해, 그 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="image">이 화상중에서 오브젝트를 검출한다</param>
            <param name="cascade">Haar 분류기 캐스케이드의 내부 표현</param>
            <param name="storage">오브젝트 후보의 구형을 얻을 수 있는 경우에, 그 사각형열을 보존하는 메모리스트레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 스케일링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <param name="min_neighbors">(지금부터 1 을 뺀 값이) 오브젝트를 구성하는 근방 사각형의 최소수가 된다. min_neighbors-1 보다 적은 구형 밖에 포함하지 않는 듯한 그룹은 모두 기각된다. 만약 min_neighbors 가 0 인 경우, 이 함수는 그룹을 하나도 생성하지 않고, 후보가 되는 구형을 모두 돌려준다.이것은 유저가 커스터마이즈 한 그룹화 처리를 적용하고 싶은 경우에 유용하다. </param>
            <returns>CvAvgComp를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HaarDetectObjects(OpenCvSharp.CvArr,OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvMemStorage,System.Double,System.Int32,OpenCvSharp.HaarDetectionType)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 것 같은 사각형 영역을 검출해, 그영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="image">이 화상중에서 오브젝트를 검출한다</param>
            <param name="cascade">Haar 분류기 캐스케이드의 내부 표현</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있는 경우에, 그 사각형열을 보존하는 메모리스트레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 스케일링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <param name="min_neighbors">(지금부터 1 을 뺀 값이) 오브젝트를 구성하는 근방 사각형의 최소수가 된다. min_neighbors-1 보다 적은 구형 밖에 포함하지 않는 듯한 그룹은 모두 기각된다. 만약 min_neighbors 가 0 인 경우, 이 함수는 그룹을 하나도 생성하지 않고, 후보가 되는 구형을 모두 돌려준다.이것은 유저가 커스터마이즈 한 그룹화 처리를 적용하고 싶은 경우에 유용하다. </param>
            <param name="flags">처리 모드</param>
            <returns>CvAvgComp를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HaarDetectObjects(OpenCvSharp.CvArr,OpenCvSharp.CvHaarClassifierCascade,OpenCvSharp.CvMemStorage,System.Double,System.Int32,OpenCvSharp.HaarDetectionType,OpenCvSharp.CvSize)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 것 같은 사각형 영역을 검출해, 그 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="image">이 화상중에서 오브젝트를 검출한다</param>
            <param name="cascade">Haar 분류기 캐스케이드의 내부 표현</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있었을 경우에, 그 사각형열을 보존하는 메모리스트레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 슬캘링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <param name="min_neighbors">(지금부터 1 을 뺀 값이) 오브젝트를 구성하는 근방 사각형의 최소수가 된다. min_neighbors-1 보다 적은 구형 밖에 포함하지 않는 듯한 그룹은 모두 기각된다. 만약 min_neighbors 가 0 인 경우, 이 함수는 그룹을 하나도 생성하지 않고, 후보가 되는 구형을 모두 돌려준다.이것은 유저가 커스터마이즈 한 그룹화 처리를 적용하고 싶은 경우에 유용하다. </param>
            <param name="flags">처리 모드</param>
            <param name="min_size">최소 윈도사이즈.디폴트에서는 분류기의 학습에 이용된 샘플의 사이즈가 설정된다(얼굴 검출의 경우는,~20×20).</param>
            <returns>CvAvgComp를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughCircles(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="image">입력 화상 (8비트, 싱글 채널, 그레이 스케일).</param>
            <param name="circle_storage">검출된 원을 보존하는 메모리스트레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 엔의 근방에 복수가 잘못된 엔이 검출되게 된다.또, 반대로 매우 큰 경우는, 엔검출에 실패한다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughCircles(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="image">입력 화상 (8비트, 싱글 채널, 그레이 스케일).</param>
            <param name="circle_storage">검출된 원을 보존하는 메모리스트레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 엔의 근방에 복수가 잘못된 엔이 검출되게 된다.또, 반대로 매우 큰 경우는, 엔검출에 실패한다. </param>
            <param name="param1">手法に応じた1番目のパラメータ． CV_HOUGH_GRADIENT の場合は，Cannyのエッジ検出器で用いる二つの閾値の高い方の値 (低い方の値は，この値を1/2したものになる）．</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughCircles(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="image">입력 화상 (8비트, 싱글 채널, 그레이 스케일).</param>
            <param name="circle_storage">검출된 원을 보존하는 메모리스트레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 엔의 근방에 복수가 잘못된 엔이 검출되게 된다.또, 반대로 매우 큰 경우는, 엔검출에 실패한다. </param>
            <param name="param1">알고리즘으로 대응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 반응을 일으키는 최소의 물리량의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">알고리즘으로 대응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 반응을 일으키는 최소의 물리량.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 엔으로부터 순서에 검출된다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughCircles(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="image">입력 화상 (8비트, 싱글 채널, 그레이 스케일).</param>
            <param name="circle_storage">검출된 원을 보존하는 메모리스트레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 엔의 근방에 복수가 잘못된 엔이 검출되게 된다.또, 반대로 매우 큰 경우는, 엔검출에 실패한다. </param>
            <param name="param1">알고리즘으로 대응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 반응을 일으키는 최소의 물리량의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">알고리즘으로 대응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 반응을 일으키는 최소의 물리량.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 엔으로부터 순서에 검출된다.</param>
            <param name="min_radius">검출해야 할 엔의 최소 반경.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughCircles(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="image">입력 화상 (8비트, 싱글 채널, 그레이 스케일).</param>
            <param name="circle_storage">검출된 원을 보존하는 메모리스트레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 엔의 근방에 복수가 잘못된 엔이 검출되게 된다.또, 반대로 매우 큰 경우는, 엔검출에 실패한다. </param>
            <param name="param1">알고리즘으로 대응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 반응을 일으키는 최소의 물리량의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">알고리즘으로 대응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 반응을 일으키는 최소의 물리량.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 엔으로부터 순서에 검출된다.</param>
            <param name="min_radius">검출해야 할 엔의 최소 반경.</param>
            <param name="max_radius">검출해야 할 엔의 최대 반경 디폴트의 최대 반경은 max(image_width, image_height)에 세트 되고 있다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughCircles(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="image">입력 화상 (8비트, 싱글 채널, 그레이 스케일).</param>
            <param name="circle_storage">검출된 원을 보존하는 메모리스트레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 엔의 근방에 복수가 잘못된 엔이 검출되게 된다.또, 반대로 매우 큰 경우는, 엔검출에 실패한다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughCircles(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="image">입력 화상 (8비트, 싱글 채널, 그레이 스케일).</param>
            <param name="circle_storage">검출된 원을 보존하는 메모리스트레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 엔의 근방에 복수가 잘못된 엔이 검출되게 된다.또, 반대로 매우 큰 경우는, 엔검출에 실패한다. </param>
            <param name="param1">알고리즘에 대응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 반응을 일으키는 최소의 물리량의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughCircles(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="image">입력 화상 (8비트, 싱글 채널, 그레이 스케일).</param>
            <param name="circle_storage">검출된 원을 보존하는 메모리스트레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 엔의 근방에 복수가 잘못된 엔이 검출되게 된다.또, 반대로 매우 큰 경우는, 엔검출에 실패한다. </param>
            <param name="param1">알고리즘에 대응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 반응을 일으키는 최소의 물리량의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">알고리즘에 대응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 반응을 일으키는 최소의 물리량.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 엔으로부터 순서에 검출된다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughCircles(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="image">입력 화상 (8비트, 싱글 채널, 그레이 스케일).</param>
            <param name="circle_storage">검출된 원을 보존하는 메모리스트레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 엔의 근방에 복수가 잘못된 엔이 검출되게 된다.또, 반대로 매우 큰 경우는, 엔검출에 실패한다. </param>
            <param name="param1">알고리즘에 대응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 반응을 일으키는 최소의 물리량의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">알고리즘에 대응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 반응을 일으키는 최소의 물리량.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 엔으로부터 순서에 검출된다.</param>
            <param name="min_radius">검출해야 할 원의 최소 반경.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughCircles(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            허프 변환을 이용해 그레이 스케일 화상중의 원을 검출한다
            </summary>
            <param name="image">입력 화상 (8비트, 싱글 채널, 그레이 스케일).</param>
            <param name="circle_storage">검출된 원을 보존하는 메모리스트레이지</param>
            <param name="method">현재 상태로서는, CV_HOUGH_GRADIENT(기본적인 2 단계의 허프 변환) 마샬 실장되고 있다. </param>
            <param name="dp">원의 중심을 요구할 때에 이용되는 계산시의 해상도.예를 들면, 이 값이 1 의 경우는, 계산은 입력 화상과 같은 해상도로 행해진다.2 의 경우는, 계산은 폭·높이 모두1/2의 해상도가 되는, 등. </param>
            <param name="min_dist">원검출에 있어서의 중심 좌표간의 최소 간격.이 값이 매우 작은 경우는, 올바르게 추출되어야 할 엔의 근방에 복수가 잘못된 엔이 검출되게 된다.또, 반대로 매우 큰 경우는, 엔검출에 실패한다. </param>
            <param name="param1">알고리즘에 대응한 1번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, Canny의 엣지 검출기로 이용하는 두 개의 반응을 일으키는 최소의 물리량의 비싼 분의 값 (낮은 분의 값은, 이 값을1/2한 것이 된다).</param>
            <param name="param2">알고리즘에 대응한 2번째의 파라미터. CV_HOUGH_GRADIENT 의 경우는, 중심 검출 계산시의 반응을 일으키는 최소의 물리량.너무 작으면 오류 검출이 많아진다.이것에 대응하는 값이 큰 엔으로부터 순서에 검출된다.</param>
            <param name="min_radius">검출해야 할 원의 최소 반경.</param>
            <param name="max_radius">검출해야 할 원의 최대 반경 디폴트의 최대 반경은 max(image_width, image_height)에 세트 되고 있다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughLines2(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.HoughLinesMethod,System.Double,System.Double,System.Int32)">
            <summary>
            허프(Hough) 변환을 이용해 2진 화상으로부터 직선을 검출한다
            </summary>
            <param name="image">입력 화상(8비트, 싱글 채널, 2진화 화상).확률적인 수법의 경우는, 화상은 함수내에서 변환된다.</param>
            <param name="line_storage">검출된 선을 보존하는 메모리스토레이지. 함수에 의해서 선분의 순서가 스토리지내에 만들어져 그 참조가 돌려주어진다</param>
            <param name="method">허프 변환의 종류</param>
            <param name="rho">거리 해상도(1 픽셀당 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">쓰레스홀드 파라미터. 대응하는 값이 threshold보다 큰 경우만, 추출된 선이 돌려주어진다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughLines2(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.HoughLinesMethod,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            허프(Hough) 변환을 이용해 2진 화상으로부터 직선을 검출한다
            </summary>
            <param name="image">입력 화상(8비트, 싱글 채널, 2진화 화상).확률적인 수법의 경우는, 화상은 함수내에서 변환된다.</param>
            <param name="line_storage">검출된 선을 보존하는 메모리스토레이지. 함수에 의해서 선분의 순서가 스토리지내에 만들어져 그 참조가 돌려주어진다</param>
            <param name="method">허프 변환의 종류</param>
            <param name="rho">거리 해상도(1 픽셀당 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">쓰레스홀드 파라미터. 대응하는 값이 threshold보다 큰 경우만, 추출된 선이 돌려주어진다.</param>
            <param name="param1">각 알고리즘에 대응한 1번째의 파라미터. 표준적 허프 변환에서는, 사용하지 않는다(0).확률적 허프 변환에서는, 최소의 선의 길이.마르치스케일 허프 변환에서는, 거리 해상도 rho의 제수.(거친 거리 해상도에서는 rho 이며, 상세한 해상도에서는 (rho / param1)된다).</param>
            <param name="param2">각 알고리즘에 대응한 2번째의 파라미터. 표준적 허프 변환에서는, 사용하지 않는다(0).확률적 허프 변환에서는, 동일 선상에 존재하는 선분으로서 취급하는(즉, 그것들을 통합해도 문제 없다), 두 개의 선분의 최대의 간격. 마르치스케일 허프 변환에서는, 각도 해상도 theta의 제수. (거친 각도 해상도에서는 theta 이며, 상세한 해상도에서는 (theta / param2)된다). </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughLines2(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.HoughLinesMethod,System.Double,System.Double,System.Int32)">
            <summary>
            허프(Hough) 변환을 이용해 2진 화상으로부터 직선을 검출한다
            </summary>
            <param name="image">입력 화상(8비트, 싱글 채널, 2치화 화상).확률적인 수법의 경우는, 화상은 함수내에서 변환된다.</param>
            <param name="line_storage">검출된 선을 보존하는 1행의 행렬/1열의 행렬. 행렬의 헤더는, 그 cols 나 rows가 검출된 선의 수가 되도록(듯이), 이 함수에 의해서 변경된다.만약 실제의 선의 수가 행렬의 사이즈를 넘는 경우는, 선의 최대 가능수가 돌려주어진다(표준적 하후 변환의 경우는 투표수로 소트 된다).</param>
            <param name="method">허프 변환의 종류</param>
            <param name="rho">거리 해상도(1 픽셀당 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">쓰레스홀드 파라미터. 대응하는 값이 threshold보다 큰 경우만, 추출된 선이 돌려주어진다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.HoughLines2(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.HoughLinesMethod,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            허프(Hough) 변환을 이용해 2진 화상으로부터 직선을 검출한다
            </summary>
            <param name="image">입력 화상(8비트, 싱글 채널, 2치화 화상).확률적인 수법의 경우는, 화상은 함수내에서 변환된다.</param>
            <param name="line_storage">검출된 선을 보존하는 1행의 행렬/1열의 행렬. 행렬의 헤더는, 그 cols 나 rows가 검출된 선의 수가 되도록(듯이), 이 함수에 의해서 변경된다.만약 실제의 선의 수가 행렬의 사이즈를 넘는 경우는, 선의 최대 가능수가 돌려주어진다(표준적 하후 변환의 경우는 투표수로 소트 된다).</param>
            <param name="method">허프 변환의 종류</param>
            <param name="rho">거리 해상도(1 픽셀당 단위)</param>
            <param name="theta">각도 해상도(라디안 단위로 계측)</param>
            <param name="threshold">쓰레스홀드 파라미터. 대응하는 값이 threshold보다 큰 경우만, 추출된 선이 돌려주어진다.</param>
            <param name="param1">각 알고리즘에 대응한 1번째의 파라미터.표준적 허프 변환에서는, 사용하지 않는다(0).확률적 허프 변환에서는, 최소의 선의 길이.마르치스케일 허프 변환에서는, 거리 해상도 rho의 제수.(거친 거리 해상도에서는 rho 이며, 상세한 해상도에서는 (rho / param1)된다).</param>
            <param name="param2">각 알고리즘에 대응한 2번째의 파라미터.표준적 허프 변환에서는, 사용하지 않는다(0).확률적 허프 변환에서는, 동일 선상에 존재하는 선분으로서 취급하는(즉, 그것들을 통합해도 문제 없다), 두 개의 선분의 최대의 간격. 마르치스케일 허프 변환에서는, 각도 해상도 theta의 제수. (거친 각도 해상도에서는 theta 이며, 상세한 해상도에서는 (theta / param2)된다). </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.IncRefData(OpenCvSharp.CvArr)">
            <summary>
            reference counter 포인터가 null 가 아닌 경우에, CvMat 혹은 CvMatND 의 데이터의 reference counter을 인크리먼트(increment) 해, 새로운 카운터치를 돌려준다.
            그렇지 않은 경우는 0 을 돌려준다. 
            </summary>
            <param name="arr">배열 헤더</param>
            <returns>새로운 카운터치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitFont(OpenCvSharp.CvFont@,OpenCvSharp.FontFace,System.Double,System.Double)">
            <summary>
            문자 출력 함수에게 건네지는 폰트 구조체를 초기화한다
            </summary>
            <param name="font">이 함수로 초기화되는 폰트 클래스</param>
            <param name="font_face">폰트명의 식별자</param>
            <param name="hscale">폭의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 폭으로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 폭으로 표시된다.</param>
            <param name="vscale">높이의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 높이로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 높이로 표시된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.InitFont(OpenCvSharp.CvFont@,OpenCvSharp.FontFace,System.Double,System.Double,System.Double)">
            <summary>
            문자 출력 함수에게 건네지는 폰트 구조체를 초기화한다
            </summary>
            <param name="font">이 함수로 초기화되는 폰트 클래스</param>
            <param name="font_face">폰트명의 식별자</param>
            <param name="hscale">폭의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 폭으로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 폭으로 표시된다.</param>
            <param name="vscale">높이의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 높이로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 높이로 표시된다.</param>
            <param name="shear">수직선으로부터의 문자의 상대적인 각도.제로의 경우는 비이탤릭 폰트로, 예를 들면, 1.0 f는 45о를 의미한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.InitFont(OpenCvSharp.CvFont@,OpenCvSharp.FontFace,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            문자 출력 함수에게 건네지는 폰트 구조체를 초기화한다
            </summary>
            <param name="font">이 함수로 초기화되는 폰트 클래스</param>
            <param name="font_face">폰트명의 식별자</param>
            <param name="hscale">폭의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 폭으로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 폭으로 표시된다.</param>
            <param name="vscale">높이의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 높이로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 높이로 표시된다.</param>
            <param name="shear">수직선으로부터의 문자의 상대적인 각도.제로의 경우는 비이탤릭 폰트로, 예를 들면, 1.0 f는 45о를 의미한다.</param>
            <param name="thickness">문자의 굵기.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.InitFont(OpenCvSharp.CvFont@,OpenCvSharp.FontFace,System.Double,System.Double,System.Double,System.Int32,OpenCvSharp.LineType)">
            <summary>
            문자 출력 함수에게 건네지는 폰트 구조체를 초기화한다
            </summary>
            <param name="font">이 함수로 초기화되는 폰트 클래스</param>
            <param name="font_face">폰트명의 식별자</param>
            <param name="hscale">폭의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 폭으로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 폭으로 표시된다.</param>
            <param name="vscale">높이의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 높이로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 높이로 표시된다.</param>
            <param name="shear">수직선으로부터의 문자의 상대적인 각도.제로의 경우는 비이탤릭 폰트로, 예를 들면, 1.0 f는 45о를 의미한다.</param>
            <param name="thickness">문자의 굵기.</param>
            <param name="line_type">선의 종류.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.InitImageHeader(OpenCvSharp.IplImage,OpenCvSharp.CvSize,OpenCvSharp.BitDepth,System.Int32)">
            <summary>
            유저로부터 건네받은 참조가 가리키는, 유저에 의해서 확보된 화상의 헤더 구조체를 초기화해, 그 참조를 돌려준다
            </summary>
            <param name="image">초기화되는 화상 헤더</param>
            <param name="size">화상의 폭과 높이</param>
            <param name="depth">화상의 컬러 깊이</param>
            <param name="channels">채널수</param>
            <returns>초기화된 화상 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitImageHeader(OpenCvSharp.IplImage,OpenCvSharp.CvSize,OpenCvSharp.BitDepth,System.Int32,OpenCvSharp.ImageOrigin)">
            <summary>
            유저로부터 건네받은 참조가 가리키는, 유저에 의해서 확보된 화상의 헤더 구조체를 초기화해, 그 참조를 돌려준다
            </summary>
            <param name="image">초기화되는 화상 헤더</param>
            <param name="size">화상의 폭과 높이</param>
            <param name="depth">화상의 컬러 깊이</param>
            <param name="channels">채널수</param>
            <param name="origin">초기화되는 화상 헤더</param>
            <returns>초기화된 화상 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitImageHeader(OpenCvSharp.IplImage,OpenCvSharp.CvSize,OpenCvSharp.BitDepth,System.Int32,OpenCvSharp.ImageOrigin,System.Int32)">
            <summary>
            유저로부터 건네받은 참조가 가리키는, 유저에 의해서 확보된 화상의 헤더 구조체를 초기화해, 그 참조를 돌려준다
            </summary>
            <param name="image">초기화되는 화상 헤더</param>
            <param name="size">화상의 폭과 높이</param>
            <param name="depth">화상의 컬러깊이</param>
            <param name="channels">채널수</param>
            <param name="origin">초기화되는 화상 헤더</param>
            <param name="align">화상의 행의 얼라이먼트, 통상은 4, 혹은 8 바이트.</param>
            <returns>초기화된 화상 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitLineIterator(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvLineIterator@)">
            <summary>
            라인이테레이타를 초기화한다
            </summary>
            <param name="image">대상 화상</param>
            <param name="pt1">선분의 첫째의 단 점</param>
            <param name="pt2">선분의 두번째의 단 점</param>
            <param name="line_iterator">라인이테레이타 상태 구조체에의 포인터</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitLineIterator(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvLineIterator@,OpenCvSharp.PixelConnectivity)">
            <summary>
            라인이테레이타를 초기화한다
            </summary>
            <param name="image">대상 화상</param>
            <param name="pt1">선분의 첫째의 단 점</param>
            <param name="pt2">선분의 두번째의 단 점</param>
            <param name="line_iterator">라인이테레이타 상태 구조체에의 포인터</param>
            <param name="connectivity">주사(탐색) 한 선분의 접속성.4또는 8</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitLineIterator(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvLineIterator@,OpenCvSharp.PixelConnectivity,System.Boolean)">
            <summary>
            라인이테레이타를 초기화한다
            </summary>
            <param name="image">대상 화상</param>
            <param name="pt1">선분의 첫째의 단 점</param>
            <param name="pt2">선분의 두번째의 단 점</param>
            <param name="line_iterator">라인이테레이타 상태 구조체에의 포인터</param>
            <param name="connectivity">주사(탐색) 한 선분의 접속성.4또는 8</param>
            <param name="left_to_right">pt1와 pt2 (와)는 관계없는 것으로 선분을 언제나 왼쪽에서 오른쪽으로 주사(탐색) 하는(true)인가, pt1로부터 pt2에의 정해진 방향으로 주사(탐색) 하는지(false)를 지정하는 플래그. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitMatHeader(OpenCvSharp.CvMat,System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            이미 확보된 CvMat 를 초기화한다.
            </summary>
            <param name="mat">초기화하는 행렬의 헤더에의 참조</param>
            <param name="rows">화상의 폭과 높이</param>
            <param name="cols">화상의 컬러 깊이</param>
            <param name="type">채널수</param>
            <returns>초기화된 행렬 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitMatHeader``1(OpenCvSharp.CvMat,System.Int32,System.Int32,OpenCvSharp.MatrixType,``0[])">
            <summary>
            이미 확보된 CvMat 를 초기화한다.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mat">초기화하는 행렬의 헤더에의 참조</param>
            <param name="rows">화상의 폭과 높이</param>
            <param name="cols">화상의 컬러 깊이</param>
            <param name="type">채널수</param>
            <param name="data">행렬의 헤더로 지정되는 데이터 배열. 길이가 rows*cols*channels의 1 차원 배열을 지정한다.</param>
            <returns>초기화된 행렬 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitMatHeader``1(OpenCvSharp.CvMat,System.Int32,System.Int32,OpenCvSharp.MatrixType,``0[],System.Int32)">
            <summary>
            이미 확보된 CvMat 를 초기화한다.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mat">초기화하는 행렬의 헤더에의 참조</param>
            <param name="rows">화상의 폭과 높이</param>
            <param name="cols">화상의 컬러 깊이</param>
            <param name="type">채널수</param>
            <param name="data">행렬의 헤더로 지정되는 데이터 배열. 길이가 rows*cols*channels의 1 차원 배열을 지정한다.</param>
            <param name="step">할당할 수 있었던 데이터의 ..를 바이트 단위로 나타낸다. 디폴트에서는, step에는 가능한 한 작은 값이 이용된다.즉, 행렬이 연속하는 행간에 갭이 존재하지 않는다.</param>
            <returns>초기화된 행렬 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitMatNDHeader(OpenCvSharp.CvMatND,System.Int32,System.Int32[],OpenCvSharp.MatrixType)">
            <summary>
            다차원 배열의 헤더를 초기화한다
            </summary>
            <param name="mat">초기화하는 배열의 헤더</param>
            <param name="dims">배열의 차원수</param>
            <param name="sizes">차원 사이즈의 배열</param>
            <param name="type">배열 요소의 종류</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitMatNDHeader``1(OpenCvSharp.CvMatND,System.Int32,System.Int32[],OpenCvSharp.MatrixType,``0[])">
            <summary>
            다차원 배열의 헤더를 초기화한다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mat">초기화하는 배열의 헤더</param>
            <param name="dims">배열의 차원수</param>
            <param name="sizes">차원 사이즈의 배열</param>
            <param name="type">배열 요소의 종류</param>
            <param name="data">행렬의 헤더로 지정되는 데이터</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitSparseMatIterator(OpenCvSharp.CvSparseMat,OpenCvSharp.CvSparseMatIterator@)">
            <summary>
            희소 배열 요소의 iterator를 초기화한다
            </summary>
            <param name="mat">입력 배열</param>
            <param name="mat_iterator">초기화되는 iterator</param>
            <returns>희소 배열의 선두 요소</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InitSubdivDelaunay2D(OpenCvSharp.CvSubdiv2D,OpenCvSharp.CvRect)">
            <summary>
            CvSubdiv2D의 초기화
            </summary>
            <param name="subdiv"></param>
            <param name="rect"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.InitTreeNodeIterator``1(OpenCvSharp.CvTreeNodeIterator@,OpenCvSharp.CvTreeNode{``0},System.Int32)">
            <summary>
            트리 노드의 iterator를 초기화한다
            </summary>
            <param name="tree_iterator">초기화되는 트리의 iterator</param>
            <param name="first">선두 노드.여기로부터 주사를 개시한다.</param>
            <param name="max_level">트리 주사(탐색) 범위의 최대 레벨(first 노드가 제1 레벨이라고 가정한다).
            예를 들면, 1 은 first와 같은 레벨의 노드만이 처리되는 것을 의미한다, 또, 2는 first와 같은 레벨의 노드와 그 자식 노드가 처리된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.InitUndistortMap(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            사전에 비뚤어져 보정 맵(보정 화상의 모든 픽셀에 대해서, 각각 대응하는 일그러짐 화상의 픽셀 좌표치를 가지는 맵)을 계산한다.
            그 후, 맵은 입력 화상 및 출력 화상과 함께, 함수 cvRemap 에 건네줄 수 있다. 
            </summary>
            <param name="intrinsic_matrix">카메라 내부 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="distortion_coeffs">일그러짐 계수 벡터.4x1 또는 1x4 [k1, k2, p1, p2]. </param>
            <param name="mapx">보정 맵의 x좌표의 출력 배열</param>
            <param name="mapy">보정 맵의 y좌표의 출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.InitUndistortRectifyMap(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            스테레오 카메라의 일그러짐 보정＋평행화의 변환 맵 계산을 실시한다
            </summary>
            <param name="camera_matrix">카메라 행렬 A=[fx 0 cx; 0 fy cy; 0 0 1]. </param>
            <param name="dist_coeffs">일그러짐 계수의 벡터, 4x1, 1x4, 5x1, 1x5. </param>
            <param name="R">오브젝트 공간에 있어서의 평행화 변환(3x3 행렬). cvStereoRectify 로 계산된 값, R1 혹은 R2 가 건네받는다.이 파라미터가 null 의 경우, 단위행렬이 이용된다. </param>
            <param name="new_camera_matrix">새로운 카메라 행렬 A'=[fx' 0 cx'; 0 fy' cy'; 0 0 1]. </param>
            <param name="mapx">출력 배열.맵의 x-좌표.</param>
            <param name="mapy">출력 배열.맵의 y-좌표.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Inpaint(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,OpenCvSharp.InpaintMethod)">
            <summary>
            배열의 요소치가 다른 두 개의 배열 요소로 나타내지는 범위내에 위치하는지를 체크한다
            </summary>
            <param name="src">입력 화상(8비트, 1 채널 혹은 3 채널).</param>
            <param name="mask">복구 마스크.8비트, 1 채널 화상. 비0의 픽셀이, 복구의 필요가 있는 영역인 것을 나타낸다.</param>
            <param name="dst">출력 화상(입력 화상과 같은 사이즈, 같은 타입).</param>
            <param name="inpaintRange">복구되는 픽셀의 원 화상의 인접 영역을 나타내는 반경</param>
            <param name="flags">복구 방법</param>	
        </member>
        <member name="M:OpenCvSharp.Cv.InRange(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열의 요소치가 다른 두 개의 배열 요소로 나타내지는 범위내에 위치하는지를 체크한다
            </summary>
            <param name="src">입력 배열</param>
            <param name="lower">하한치(그 값을 포함한다)를 나타내는 배열</param>
            <param name="upper">상한치(그 값은 포함하지 않는다)를 나타내는 배열</param>
            <param name="dst">출력 배열(타입은 8u 또는 8 s)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.InRangeS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            배열의 요소치가 두 개의 스칼라의 사이에 위치하는지를 체크한다
            </summary>
            <param name="src">입력 배열</param>
            <param name="lower">하한치(그 값을 포함한다)</param>
            <param name="upper">상한치(그 값은 포함하지 않는다)</param>
            <param name="dst">출력 배열(타입은 8u 또는 8 s)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.InsertNodeIntoTree``1(OpenCvSharp.CvTreeNode{``0},OpenCvSharp.CvTreeNode{``0},OpenCvSharp.CvTreeNode{``0})">
            <summary>
            트리에 새로운 노드를 추가한다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">삽입되는 노드.</param>
            <param name="parent">트리내에 이미 존재하고 있는 부모노드.</param>
            <param name="frame">톱 레벨 노드. parent 와 frame이 같은 경우, node의 v_prev 필드에는 parent가 아니고 null이 세트 된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Integral(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            임의의 사각형 영역의 화소치의 총화를 계산한다
            </summary>
            <param name="image">입력 화상, W×H, 8비트 혹은 부동 소수점(32 f나 64f) 화상.</param>
            <param name="sum">인테그랄 이미지(integral image), W+1×H+1, 32비트 정수형 혹은 배정도 부동 소수점형(64 f). </param>
        </member>
        <member name="M:OpenCvSharp.Cv.Integral(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            임의의 사각형 영역의 화소치의 총화를 계산한다
            </summary>
            <param name="image">입력 화상, W×H, 8비트 혹은 부동 소수점(32 f나 64f) 화상.</param>
            <param name="sum">인테그랄 이미지(integral image), W+1×H+1, 32비트 정수형 혹은 배정도 부동 소수점형(64 f). </param>
            <param name="sqsum">옵션：각 픽셀치를 2승 한 인테그랄 이미지, W+1×H+1, 배정도 부동 소수점형(64 f). </param>
        </member>
        <member name="M:OpenCvSharp.Cv.Integral(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            임의의 사각형 영역의 화소치의 총화를 계산한다
            </summary>
            <param name="image">입력 화상, W×H, 8비트 혹은 부동 소수점(32 f나 64f) 화상.</param>
            <param name="sum">인테그랄 이미지(integral image), W+1×H+1, 32비트 정수형 혹은 배정도 부동 소수점형(64 f). </param>
            <param name="sqsum">옵션：각 피크셀치를 2승 한 인테그랄 이미지, W+1×H+1, 배정도 부동 소수점형(64 f). </param>
            <param name="tilted_sum">옵션：45도 회전시킨 입력 화상의 인테그랄이미지, W+1×H+1, sum와 같은 데이터 포맷.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Invert(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            역행열 또는 의사 역행열을 구한다.
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">출력 행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Invert(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.InvertMethod)">
            <summary>
            역행열 또는 의사 역행열을 구한다.
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">출력 행렬</param>
            <param name="method">역행열을 구하는 방법</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Inv(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            역행열 또는 의사 역행열을 구한다. Invert의 앨리어스(alias).
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">출력 행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Inv(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.InvertMethod)">
            <summary>
            역행열 또는 의사 역행열을 구한다. Invert의 앨리어스(alias).
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">출력 행렬</param>
            <param name="method">역행열을 구하는 방법</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.InvSqrt(System.Single)">
            <summary>
            인수의 평방근의 역수를 계산한다.
            이것은, 통상, 1./sqrt(value)를 계산하는 것보다 고속이다.
            인수가  0또는 부의 값 때, 결과는 구해지지 않는다. 또, 특별한 값(±Inf, NaN)는 취급할 수 없다.
            </summary>
            <param name="value">부동 소수점형의 입력치</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.IsGraphEdgeVisited(OpenCvSharp.CvGraphEdge)">
            <summary>
            
            </summary>
            <param name="edge">グラフ頂点への参照</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.IsGraphVertexVisited(OpenCvSharp.CvGraphVtx)">
            <summary>
            
            </summary>
            <param name="vtx">그래프 정점에의 참조</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.IsInf(System.Double)">
            <summary>
            인수가±무한대(IEEE754 standard 에 정의되고 있다)이면 true를 돌려주어, 그 외의 경우는 false를 돌려준다.
            </summary>
            <param name="value">부동 소수점형의 입력치</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.IsNaN(System.Double)">
            <summary>
            인수가 수치(IEEE754 standard 에 정의되고 있다)가 아니면 true를 돌려주어, 그 외의 경우는 false를 돌려준다.
            </summary>
            <param name="value">부동 소수점형의 입력치</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.KalmanCorrect(OpenCvSharp.CvKalman,OpenCvSharp.CvMat)">
            <summary>
            모델 상태를 수정한다. 수정된 상태를 kalman->state_post 에 보존해, 이것을 출력으로서 돌려준다
            </summary>
            <param name="kalman">갱신되는 칼만 필터 상태</param>
            <param name="measurement">관측 벡터를 포함한 CvMat</param>
            <returns>수정된 상태를 kalman->state_post 에 보존해, 이것을 출력으로서 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.KalmanUpdateByMeasurement(OpenCvSharp.CvKalman,OpenCvSharp.CvMat)">
            <summary>
            모델 상태를 수정한다. 수정된 상태를 kalman->state_post 에 보존해, 이것을 출력으로서 돌려준다.cvKalmanCorrect의 앨리어스(alias).
            </summary>
            <param name="kalman">갱신되는 칼만 필터 상태</param>
            <param name="measurement">관측 벡터를 포함한 CvMat</param>
            <returns>수정된 상태를 kalman->state_post 에 보존해, 이것을 출력으로서 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.KalmanPredict(OpenCvSharp.CvKalman)">
            <summary>
            다음의 모델 상태를 추정한다. 
            </summary>
            <param name="kalman">칼만 필터 상태</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.KalmanPredict(OpenCvSharp.CvKalman,OpenCvSharp.CvMat)">
            <summary>
            다음의 모델 상태를 추정한다.
            </summary>
            <param name="kalman">칼만 필터 상태</param>
            <param name="control">컨트롤 벡터 (uk).외부 컨트롤이 존재하지 않는 경우(control_params=0)에 한정해, null 이다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.KalmanUpdateByTime(OpenCvSharp.CvKalman)">
            <summary>
            다음의 모델 상태를 추정한다. cvKalmanPredict의 앨리어스(alias).
            </summary>
            <param name="kalman">칼만 필터 상태</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.KalmanUpdateByTime(OpenCvSharp.CvKalman,OpenCvSharp.CvMat)">
            <summary>
            다음의 모델 상태를 추정한다. cvKalmanPredict의 앨리어스(alias).
            </summary>
            <param name="kalman">칼만 필터 상태</param>
            <param name="control">컨트롤 벡터 (uk).외부 컨트롤이 존재하지 않는 경우(control_params=0)에 한정해, null 이다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.KMeans2(OpenCvSharp.CvArr,System.Int32,OpenCvSharp.CvArr,OpenCvSharp.CvTermCriteria)">
            <summary>
            벡터 집합을, 주어진 클러스터수로 분할한다.
            입력 샘플을 각 클러스터로 분류하기 위해서 cluster_count 개의 클러스터의 중심을 요구하는 k-means 법을 실장한다.
            출력 labels(i)는, 배열 samples 의 i번째의 행의 샘플이 속하는 클러스터의 인덱스를 나타낸다. 
            </summary>
            <param name="samples">부동 소수점형의 입력 샘플 행렬.1행 맞아 하나의 샘플.</param>
            <param name="cluster_count">집합을 분할하는 클러스터수</param>
            <param name="labels">출력의 정수 벡터.모든 샘플에 대해서, 각각이 어느 클러스터에 속하고 있을지가 보존되고 있다.</param>
            <param name="termcrit">최대 반복수와(또는), 정도(1 루프로의 각 클러스터 중심 위치 이동거리)의 지정</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Laplace(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            Sobel 연산자를 이용해 계산된 x와 y의 2차 미분을 가산하는 것으로, 입력 화상의 라플라시안(Laplacian)을 계산하는 [aperture_size=3]
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Laplace(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.ApertureSize)">
            <summary>
            Sobel 연산자를 이용해 계산된 x와 y의 2차 미분을 가산하는 것으로, 입력 화상의 라플라시안(Laplacian)을 계산한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="aperture_size">확장 Sobel 커넬의 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Line(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">선분의 1번째의 단 점x</param>
            <param name="pt1_y">선분의 1번째의 단 점y</param>
            <param name="pt2_x">선분의 2번째의 단 점x</param>
            <param name="pt2_y">선분의 2번째의 단 점y</param>
            <param name="color">선분의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Line(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">선분의 1번째의 단 점x</param>
            <param name="pt1_y">선분의 1번째의 단 점y</param>
            <param name="pt2_x">선분의 2번째의 단 점x</param>
            <param name="pt2_y">선분의 2번째의 단 점y</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Line(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">선분의 1번째의 단 점x</param>
            <param name="pt1_y">선분의 1번째의 단 점y</param>
            <param name="pt2_x">선분의 2번째의 단 점x</param>
            <param name="pt2_y">선분의 2번째의 단 점y</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Line(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">선분의 1번째의 단 점x</param>
            <param name="pt1_y">선분의 1번째의 단 점y</param>
            <param name="pt2_x">선분의 2번째의 단 점x</param>
            <param name="pt2_y">선분의 2번째의 단 점y</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Line(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Line(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Line(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Line(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawLine(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">선분의 1번째의 단 점x</param>
            <param name="pt1_y">선분의 1번째의 단 점y</param>
            <param name="pt2_x">선분의 2번째의 단 점x</param>
            <param name="pt2_y">선분의 2번째의 단 점y</param>
            <param name="color">선분의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawLine(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">선분의 1번째의 단 점x</param>
            <param name="pt1_y">선분의 1번째의 단 점y</param>
            <param name="pt2_x">선분의 2번째의 단 점x</param>
            <param name="pt2_y">선분의 2번째의 단 점y</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawLine(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">선분의 1번째의 단 점x</param>
            <param name="pt1_y">선분의 1번째의 단 점y</param>
            <param name="pt2_x">선분의 2번째의 단 점x</param>
            <param name="pt2_y">선분의 2번째의 단 점y</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawLine(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1_x">선분의 1번째의 단 점x</param>
            <param name="pt1_y">선분의 1번째의 단 점y</param>
            <param name="pt2_x">선분의 2번째의 단 점x</param>
            <param name="pt2_y">선분의 2번째의 단 점y</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            2점을 묶는 선분을 화상상에 그린다.
            </summary>
            <param name="img">화상</param>
            <param name="pt1">선분의 1번째의 단 점</param>
            <param name="pt2">선분의 2번째의 단 점</param>
            <param name="color">선분의 색</param>
            <param name="thickness">선분의 굵기</param>
            <param name="line_type">선분의 종류</param>
            <param name="shift">좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Load``1(System.String)">
            <summary>
            오브젝트를 파일로부터 읽어들인다
            </summary>
            <typeparam name="T">읽어들이는 오브젝트의 형태</typeparam>
            <param name="filename">파일명</param>
            <returns>읽어들인 오브젝트</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Load``1(System.String,OpenCvSharp.CvMemStorage)">
            <summary>
            오브젝트를 파일로부터 읽어들인다
            </summary>
            <typeparam name="T">읽어들이는 오브젝트의 형태</typeparam>
            <param name="filename">파일명</param>
            <param name="memstorage">CvSeq나 CvGraph  등의 동적 구조체를 위한 메모리스트레이지.행렬이나 화상에는 이용되지 않는다.</param>
            <returns>읽어들인 오브젝트</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Load``1(System.String,OpenCvSharp.CvMemStorage,System.String)">
            <summary>
            오브젝트를 파일로부터 읽어들인다
            </summary>
            <typeparam name="T">읽어들이는 오브젝트의 형태</typeparam>
            <param name="filename">파일명</param>
            <param name="memstorage">CvSeq나 CvGraph  등의 동적 구조체를 위한 메모리스트레이지.행렬이나 화상에는 이용되지 않는다.</param>
            <param name="name">오브젝트명(옵션).null의 경우, 파일 스토리지에 있는 최초의 톱 레벨 오브젝트가 읽힌다. </param>
            <returns>읽어들인 오브젝트</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Load``1(System.String,OpenCvSharp.CvMemStorage,System.String,System.String@)">
            <summary>
            오브젝트를 파일로부터 읽어들인다
            </summary>
            <typeparam name="T">읽어들이는 오브젝트의 형태</typeparam>
            <param name="filename">파일명</param>
            <param name="memstorage">CvSeq나 CvGraph등의 동적 구조체를 위한 메모리스트레이지.행렬이나 화상에는 이용되지 않는다.</param>
            <param name="name">오브젝트명(옵션).null의 경우, 파일 스토리지에 있는 최초의 톱 레벨 오브젝트가 읽힌다. </param>
            <param name="real_name">읽힌 오브젝트의 이름이 대입되는 출력 파라미터(옵션) name=null의 경우에 도움이 된다. </param>
            <returns>읽어들인 오브젝트</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.LoadHaarClassifierCascade(System.String,OpenCvSharp.CvSize)">
            <summary>
            파일 또는 OpenCV 내에 짜넣어진 만큼 분류기 데이타베이스로부터, 학습된 캐스케이드 분류기를 읽어들인다 
            </summary>
            <param name="directory">학습된 캐스케이드 분류기의 기술을 포함한 디렉토리명. </param>
            <param name="orig_window_size">오브젝트의 오리지날 사이즈(캐스케이드 분류기는 이 사이즈에 맞추어 학습된다). 이것은 캐스케이드 분류기내에 보존되지 않기 때문에, 따로 지정할 필요가 있는 일에 주의. </param>
            <returns></returns>
            <remarks>이 함수는 서포트되지 않는다. 현재는 오브젝트 검출 분류기는 디렉토리는 아니고 XML/YAML 파일에 보존된다. 캐스케이드를 파일로부터 읽어들이기 위해서는, 함수 cvLoad 를 이용한다.</remarks>
        </member>
        <member name="M:OpenCvSharp.Cv.LoadImage(System.String)">
            <summary>
            지정된 파일로부터 화상을 읽어들여 그 화상의 참조를 돌려준다
            </summary>
            <param name="filename">파일명</param>
            <returns>화상에의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.LoadImage(System.String,OpenCvSharp.LoadMode)">
            <summary>
            지정된 파일로부터 화상을 읽어들여 그 화상의 참조를 돌려준다
            </summary>
            <param name="filename">파일명</param>
            <param name="flags">읽어들이는 화상이 칼라 또는 그레이 스케일인지 비트 심도를 지정한다</param>
            <returns>화상의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.LoadImageM(System.String)">
            <summary>
            지정된 파일로부터 화상을 읽어들여 그 화상의 참조를 CvMat 형식에서 돌려준다
            </summary>
            <param name="filename">파일명</param>
            <returns>화상의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.LoadImageM(System.String,OpenCvSharp.LoadMode)">
            <summary>
            지정된 파일로부터 화상을 읽어들여 그 화상의 참조를 CvMat 형식에서 돌려준다
            </summary>
            <param name="filename">파일명</param>
            <param name="flags">읽어들이는 화상이 칼라 또는 그레이 스케일인지 비트 심도를 지정한다</param>
            <returns>화상의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Log(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            모든 배열 요소의 절대치의 자연대수를 계산한다
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열.배정도의 부동 소수점형(double), 또는 입력 배열과 같은 타입이 아니면 안된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.LogPolar(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f,System.Double)">
            <summary>
            화상을 대수 극좌표(Log-Polar) 공간에 재매핑 한다.
            이 함수는 인간의 망막을 모델화한 것이어, 오브젝트 트랙킹등을 위한 고속의 스케일링과
            회전에 불변인 템플릿 매칭에 이용할 수 있다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="center">출력 정도가 최대가 되는 변환의 중심 좌표</param>
            <param name="M">슬캘링 계수의 크기</param>
        </member>
        <member name="M:OpenCvSharp.Cv.LogPolar(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f,System.Double,OpenCvSharp.Interpolation)">
            <summary>
            화상을 대수 극좌표(Log-Polar) 공간에 재매핑 한다. 
            이 함수는 인간의 망막을 모델화한 것이어, 오브젝트 트랙킹등을 위한 고속의 스케일링과
            회전에 불변인 템플릿 매칭에 이용할 수 있다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="center">출력 정도가 최대가 되는 변환의 중심 좌표</param>
            <param name="M">스케일링 계수의 크기</param>
            <param name="flags">보간 방법</param>
        </member>
        <member name="M:OpenCvSharp.Cv.LUT(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다.
            </summary>
            <param name="src">입력 배열( 각 요소는 8비트 데이터).</param>
            <param name="dst">출력 배열(임의의 깊이, 입력 배열과 같은 채널수).</param>
            <param name="lut">요소수가 256인 룩업테이블(출력 배열과 같은 Depth가 아니면 안된다).멀티 채널의 입력/출력 배열의 경우, 테이블은 싱글 채널(이 경우 모든 채널 대하고, 같은 테이블을 사용한다)인가, 입력/출력 배열과 같은 채널수가 아니면 안된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.LUT(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Byte[])">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다.룩업테이블이 배열로 지정할 수 있는 간이 버젼.
            </summary>
            <param name="src">입력 배열( 각 요소는 8비트 데이터)</param>
            <param name="dst">출력 배열(임의의 데프스, 입력 배열과 같은 채널수)</param>
            <param name="lut">요소수가 256인 룩업테이블</param>
        </member>
        <member name="M:OpenCvSharp.Cv.LUT(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Int16[])">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다. 룩업테이블이 배열로 지정할 수 있는 간이 버젼.
            </summary>
            <param name="src">입력 배열( 각 요소는 8비트 데이터)</param>
            <param name="dst">출력 배열(임의의 Depth, 입력 배열과 같은 채널수)</param>
            <param name="lut">요소수가 256인 룩업테이블</param>
        </member>
        <member name="M:OpenCvSharp.Cv.LUT(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Int32[])">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다.룩업테이블이 배열로 지정할 수 있는 간이 버젼.
            </summary>
            <param name="src">입력 배열( 각 요소는 8비트 데이터)</param>
            <param name="dst">출력 배열(임의의 데프스, 입력 배열과 같은 채널수)</param>
            <param name="lut">요소수가 256인 룩업테이블</param>
        </member>
        <member name="M:OpenCvSharp.Cv.LUT(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Single[])">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다.룩업테이블이 배열로 지정할 수 있는 간이 버젼.
            </summary>
            <param name="src">입력 배열( 각 요소는 8비트 데이터)</param>
            <param name="dst">출력 배열(임의의 데프스, 입력 배열과 같은 채널수)</param>
            <param name="lut">요소수가 256인 룩업테이블</param>
        </member>
        <member name="M:OpenCvSharp.Cv.LUT(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double[])">
            <summary>
            출력 배열의 각 요소치를 룩업테이블을 이용해서 결정한다.룩업테이블이 배열로 지정할 수 있는 간이 버젼.
            </summary>
            <param name="src">입력 배열( 각 요소는 8비트 데이터)</param>
            <param name="dst">출력 배열(임의의 데프스, 입력 배열과 같은 채널수)</param>
            <param name="lut">요소수가 256인 룩업테이블</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Mahalanobis(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 벡터의 Mahalonobis 거리를 계산한다
            </summary>
            <param name="vec1">1번째의 1 차원 입력 벡터.</param>
            <param name="vec2">2번째의 1 차원 입력 벡터.</param>
            <param name="mat">역공변동 행렬.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Mahalonobis(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 벡터의 Mahalonobis 거리를 계산한다
            </summary>
            <param name="vec1">1번째의 1 차원 입력 벡터.</param>
            <param name="vec2">2번째의 1 차원 입력 벡터.</param>
            <param name="mat">역공변동 행렬.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.MakeHistHeaderForArray(System.Int32,System.Int32[],OpenCvSharp.CvHistogram,System.Single[])">
            <summary>
            Makes a histogram out of array
            </summary>
            <param name="dims">Number of histogram dimensions. </param>
            <param name="sizes">Array of histogram dimension sizes. </param>
            <param name="hist">The histogram header initialized by the function. </param>
            <param name="data">Array that will be used to store histogram bins. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.MakeHistHeaderForArray(System.Int32,System.Int32[],OpenCvSharp.CvHistogram,System.Single[],System.Single[][])">
            <summary>
            Makes a histogram out of array
            </summary>
            <param name="dims">Number of histogram dimensions. </param>
            <param name="sizes">Array of histogram dimension sizes. </param>
            <param name="hist">The histogram header initialized by the function. </param>
            <param name="data">Array that will be used to store histogram bins. </param>
            <param name="ranges">Histogram bin ranges, see CreateHist. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.MakeHistHeaderForArray(System.Int32,System.Int32[],OpenCvSharp.CvHistogram,System.Single[],System.Single[][],System.Boolean)">
            <summary>
            Makes a histogram out of array
            </summary>
            <param name="dims">Number of histogram dimensions. </param>
            <param name="sizes">Array of histogram dimension sizes. </param>
            <param name="hist">The histogram header initialized by the function. </param>
            <param name="data">Array that will be used to store histogram bins. </param>
            <param name="ranges">Histogram bin ranges, see CreateHist. </param>
            <param name="uniform">Uniformity flag, see CreateHist. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.MakeScanlines(System.Double[0:,0:],OpenCvSharp.CvSize,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32@)">
            <summary>
            기초 행렬로부터 두 개의 카메라간의 스캔 라인 좌표를 계산한다
            </summary>
            <param name="matrix">기초 행렬</param>
            <param name="img_size">화상의 사이즈</param>
            <param name="scanlines1">제1 화상의 계산된 스캔 라인이 보관되는 배열에의 포인터</param>
            <param name="scanlines2">제2 화상의 계산된 스캔 라인이 보관되는 배열에의 포인터</param>
            <param name="lengths1">제1 화상 스캔 라인의 길이(픽셀 단위)가 보관되는 배열에의 포인터</param>
            <param name="lengths2">제2 화상 스캔 라인의 길이(픽셀 단위)가 보관되는 배열에의 포인터</param>
            <param name="line_count">스캔 라인수를 보관하는 변수에의 포인터</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MakeSeqHeaderForArray``1(OpenCvSharp.SeqType,System.Int32,System.Int32,``0[],OpenCvSharp.CvSeq,OpenCvSharp.CvSeqBlock)">
            <summary>
            배열로부터 시퀸스를 생성한다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="seq_type">생성하는 시퀸스의 타입.</param>
            <param name="header_size">시퀸스 헤더의 사이즈.파라미터 seq는, 이 헤더와 같은 사이즈인가, 이것보다 큰 구조체에의 포인터를 가리키지 않으면 안 된다.</param>
            <param name="elem_size">시퀸스 요소의 사이즈.</param>
            <param name="elements">시퀸스를 구성하는 요소.</param>
            <param name="seq">시퀸스 헤더로서 이용되는 로컬 변수에의 포인터. </param>
            <param name="block">단일 시퀸스 블록의 헤더를 나타내는 로컬 변수에의 포인터. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Mat(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            행렬 헤더를 초기화한다(경량판)
            </summary>
            <param name="rows">화상의 폭과 높이</param>
            <param name="cols">화상의 컬러심도</param>
            <param name="type">채널수</param>
            <returns>초기화된 행렬 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Mat``1(System.Int32,System.Int32,OpenCvSharp.MatrixType,``0[])">
            <summary>
            행렬 헤더를 초기화한다(경량판)
            </summary>
            <param name="rows">화상의 폭과 높이</param>
            <param name="cols">화상의 컬러 심도</param>
            <param name="type">채널수</param>
            <param name="data">행렬의 헤더로 지정되는 데이터 배열. 길이가 rows*cols*channels의 1 차원 배열을 지정한다.</param>
            <returns>초기화된 행렬 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.MatchShapes(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.MatchShapesMethod)">
            <summary>
            두 개의 형상을 비교한다
            </summary>
            <param name="object1">1번째의 윤곽, 혹은 그레이 스케일 화상.</param>
            <param name="object2">2번째의 윤곽, 혹은 그레이 스케일 화상.</param>
            <param name="method">비교 방법.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.MatchShapes(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.MatchShapesMethod,System.Double)">
            <summary>
            두 개의 형상을 비교한다
            </summary>
            <param name="object1">1번째의 윤곽, 혹은 그레이 스케일 화상.</param>
            <param name="object2">2번째의 윤곽, 혹은 그레이 스케일 화상.</param>
            <param name="method">비교 방법.</param>
            <param name="parameter">각각의 비교 수법 특유의 파라미터(현재미사용).</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.MatchTemplate(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.MatchTemplateMethod)">
            <summary>
            템플릿과 겹친 화상 영역을 비교한다. 
            templ를, image 전체에 대해서 슬라이드 시켜, 그것과 사이즈 w×h 로 겹치는 영역을 지정된 방법으로 비교해, 그 결과를 result 에 보존한다. 
            </summary>
            <param name="image">파일명</param>
            <param name="templ"></param>
            <param name="result"></param>
            <param name="method"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.Max(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 각 요소에 대한 최대치를 요구한다. 
            dst(I) =max(src1(I), src2(I)) 
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MaxRect(OpenCvSharp.CvRect,OpenCvSharp.CvRect)">
            <summary>
            Finds bounding rectangle for two given rectangles
            </summary>
            <param name="rect1">First rectangle </param>
            <param name="rect2">Second rectangle </param>
        </member>
        <member name="M:OpenCvSharp.Cv.MaxS(OpenCvSharp.CvArr,System.Double,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라에 대한 최대치를 요구한다. 
            dst(I) =max(src(I), value) 
            </summary>
            <param name="src">입력 배열</param>
            <param name="value">스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MeanShift(OpenCvSharp.CvArr,OpenCvSharp.CvRect,OpenCvSharp.CvTermCriteria,OpenCvSharp.CvConnectedComp)">
            <summary>
            back projection에서 객체의 중심을 찾는다 
             </summary> 
             <param name="prob_image"> 개체 히스토그램 back projection </param> 
             <param name="window"> 서치윈도우 초기화 </param> 
             <param name="criteria"> 윈도우 서치를 종료하는 조건 </param> 
             <param name="comp"> 결과 구조체. 수렴하여 검색 윈도우의 좌표 (comp -> rect 필드), 그리고 윈도우의 모든 픽셀의 합계 (comp -> area 필드)가 포함된다. </param> 
             <returns> </returns> 
        </member>
        <member name="M:OpenCvSharp.Cv.MemStorageAlloc(OpenCvSharp.CvMemStorage,System.UInt32)">
            <summary>
            스토리지내에 메모리버퍼를 확보한다. 
            </summary>
            <param name="storage">스토리지의 참조</param>
            <param name="size">버퍼 사이즈</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.MemStorageAllocString(OpenCvSharp.CvMemStorage,System.String)">
            <summary>
            스토리지내에 텍스트 문자열을 확보한다
            </summary>
            <param name="storage">메모리스트레이지</param>
            <param name="str">문자열</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Merge(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            복수의 싱글 채널의 배열로부터 멀티 채널 배열을 구성한다.또는, 배열에 하나의 싱글 채널을 삽입한다.
            </summary>
            <param name="src0">입력 배열 1</param>
            <param name="src1">입력 배열 2</param>
            <param name="src2">입력 배열 3</param>
            <param name="src3">입력 배열 4</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CvtPlaneToPix(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            복수의 싱글 채널의 배열로부터 멀티 채널 배열을 구성한다.또는, 배열에 하나의 싱글 채널을 삽입한다
            </summary>
            <param name="src0">입력 배열 1</param>
            <param name="src1">입력 배열 2</param>
            <param name="src2">입력 배열 3</param>
            <param name="src3">입력 배열 4</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.mGet(OpenCvSharp.CvMat,System.Int32,System.Int32)">
            <summary>
            싱글 채널 부동 소수점형 행렬의 특정의 요소를 돌려준다. cvGetReal2D의 고속화판 함수이다.
            </summary>
            <param name="mat">입력 행렬</param>
            <param name="row">행의 0을 기준으로 한 인덱스</param>
            <param name="col">열의 0을 기준으로 한 인덱스</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Min(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 각 요소에 대한 최소치를 요구한다. 
            dst(I) =min(src1(I), src2(I)) 
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MinMaxLoc(OpenCvSharp.CvArr,System.Double@,System.Double@)">
            <summary>
            배열 혹은 부분 배열내의 최소치와 최대치를 구한다
            </summary>
            <param name="arr">입력 배열(싱글 채널 또는 COI가 세트 된 멀티 채널)</param>
            <param name="min_val">반환값의 최소치</param>
            <param name="max_val">반환값의 최대치</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MinMaxLoc(OpenCvSharp.CvArr,System.Double@,System.Double@,OpenCvSharp.CvPoint@,OpenCvSharp.CvPoint@)">
            <summary>
            배열 혹은 부분 배열내의 최소치와 최대치를 구한다
            </summary>
            <param name="arr">입력 배열(싱글 채널 또는 COI가 세트 된 멀티 채널)</param>
            <param name="min_val">반환값의 최소치</param>
            <param name="max_val">반환값의 최대치</param>
            <param name="min_loc">반환값의 최소치를 가지는 위치</param>
            <param name="max_loc">반환값의 최대치를 가지는 위치</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MinMaxLoc(OpenCvSharp.CvArr,System.Double@,System.Double@,OpenCvSharp.CvPoint@,OpenCvSharp.CvPoint@,OpenCvSharp.CvArr)">
            <summary>
            배열 혹은 부분 배열내의 최소치와 최대치를 구한다
            </summary>
            <param name="arr">입력 배열(싱글 채널 또는 COI가 세트 된 멀티 채널)</param>
            <param name="min_val">반환값의 최소치</param>
            <param name="max_val">반환값의 최대치</param>
            <param name="min_loc">반환값의 최소치를 가지는 위치</param>
            <param name="max_loc">반환값의 최대치를 가지는 위치</param>
            <param name="mask">부분 배열을 지정하기 위한 옵션의 마스크</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MinAreaRect2(OpenCvSharp.CvArr)">
            <summary>
            주어진 2 차원의 점렬을 둘러싸는 최소 사각형을 구한다
            </summary>
            <param name="points">점의 시퀸스 또는 배열</param>
            <returns>2 차원의 점렬에 대한 최소 사각형</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.MinAreaRect2(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage)">
            <summary>
            주어진 2 차원의 점렬을 둘러싸는 최소 사각형을 구한다
            </summary>
            <param name="points">점의 시퀸스 또는 배열</param>
            <param name="storage">일시적인 메모리스토레이지</param>
            <returns>2 차원의 점렬에 대한 최소 사각형</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.MinEnclosingCircle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f@,System.Single@)">
            <summary>
            주어진 2 차원의 점렬을 둘러싸는 최소 원을 구한다
            </summary>
            <param name="points">2 차원의 점의 시퀸스 또는 배열.</param>
            <param name="center">출력 파라미터.둘러싸는 원의 중심.</param>
            <param name="radius">출력 파라미터.둘러싸는 원의 반경.</param>
            <returns>결과의 원이 모든 입력점을 포함한 경우는 true를 돌려주어, 그 이외(즉 알고리즘의 실패)의 경우는 false를 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.MinS(OpenCvSharp.CvArr,System.Double,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라에 대한 최소치를 요구한다. 
            dst(I) =min(src(I), value) 
            </summary>
            <param name="src">입력 배열</param>
            <param name="value">스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MixChannels(OpenCvSharp.CvArr[],OpenCvSharp.CvArr[],System.Int32[])">
            <summary>
            입력 배열의 채널을 출력 배열의 지정된 채널에 카피한다
            </summary>
            <param name="src">입력 배열의 배열</param>
            <param name="dst">출력 배열의 배열</param>
            <param name="from_to">카피되는 평면(채널)의 인덱스의 페어 배열. from_to[k*2]는 입력 평면의 0을 기준으로 한 인덱스로, from_to[k*2+1]는 출력 평면의 인덱스.여기서, 입력 및 출력 배열 모두에게 대해서, 각 평면에의 연속적인 번호부를 한다.from_to[k*2]가 부 때, 대응하는 출력 평면은 0으로 묻힌다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Moments(OpenCvSharp.CvArr,OpenCvSharp.CvMoments@,System.Boolean)">
            <summary>
            다각형 또는 라스터 형상의 3차까지의 모멘트를 계산한다
            </summary>
            <param name="image">화상(1 채널, 혹은 COI를 가지는 3 채널 화상) 혹은 다각형 (CvSeq로 나타내지는 점군, 또는 점의 벡터).</param>
            <param name="moments">화상 모멘트를 나타내는 구조체에의 참조</param>
            <param name="isBinary">(화상의 경우만) 이 플래그가 true의 경우, 값 0의 피크셀은 0으로서 그 외의 피크셀치는 1으로서 다루어진다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.MorphologyEx(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.IplConvKernel,OpenCvSharp.MorphologyOperation)">
            <summary>
            고도의 모폴로지 변환을 실행하는 [iterations=1].
            기본의 연산으로서 수축과 팽창을(조합해) 이용하는 고도의 모폴로지 변환을 실시할 수 있다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="temp">템포리 화상(몇개의 처리로 필요하게 된다)</param>
            <param name="element">구조 요소</param>
            <param name="operation">모폴로지 연산의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MorphologyEx(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.IplConvKernel,OpenCvSharp.MorphologyOperation,System.Int32)">
            <summary>
            고도의 모폴로지 변환을 실행한다.
            기본의 연산으로서 수축과 팽창을(조합해) 이용하는 고도의 모폴로지 변환을 실시할 수 있다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="temp">템포리 화상(몇개의 처리로 필요하게 된다)</param>
            <param name="element">구조 요소</param>
            <param name="operation">모폴로지 연산의 종류</param>
            <param name="iterations">수축과 팽창의 반복 회수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MoveWindow(System.String,System.Int32,System.Int32)">
            <summary>
            윈도우의 위치를 변경한다
            </summary>
            <param name="name">위치를 변경하는 윈도우의 이름</param>
            <param name="x">좌상의 코너가 새로운 x 좌표</param>
            <param name="y">좌상의 코너가 새로운 y 좌표</param>
        </member>
        <member name="M:OpenCvSharp.Cv.mSet(OpenCvSharp.CvMat,System.Int32,System.Int32,System.Double)">
            <summary>
            싱글 채널의 부동 소수점형 행렬의 특정의 요소의 값을 변경한다. cvSetReal2D의 고속화판 함수이다.
            </summary>
            <param name="mat">입력 행렬</param>
            <param name="row">행의 0을 기준으로 한 인덱스</param>
            <param name="col">열의 0을 기준으로 한 인덱스</param>
            <param name="value">행렬의 요소가 새로운 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Mul(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소끼리를 곱셈한다 (scale=1).
            dst(I) = scale * src1(I) * src2(I)
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Mul(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            두 개의 배열의 요소끼리를 곱셈한다.
            dst(I) = scale * src1(I) * src2(I)
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="scale">임의의 스케일링 계수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.cvMulSpectrums(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.MulSpectrumsFlag)">
            <summary>
            두 개의 푸리에 스펙트럼의 요소마다의 곱셈을 실시한다
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">입력 배열과 같은 타입·사이즈의 출력 배열</param>
            <param name="flags">처리 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MultiplyAcc(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            누산기에 두 개의 입력 화상의 곱을 가산한다
            </summary>
            <param name="image1">1번째의 입력 화상, 1 또는 3 채널, 8 비트 혹은 32 비트 부동 소수점형.(멀티 채널 화상의 각 채널은, 개별적으로 처리된다).</param>
            <param name="image2">2번째의 입력 화상.1번째 화상과 같은 포맷.</param>
            <param name="acc">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MultiplyAcc(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            누산기에 두 개의 입력 화상의 곱을 가산한다
            </summary>
            <param name="image1">1번째의 입력 화상, 1 또는 3 채널, 8 비트 혹은 32 비트 부동 소수점형.(멀티 채널 화상의 각 채널은, 개별적으로 처리된다).</param>
            <param name="image2">2번째의 입력 화상.1번째 화상과 같은 포맷.</param>
            <param name="acc">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형.</param>
            <param name="mask">옵션의 처리 마스크.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MulTransposed(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Boolean)">
            <summary>
            행렬과 전치행렬의 곱셈을 실시한다
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">출력 행렬</param>
            <param name="order">전치 한 행렬을 걸치는 차례를 나타내는 플래그. false의 경우, dst=(src-delta)*(src-delta) ^T, true의 경우, dst=(src-delta) ^T*(src-delta)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MulTransposed(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Boolean,OpenCvSharp.CvArr)">
            <summary>
            행렬과 전치행렬의 곱셈을 실시한다
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">출력 행렬</param>
            <param name="order">전치 한 행렬을 걸치는 차례를 나타내는 플래그. false의 경우, dst=(src-delta)*(src-delta) ^T, true의 경우, dst=(src-delta) ^T*(src-delta)</param>
            <param name="delta">옵션 배열, 곱셈하기 전에 src로부터 끌린다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MulTransposed(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Boolean,OpenCvSharp.CvArr,System.Double)">
            <summary>
            행렬과 전치행렬의 곱셈을 실시한다
            </summary>
            <param name="src">입력 행렬</param>
            <param name="dst">출력 행렬</param>
            <param name="order">전치 한 행렬을 걸치는 차례를 나타내는 플래그. false의 경우, dst=(src-delta)*(src-delta) ^T, true의 경우, dst=(src-delta) ^T*(src-delta)</param>
            <param name="delta">옵션 배열, 곱셈하기 전에 src로부터 끌린다.</param>
            <param name="scale"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.NamedWindow(System.String)">
            <summary>
            화상과 트랙바의 플레이스홀더로서 이용되는 윈도우를 작성한다.
            이 윈도우는, 그 이름에 의해서 참조된다.
            </summary>
            <param name="name">윈도우의 식별로 이용되는 윈도우명으로, 윈도우의 타이틀 바에 표시된다.．</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.NamedWindow(System.String,OpenCvSharp.WindowMode)">
            <summary>
            화상과 트랙바의 플레이스홀더로서 이용되는 윈도우를 작성한다.
            이 윈도우는, 그 이름에 의해서 참조된다.
            </summary>
            <param name="name">윈도우의 식별로 이용되는 윈도우명으로, 윈도우의 타이틀 바에 표시된다</param>
            <param name="flags">윈도우의 플래그</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.NextGraphItem(OpenCvSharp.CvGraphScanner)">
            <summary>
            그래프 주사 처리를 1 스텝 혹은 몇가지 스텝 진행한다
            </summary>
            <param name="scanner">그래프 주사 상태. 이 함수로 갱신된다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.NextLinePoint(OpenCvSharp.CvLineIterator)">
            <summary>
            
            </summary>
            <param name="line_iterator"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.NextTreeNode(OpenCvSharp.CvTreeNodeIterator)">
            <summary>
            현재의 노드를 돌려주어, iterator를 다음의 노드에 이동시킨다.
            </summary>
            <param name="tree_iterator">초기화되는 트리의 iterator</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.NextTreeNode``1(OpenCvSharp.CvTreeNodeIterator)">
            <summary>
            현재의 노드를 돌려주어, iterator를 다음의 노드에 이동시킨다.
            </summary>
            <param name="tree_iterator">초기화되는 트리의 iterator</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.NextTreeNode``1(OpenCvSharp.CvTreeNodeIterator{``0})">
            <summary>
            현재의 노드를 돌려주어, iterator를 다음의 노드에 이동시킨다.
            </summary>
            <param name="tree_iterator">초기화되는 트리의 iterator</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Norm(OpenCvSharp.CvArr)">
            <summary>
            배열의 절대치 법칙(absolute array norm)을 계산한다
            </summary>
            <param name="arr1">1번째의 입력 화상</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Norm(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열의 절대치 법칙(absolute array norm), 절대치 차분 법칙(absolute difference norm), 상대 가격차분 법칙(relative difference norm)을 계산한다
            </summary>
            <param name="arr1">1번째의 입력 화상</param>
            <param name="arr2">2번째의 입력 화상.null 의 경우, arr1의 절대치 법칙이 계산되어 그렇지 않은 경우는, arr1-arr2 의 절대치 혹은 상대치 법칙이 계산된다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Norm(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.NormType)">
            <summary>
            배열의 절대치 법칙(absolute array norm), 절대치 차분 법칙(absolute difference norm), 상대 가격차분 법칙(relative difference norm)을 계산한다
            </summary>
            <param name="arr1">1번째의 입력 화상</param>
            <param name="arr2">2번째의 입력 화상.null 의 경우, arr1의 절대치 법칙이 계산되어 그렇지 않은 경우는, arr1-arr2 의 절대치 혹은 상대치 법칙이 계산된다. </param>
            <param name="norm_type">법칙의 타입 (레퍼런스 참조)</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Norm(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.NormType,OpenCvSharp.CvArr)">
            <summary>
            배열의 절대치 법칙(absolute array norm), 절대치 차분 법칙(absolute difference norm), 상대 가격차분 법칙(relative difference norm)을 계산한다
            </summary>
            <param name="arr1">1번째의 입력 화상</param>
            <param name="arr2">2번째의 입력 화상.null 의 경우, arr1의 절대치 법칙이 계산되어 그렇지 않은 경우는, arr1-arr2 의 절대치 혹은 상대치 법칙이 계산된다. </param>
            <param name="norm_type">법칙의 타입 (레퍼런스 참조)</param>
            <param name="mask">옵션의 처리 마스크</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Normalize(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            지정의 법칙이 되도록 혹은 값이 지정의 범위가 되도록 배열을 정규화한다
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열.인 플레이스 처리가 가능.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Normalize(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            지정의 법칙이 되도록 혹은 값이 지정의 범위가 되도록 배열을 정규화한다
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열.인 플레이스 처리가 가능.</param>
            <param name="a">출력 배열의 최소치 또는 최대치, 혹은 출력 배열의 법칙.</param>
            <param name="b">출력 배열의 최대치 또는 최소치.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Normalize(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double,OpenCvSharp.NormType)">
            <summary>
            지정의 법칙이 되도록 혹은 값이 지정의 범위가 되도록 배열을 정규화한다
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열.인 플레이스 처리가 가능.</param>
            <param name="a">출력 배열의 최소치 또는 최대치, 혹은 출력 배열의 법칙.</param>
            <param name="b">출력 배열의 최대치 또는 최소치.</param>
            <param name="norm_type">정규화의 타입. C, L1, L2, MinMax중 1개.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Normalize(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double,OpenCvSharp.NormType,OpenCvSharp.CvArr)">
            <summary>
            지정의 법칙이 되도록 혹은 값이 지정의 범위가 되도록 배열을 정규화한다
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열.인 플레이스 처리가 가능.</param>
            <param name="a">출력 배열의 최소치 또는 최대치, 혹은 출력 배열의 법칙.</param>
            <param name="b">출력 배열의 최대치 또는 최소치.</param>
            <param name="norm_type">정규화의 타입. C, L1, L2, MinMax중 1개.</param>
            <param name="mask">조작 마스크.특정의 배열 요소만을 정규화하기 위한 마스크.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.NormalizeHist(OpenCvSharp.CvHistogram,System.Double)">
            <summary>
            히스토그램의 정규화를 실시한다.
            빈의 값의 합계가 factor 에 동일해지도록 스케일링 하는 일로, 히스토그램의 빈을 정규화한다.
            </summary>
            <param name="hist">히스토그램에의 참조</param>
            <param name="factor">정규화 계수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Not(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            각 배열 요소의 비트 단위의 반전을 실시한다
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.OpenFileStorage(System.String,OpenCvSharp.CvMemStorage,OpenCvSharp.FileStorageMode)">
            <summary>
            데이터의 읽고 쓰기를 위한 파일을 연다.
            기입의 경우는, 새로운 파일이 작성되는지, 파일이 존재하는 경우에는 덧쓰기된다.
            또, 읽고 쓰기되는 파일의 종류는 확장자(extension)로 판별된다. XML의 경우는.xml, YAML의 경우는.yml 또는.yaml이다.
            </summary>
            <param name="filename">스토리지에 관련 지을 수 있었던 파일의 이름</param>
            <param name="memstorage">일시적인 데이터나, CvSeq나 CvGraph등의 동적 구조체의 보존에 사용되는 메모리스트레이지.null의 경우, 일시적인 메모리가 확보되어 사용된다.</param>
            <param name="flags">파일을 여는 방법 또는 작성하는 방법</param>
            <returns>열린 파일과 관련지을 수 있었던 CvFileStorage 클래스에의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Or(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 논리합(OR)을 계산한다. 
            dst(I) =src1(I) |src2(I)
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Or(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 논리합(OR)을 계산한다. 
            dst(I) =src1(I) |src2(I) [mask(I)!=0의 경우]
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다) </param>
        </member>
        <member name="M:OpenCvSharp.Cv.OrS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 논리합(OR)을 계산한다.
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) |value
            </summary>
            <param name="src1">입력 배열</param>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.OrS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 논리합(OR)을 계산한다. 
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) |value [mask(I)!=0의 경우]
            </summary>
            <param name="src1">입력 배열</param>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크. 8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PerspectiveTransform(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            벡터의 투시 투영 변환을 실시한다
            </summary>
            <param name="src">3 채널의 부동 소수점형 입력 배열</param>
            <param name="dst">3 채널의 부동 소수점형 출력 배열</param>
            <param name="mat">3×3 또는 4×4 의 변환 행렬</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Point(System.Int32,System.Int32)">
            <summary>
            정수 좌표계에 의한 2 차원의 점을 생성한다 (cvPoint 해당)
            </summary>
            <param name="x">x 좌표. 일반적으로 0이 원점</param>
            <param name="y">y 좌표. 일반적으로 0이 원점</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Point2D32f(System.Single,System.Single)">
            <summary>
            부동 소수점형(단정도) 좌표계에 의한 2 차원의 점을 생성한다 (cvPoint2D32f 해당)
            </summary>
            <param name="x">x 좌표. 일반적으로 0이 원점</param>
            <param name="y">y 좌표. 일반적으로 0이 원점</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Point2D64f(System.Double,System.Double)">
            <summary>
            부동소수점형(배정도) 좌표계에 의한 2 차원의 점을 생성한다 (cvPoint2D32f 해당)
            </summary>
            <param name="x">x 좌표. 일반적으로 0이 원점</param>
            <param name="y">y 좌표. 일반적으로 0이 원점</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Point3D32f(System.Single,System.Single,System.Single)">
            <summary>
            부동 소수점형(단정도) 좌표계에 의한 3 차원의 점을 생성한다 (cvPoint3D32f 해당)
            </summary>
            <param name="x">x 좌표. 일반적으로 0이 원점</param>
            <param name="y">y 좌표. 일반적으로 0이 원점</param>
            <param name="z">z 좌표. 일반적으로 0이 원점</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Point3D64f(System.Double,System.Double,System.Double)">
            <summary>
            부동 소수점형(배정도) 좌표계에 의한 3 차원의 점을 생성한다 (cvPoint3D64f 해당)
            </summary>
            <param name="x">x 좌표. 보통은 0이 원점</param>
            <param name="y">y 좌표. 보통은 0이 원점</param>
            <param name="z">z 좌표. 보통은 0이 원점</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.PointPolygonTest(OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f,System.Boolean)">
            <summary>
            점과 윤곽의 관계를 조사한다
            </summary>
            <param name="contour">입력 윤곽</param>
            <param name="pt">입력 윤곽에 대해서 조사하는 점</param>
            <param name="measure_dist">비0의 경우, 이 함수는 준 점에 가장 가까운 윤곽까지의 거리를 요구한다.</param>
            <returns>점이 윤곽의 안쪽에 있는지, 외측에 있는지, 윤곽상을 타고 있는(혹은, 정점과 일치하고 있다)인지를 판별해, 각각의 경우에 따라 정인가 부나 0을 돌려준다.
            measure_dist=0의 경우, 반환값은 각각+1,-1, 0이다. measure_dist≠0의 경우, 점과 최근옆윤곽까지의 부호 첨부의 거리를 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.PointSeqFromMat(OpenCvSharp.SeqType,OpenCvSharp.CvArr,OpenCvSharp.CvContour@,OpenCvSharp.CvSeqBlock@)">
            <summary>
            /// 점의 벡터를 이용하고, 점의 시퀸스 헤더를 초기화한다
            </summary>
            <param name="seq_kind">점의 시퀸스의 종류</param>
            <param name="mat">입력 행렬.점의 연속적인 1 차원 벡터로, CV_32 SC2형이나 CV_32 FC2형이 아니면 안된다.</param>
            <param name="contour_header">윤곽 헤더.이 함수로 초기화된다.</param>
            <param name="block">시퀸스 블록 헤더. 이 함수로 초기화된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PolarToCart(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            극좌표 형식에서 표현된 2 차원 벡터의 데카르트 좌표를 계산한다
            </summary>
            <param name="magnitude">크기의 배열.null의 경우, 크기는 모두 1으로 가정된다.</param>
            <param name="angle">각도의 배열.단위는 라디안, 또는 번이다.</param>
            <param name="x">x좌표의 출력 배열로, 필요하지 않으면 null가 세트 된다.</param>
            <param name="y">y좌표의 출력 배열로, 필요하지 않으면 null가 세트 된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PolarToCart(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.AngleUnit)">
            <summary>
            극좌표 형식에서 표현된 2 차원 벡터의 데카르트 좌표를 계산한다
            </summary>
            <param name="magnitude">크기의 배열.null의 경우, 크기는 모두 1으로 가정된다.</param>
            <param name="angle">각도의 배열.단위는 라디안, 또는 번이다.</param>
            <param name="x">x좌표의 출력 배열로, 필요하지 않으면 null가 세트 된다.</param>
            <param name="y">y좌표의 출력 배열로, 필요하지 않으면 null가 세트 된다.</param>
            <param name="unit">각도를 나타내기 위해서, 라디안(디폴트치) 또는 각도의 어느 쪽을 이용하는지를 나타낸다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PolyLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor)">
            <summary>
            polyline(테두리만있는 다각형)를 그린다
            </summary>
            <param name="img">polyline이 그려지는 화상</param>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다. 닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 묘화 한다. </param>
            <param name="color">선의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PolyLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            polyline(테두리만있는 다각형)를 그린다
            </summary>
            <param name="img">polyline이 그려지는 화상</param>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 묘화 한다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PolyLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            polyline(테두리만있는 다각형)를 그린다
            </summary>
            <param name="img">polyline이 그려지는 화상</param>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 묘화 한다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PolyLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            polyline(테두리만있는 다각형)를 그린다
            </summary>
            <param name="img">polyline이 그려지는 화상</param>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 묘화 한다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">정점 좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawPolyLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor)">
            <summary>
            polyline(테두리만있는 다각형)를 그린다
            </summary>
            <param name="img">polyline이 그려지는 화상</param>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다. 닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 묘화 한다. </param>
            <param name="color">선의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawPolyLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            polyline(테두리만있는 다각형)를 그린다
            </summary>
            <param name="img">polyline이 그려지는 화상</param>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 묘화 한다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawPolyLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            polyline(테두리만있는 다각형)를 그린다
            </summary>
            <param name="img">polyline이 그려지는 화상</param>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 묘화 한다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawPolyLine(OpenCvSharp.CvArr,OpenCvSharp.CvPoint[][],System.Boolean,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            polyline(테두리만있는 다각형)를 그린다
            </summary>
            <param name="img">polyline이 그려지는 화상</param>
            <param name="pts">polyline의 배열의 배열</param>
            <param name="is_closed">polyline를 닫을지를 지정한다.닫는 경우, 각각의 영역의 마지막 정점과 최초의 정점을 묶는 선분을 묘화 한다. </param>
            <param name="color">선의 색</param>
            <param name="thickness">선의 굵기</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">정점 좌표의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.POSIT(OpenCvSharp.CvPOSITObject,OpenCvSharp.CvPoint2D32f[],System.Double,OpenCvSharp.CvTermCriteria,System.Single[0:,0:]@,System.Single[]@)">
            <summary>
            POSIT 알고리즘의 실장
            </summary>
            <param name="posit_object">오브젝트 구조체</param>
            <param name="image_points">오브젝트상의 점을 이차원 화상 평면상에 투영 해 얻을 수 있는 점집합</param>
            <param name="focal_length">사용하는 카메라의 촛점거리</param>
            <param name="criteria">반복 POSIT 알고리즘의 종료 조건</param>
            <param name="rotation_matrix">회전 행렬</param>
            <param name="translation_vector">병진 벡터</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Pow(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            모든 배열 요소를 누승한다.
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열.입력과 같은 타입이 아니면 안된다.</param>
            <param name="power">누승의 지수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PreCornerDetect(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            코너 검출을 위해서, 화상 블록의 최소 고유치를 계산한다. 
            모든 픽셀에 대해서, 인접 블록에 있어서의 도함수의 공변동 행렬의 최소 고유치만을 요구하는 함수이다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="corners">코너의 후보를 보존하는 화상</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PreCornerDetect(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.ApertureSize)">
            <summary>
            코너 검출을 위해서, 화상 블록의 최소 고유치를 계산한다. 
            모든 픽셀에 대해서, 인접 블록에 있어서의 도함수의 공변동 행렬의 최소 고유치만을 요구하는 함수이다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="corners">코너의 후보를 보존하는 화상</param>
            <param name="aperture_size">Sobel 연산자의 아파체사이즈(cvSobel 참조)．</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PrevTreeNode(OpenCvSharp.CvTreeNodeIterator)">
            <summary>
            현재의 노드를 돌려주어, iterator를 전의 노드에 이동시킨다.
            </summary>
            <param name="tree_iterator">초기화되는 트리의 iterator</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.PrevTreeNode``1(OpenCvSharp.CvTreeNodeIterator)">
            <summary>
            현재의 노드를 돌려주어, iterator를 다음의 노드에 이동시킨다.
            </summary>
            <param name="tree_iterator">초기화되는 트리의 iterator</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.PrevTreeNode``1(OpenCvSharp.CvTreeNodeIterator{``0})">
            <summary>
            현재의 노드를 돌려주어, iterator를 다음의 노드에 이동시킨다.
            </summary>
            <param name="tree_iterator">초기화되는 트리의 iterator</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ProjectPCA(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            지정된 부분 공간에 벡터를 투영 한다
            </summary>
            <param name="data">입력 데이터.각각의 벡터는 단일행이나 단일열이다.</param>
            <param name="avg">평균 벡터. 단일행 벡터의 경우, 그것은 data의 행으로서 입력 벡터가 보존되고 있는 것을 의미한다. 그렇지 않은 경우는, 단일 열이며, 그 때의 벡터는 data의 열로서 보존되고 있다.</param>
            <param name="eigenvects">고유 벡터(주성분).하나의 행이 하나의 벡터를 의미한다.</param>
            <param name="result">출력인 분해 계수의 행렬. 행의 수는 벡터의 수와 같지 않으면 안 된다.열의 수는 eigenvectors의 열의 수보다 작은가 같지 않으면 안 된다.열의 수가 적은 경우, 입력 벡터는, 제cols(result) 주성분까지를 기저로 하는 부분 공간에 투영 된다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ProjectPoints2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            차원 공간안의 점을 화상 평면상에 투영 했을 때의 좌표를, 내부 파라미터와 외부 파라미터를 이용해 계산한다.
            옵션으로서 이 함수는 화상중의 투영점의 편미분 계수 행렬인 야코비안을 요구한다.
            </summary>
            <remarks>
            내부 파라미터 및/또는 외부 파라미터를 특별한 값으로 설정하면,
            이 함수를 외부 변환만, 혹은 내부 변환만(즉, 희소한 점집합의 일그러짐을 고려한 것으로 변환한다)을 계산하기 위해서 이용할 수 있다.
            </remarks>
            <param name="object_points">오브젝트의 점의 배열로 그 크기는 3 xN 또는 Nx3이다.N 는 화상내의 점의 개수</param>
            <param name="rotation_vector">회전 벡터.1 x3 또는 3x1</param>
            <param name="translation_vector">병진 벡터.1 x3 또는 3x1</param>
            <param name="intrinsic_matrix">카메라 matrices(A) [fx 0 cx; 0 fy cy; 0 0 1]</param>
            <param name="distortion_coeffs">일그러짐 계수.4 x1 또는 1x4 [k1, k2, p1, p2]. NULL의 경우, 모든 일그러짐 계수를 0으로 한다</param>
            <param name="image_points">화상 평면상의 점의 출력 배열로, 그 크기는 2 xN 또는 Nx2이다.여기서 N는 뷰상의 점의 수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ProjectPoints2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            차원 공간안의 점을 화상 평면상에 투영 했을 때의 좌표를, 내부 파라미터와 외부 파라미터를 이용해 계산한다.
            옵션으로서 이 함수는 화상중의 투영점의 편미분 계수 행렬인 야코비안을 요구한다.
            </summary>
            <remarks>
            내부 파라미터 및/또는 외부 파라미터를 특별한 값으로 설정하면,
            이 함수를 외부 변환만, 혹은 내부 변환만(즉, 희소한 점집합의 일그러짐을 고려한 것으로 변환한다)을 계산하기 위해서 이용할 수 있다.
            </remarks>
            <param name="object_points">오브젝트의 점의 배열로 그 크기는 3 xN 또는 Nx3이다.N 는 화상내의 점의 개수</param>
            <param name="rotation_vector">회전 벡터.1 x3 또는 3x1</param>
            <param name="translation_vector">병진 벡터.1 x3 또는 3x1</param>
            <param name="intrinsic_matrix">카메라 matrices(A) [fx 0 cx; 0 fy cy; 0 0 1]</param>
            <param name="distortion_coeffs">일그러짐 계수.4 x1 또는 1x4 [k1, k2, p1, p2]. NULL의 경우, 모든 일그러짐 계수를 0으로 한다</param>
            <param name="image_points">화상 평면상의 점의 출력 배열로, 그 크기는 2 xN 또는 Nx2이다.여기서 N는 뷰상의 점의 수</param>
            <param name="dpdrot">옵션：화상 평면상의 점의 회전 벡터의 각 요소에 관한 미분 계수를 나타내는 2 Nx3 행렬</param>
            <param name="dpdt">옵션：화상 평면상의 점의 병진 벡터의 각 요소에 관한 미분 계수를 나타내는 2 Nx3 행렬</param>
            <param name="dpdf">옵션：화상 평면상의 점의 fx 와 fy에 관한 미분 계수를 나타내는 2 Nx2 행렬</param>
            <param name="dpdc">옵션：화상 평면상의 점의 cx 와 cy에 관한 미분 계수를 나타내는 2 Nx2 행렬</param>
            <param name="dpddist">옵션：화상 평면상의 점의 일그러짐 계수에 관한 미분 계수를 나타내는 2 Nx4 행렬</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ProjectPoints2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,System.Double)">
            <summary>
            차원 공간안의 점을 화상 평면상에 투영 했을 때의 좌표를, 내부 파라미터와 외부 파라미터를 이용해 계산한다.
            옵션으로서 이 함수는 화상중의 투영점의 편미분 계수 행렬인 야코비안을 요구한다.
            </summary>
            <remarks>
            내부 파라미터 및/또는 외부 파라미터를 특별한 값으로 설정하면,
            이 함수를 외부 변환만, 혹은 내부 변환만(즉, 희소한 점집합의 일그러짐을 고려한 것으로 변환한다)을 계산하기 위해서 이용할 수 있다.
            </remarks>
            <param name="object_points">오브젝트의 점의 배열로 그 크기는 3 xN 또는 Nx3이다.N 는 화상내의 점의 개수</param>
            <param name="rotation_vector">회전 벡터.1 x3 또는 3x1</param>
            <param name="translation_vector">병진 벡터.1 x3 또는 3x1</param>
            <param name="intrinsic_matrix">카메라 matrices(A) [fx 0 cx; 0 fy cy; 0 0 1]</param>
            <param name="distortion_coeffs">일그러짐 계수.4 x1 또는 1x4 [k1, k2, p1, p2]. NULL의 경우, 모든 일그러짐 계수를 0으로 한다</param>
            <param name="image_points">화상 평면상의 점의 출력 배열로, 그 크기는 2 xN 또는 Nx2이다.여기서 N는 뷰상의 점의 수</param>
            <param name="dpdrot">옵션：화상 평면상의 점의 회전 벡터의 각 요소에 관한 미분 계수를 나타내는 2 Nx3 행렬</param>
            <param name="dpdt">옵션：화상 평면상의 점의 병진 벡터의 각 요소에 관한 미분 계수를 나타내는 2 Nx3 행렬</param>
            <param name="dpdf">옵션：화상 평면상의 점의 fx 와 fy에 관한 미분 계수를 나타내는 2 Nx2 행렬</param>
            <param name="dpdc">옵션：화상 평면상의 점의 cx 와 cy에 관한 미분 계수를 나타내는 2 Nx2 행렬</param>
            <param name="dpddist">옵션：화상 평면상의 점의 일그러짐 계수에 관한 미분 계수를 나타내는 2 Nx4 행렬</param>
            <param name="aspect_ratio"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.Ptr1D(OpenCvSharp.CvArr,System.Int32)">
            <summary>
            특정의 배열 요소의 포인터를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Ptr1D(OpenCvSharp.CvArr,System.Int32,OpenCvSharp.MatrixType@)">
            <summary>
            특정의 배열 요소의 포인터를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="type">행렬 요소의 타입</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Ptr2D(OpenCvSharp.CvArr,System.Int32,System.Int32)">
            <summary>
            특정의 배열 요소의 포인터를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Ptr2D(OpenCvSharp.CvArr,System.Int32,System.Int32,OpenCvSharp.MatrixType@)">
            <summary>
            특정의 배열 요소의 포인터를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="type">행렬 요소의 타입</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Ptr3D(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32)">
            <summary>
            특정의 배열 요소의 포인터를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Ptr3D(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,OpenCvSharp.MatrixType@)">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <param name="type">행렬 요소의 타입</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.PtrND(OpenCvSharp.CvArr,System.Int32[])">
            <summary>
            특정의 배열 요소의 포인터를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.PtrND(OpenCvSharp.CvArr,System.Int32[],OpenCvSharp.MatrixType@)">
            <summary>
            특정의 배열 요소의 포인터를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx">요소 인덱스의 배열</param>
            <param name="type">행렬 요소의 타입</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.PtrND(OpenCvSharp.CvArr,System.Int32[],OpenCvSharp.MatrixType@,System.Boolean)">
            <summary>
            특정의 배열 요소에의 포인터를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx">요소 인덱스의 배열</param>
            <param name="type">행렬 요소의 타입</param>
            <param name="create_node">희소 행렬에 대한 옵션의 입력 파라미터. true의 경우, 지정된 요소가 존재하지 않을 때는 요소를 생성한다.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.PtrND(OpenCvSharp.CvArr,System.Int32[],OpenCvSharp.MatrixType@,System.Boolean,System.Nullable{System.UInt32})">
            <summary>
            특정의 배열 요소의 포인터를 돌려준다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx">요소 인덱스의 배열</param>
            <param name="type">행렬 요소의 타입</param>
            <param name="create_node">희소 행렬에 대한 옵션의 입력 파라미터. true의 경우, 지정된 요소가 존재하지 않을 때는 요소를 생성한다.</param>
            <param name="precalc_hashval">희소 행렬에 대한 옵션의 입력 파라미터 null이 아닐 때 이 함수는 노드의 해시값을 재계산하지 않고 지정된 장소로부터 가져 온다. 이것에 의해, 페어 와이즈 조작의 속도가 향상한다.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.PutText(OpenCvSharp.CvArr,System.String,OpenCvSharp.CvPoint,OpenCvSharp.CvFont,OpenCvSharp.CvColor)">
            <summary>
            문자열을 출력한다
            </summary>
            <param name="img">입력 화상</param>
            <param name="text">출력할 문자열</param>
            <param name="org">최초의 문자의 좌하의 좌표</param>
            <param name="font">폰트 구조체</param>
            <param name="color">문자의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PyrDown(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            화상의 다운 샘플링을 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상.입력 화상의 것1/2한 폭과 높이.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PyrDown(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvFilter)">
            <summary>
            화상의 다운 샘플링을 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상.입력 화상의 것1/2한 폭과 높이.</param>
            <param name="filter">간직해에 사용하는 필터.현재는 CV_GAUSSIAN_5x5 마셔 서포트.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PyrMeanShiftFiltering(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            평균치 시프트법에 따르는 화상의 부분화 알고리즘의 필터링 부분을 실장한다.
            </summary>
            <param name="src">입력 화상.8비트, 3 채널</param>
            <param name="dst">출력 화상.입력 화상과 같은 포맷, 같은 사이즈</param>
            <param name="sp">공간 윈도우의 반경</param>
            <param name="sr">색공간(color space) 윈도우의 반경</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PyrMeanShiftFiltering(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double,System.Int32)">
            <summary>
            평균치 시프트법에 따르는 화상의 부분화 알고리즘의 필터링 부분을 실장한다.
            </summary>
            <param name="src">입력 화상.8비트, 3 채널</param>
            <param name="dst">출력 화상.입력 화상과 같은 포맷, 같은 사이즈</param>
            <param name="sp">공간 윈도우의 반경</param>
            <param name="sr">색공간(color space) 윈도우의 반경</param>
            <param name="max_level">부분화를 위한 피라밋드의 최대 레벨</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PyrMeanShiftFiltering(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double,System.Int32,OpenCvSharp.CvTermCriteria)">
            <summary>
            평균치 시프트법에 따르는 화상의 부분화 알고리즘의 필터링 부분을 실장한다.
            </summary>
            <param name="src">입력 화상.8비트, 3 채널</param>
            <param name="dst">출력 화상.입력 화상과 같은 포맷, 같은 사이즈</param>
            <param name="sp">공간 윈도우의 반경</param>
            <param name="sr">색공간(color space) 윈도우의 반경</param>
            <param name="max_level">부분화를 위한 피라밋드의 최대 레벨</param>
            <param name="termcrit">종료 조건.평균치 시프트를 언제까지 반복할까</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PyrSegmentation(OpenCvSharp.IplImage,OpenCvSharp.IplImage,System.Int32,System.Double,System.Double)">
            <summary>
            화상 피라미드에 의한 화상의 부분화를 실장한다. 피라미드는, level까지 작성한다.(out 인수의 comp가 필요 없을 때 버젼)
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="level">부분화를 위한 피라밋드의 최대 레벨</param>
            <param name="threshold1">링크 구축을 위한 오차 쓰레스홀드</param>
            <param name="threshold2">세그먼트(segment) 클러스터링을 위한 오차 쓰레스홀드</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PyrSegmentation(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq@,System.Int32,System.Double,System.Double)">
            <summary>
            화상 피라미드에 의한 화상의 부분화를 실장한다. 피라미드는, level까지 작성한다. 
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="storage">결과적으로 얻을 수 있는 연결 성분의 순서를 보존하기 위한 영역</param>
            <param name="comp">부분화된 성분의 출력 순서에의 포인터</param>
            <param name="level">부분화를 위한 피라밋드의 최대 레벨</param>
            <param name="threshold1">링크 구축을 위한 오차 쓰레스홀드</param>
            <param name="threshold2">세그먼트(segment) 클러스터링을 위한 오차 쓰레스홀드</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PyrUp(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            화상의 업 샘플링을 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상.입력 화상의 것1/2한 폭과 높이.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.PyrUp(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvFilter)">
            <summary>
            화상의 업 샘플링을 실시한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상.입력 화상의 것1/2한 폭과 높이.</param>
            <param name="filter">간직해에 사용하는 필터.현재는 CV_GAUSSIAN_5x5 마셔 서포트.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.QueryFrame(OpenCvSharp.CvCapture)">
            <summary>
            카메라나 비디오 파일로부터 하나의 프레임을 꺼내, 그것을 전개해 돌려준다.
            이 함수는, 단순하게 cvGrabFrame 와 cvRetrieveFrame 를 정리해 호출하고 있는 것만으로 있다.
            돌려주어진 화상은, 유저가 해방하거나 변경하거나 해서는 안된다.
            </summary>
            <param name="capture">비디오 캡쳐 클래스</param>
            <returns>1 프레임의 화상 (GC금지 플래그가 서있다). 캡쳐 할 수 없었던 경우는 null.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.QueryHistValue_1D(OpenCvSharp.CvHistogram,System.Int32)">
            <summary>
            1 차원 히스토그램의 지정된 빈의 값을 돌려준다. 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="hist">히스토그램</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.QueryHistValue_2D(OpenCvSharp.CvHistogram,System.Int32,System.Int32)">
            <summary>
            2 차원 히스토그램의 지정된 빈의 값을 돌려준다. 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="hist">히스토그램</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.QueryHistValue_3D(OpenCvSharp.CvHistogram,System.Int32,System.Int32,System.Int32)">
            <summary>
            3차원 히스토그램의 지정된 빈의 값을 돌려준다. 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="hist">히스토그램</param>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.QueryHistValue_nD(OpenCvSharp.CvHistogram,System.Int32[])">
            <summary>
            n차원 히스토그램의 지정된 빈의 값을 돌려준다. 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="hist">히스토그램</param>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.Cv._2DRotationMatrix(OpenCvSharp.CvPoint2D32f,System.Double,System.Double)">
            <summary>
            2 차원 회전의 아핀 행렬을 계산한다 (2 x 3 의 CV_32 FC1형). 인수로서 out를 취하는 overload의 간략판.
            아마 out로 나오는 행렬과 함수의 돌려진 값이 같아서, out 인수의 분을 생략한 것이다.
            </summary>
            <param name="center">입력 화상내의 회전 중심 </param>
            <param name="angle">도(degree) 단위의 회전 각도.정의 값은 반시계방향의 회전을 의미한다(좌표 원점은 좌상에 있으면 가정).</param>
            <param name="scale">등방성 스케일링 계수(x,y방향과도 같은 계수 scale 를 사용한다) </param>
            <returns>2 x3의 2 차원 회전의 아핀 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv._2DRotationMatrix(OpenCvSharp.CvPoint2D32f,System.Double,System.Double,OpenCvSharp.CvMat@)">
            <summary>
            2 차원 회전의 아핀 행렬을 계산한다 (2 x 3 의 CV_32 FC1형). 인수로서 out를 취하는 overload의 간략판.
            아마 out로 나오는 행렬과 함수의 돌려진 값이 같아서, out 인수의 분을 생략한 것이다.
            </summary>
            <param name="center">입력 화상내의 회전 중심 </param>
            <param name="angle">도(degree) 단위의 회전 각도.정의 값은 반시계방향의 회전을 의미한다(좌표 원점은 좌상에 있으면 가정).</param>
            <param name="scale">등방성 스케일링 계수(x,y방향과도 같은 계수 scale 를 사용한다) </param>
            <param name="map_matrix">출력되는 2 x3의 행렬</param>
            <returns>2 x3의 2 차원 회전의 아핀 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.AbsDiff(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 차이의 절대치를 계산한다.
            dst(I) = abs(src1(I) - src2(I)).
            </summary>
            <param name="src1">1번째의 입력 화상</param>
            <param name="src2">2번째의 입력 화상</param>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Abs(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열의 요소의 절대치를 계산한다. 
            dst(I) = abs(src(I)).
            모든 배열은 같은 타입 같은 사이즈(또는 같은 ROI 사이즈)이여야 한다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
        </member>
        <member name="M:OpenCvSharp.Cv.AbsDiffS(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvScalar)">
            <summary>
            배열의 요소와 정수와의 차이의 절대치를 계산한다. 
            dst(I) = abs(src(I) - value).
            </summary>
            <param name="src">1번째의 입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="value">스칼라</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Acc(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            누산기에 프레임을 가산한다
            </summary>
            <param name="image">입력 화상.1 또는 3 채널, 8 비트 혹은 32 비트 부동 소수점형.</param>
            <param name="sum">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Acc(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            누산기에 프레임을 가산한다
            </summary>
            <param name="image">입력 화상.1 또는 3 채널, 8 비트 혹은 32 비트 부동 소수점형.</param>
            <param name="sum">입력 화상과 같은 채널수의 누산기, 32 비트 혹은 64 비트 부동 소수점형.</param>
            <param name="mask">옵션의 처리 마스크.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.AdaptiveThreshold(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            AdaptiveThreshold 실시해, 그레이 스케일 화상을 2진 화상으로 변환한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="max_value">threshold_type 가 Binary 혹은 BinaryInv 때에 이용하는 최대치</param>
        </member>
        <member name="M:OpenCvSharp.Cv.AdaptiveThreshold(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,OpenCvSharp.AdaptiveThresholdType)">
            <summary>
            AdaptiveThreshold 실시해, 그레이 스케일 화상을 2진 화상으로 변환한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="max_value">threshold_type이 Binary 혹은 BinaryInv 때에 이용하는 최대치</param>
            <param name="adaptive_method">AdaptiveThreshold에 사용하는 알고리즘</param>
        </member>
        <member name="M:OpenCvSharp.Cv.AdaptiveThreshold(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,OpenCvSharp.AdaptiveThresholdType,OpenCvSharp.ThresholdType)">
            <summary>
            AdaptiveThreshold를 실시해, 그레이 스케일 화상을 2진 화상으로 변환한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="max_value">threshold_type 가 Binary 혹은 BinaryInv 때에 이용하는 최대치</param>
            <param name="adaptive_method">AdaptiveThreshold에 사용하는 알고리즘</param>
            <param name="threshold_type">AdaptiveThreshold 처리의 종류. Binary나 BinaryInv의 어느 쪽인지</param>
        </member>
        <member name="M:OpenCvSharp.Cv.AdaptiveThreshold(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,OpenCvSharp.AdaptiveThresholdType,OpenCvSharp.ThresholdType,System.Int32)">
            <summary>
            AdaptiveThreshold를 실시해, 그레이 스케일 화상을 2진 화상으로 변환한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="max_value">threshold_type 가 Binary 혹은 BinaryInv 때에 이용하는 최대치</param>
            <param name="adaptive_method">AdaptiveThreshold로 사용하는 알고리즘</param>
            <param name="threshold_type">AdaptiveThreshold 처리의 종류. Binary나 BinaryInv의 어느 쪽인지</param>
            <param name="block_size">픽셀의 AdaptiveThreshold을 계산하기 위해서 이용하는 인접 영역의 사이즈： 3, 5, 7, ... </param>
        </member>
        <member name="M:OpenCvSharp.Cv.AdaptiveThreshold(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,OpenCvSharp.AdaptiveThresholdType,OpenCvSharp.ThresholdType,System.Int32,System.Double)">
            <summary>
            AdaptiveThreshold를 실시해, 그레이 스케일 화상을 2진 화상으로 변환한다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="max_value">threshold_type 가 Binary 혹은 BinaryInv 때에 이용하는 최대치</param>
            <param name="adaptive_method">AdaptiveThreshold로 사용하는 알고리즘</param>
            <param name="threshold_type">AdaptiveThreshold 처리의 종류. Binary나 BinaryInv의 어느 쪽인지</param>
            <param name="block_size">픽셀의 AdaptiveThreshold 계산하기 위해서 이용하는 인접 영역의 사이즈： 3, 5, 7, ... </param>
            <param name="param1">각 알고리듬에 대응하는 파라미터. 적응 알고리즘이 MeanC 및 GaussianC의 경우는, 평균치 또는 중량감  평균치로부터 당기는 정수. 0의 값의 경우도 있다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Add(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열을 요소 마다 가산한다. 
            dst(I) =src1(I) +src2(I)
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Add(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열을 요소 마다 가산한다. 
            dst(I) =src1(I) +src2(I) [mask(I)!=0의 경우]
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크. 8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다). </param>
        </member>
        <member name="M:OpenCvSharp.Cv.AddS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            입력 배열 src1 의 모든 요소에 스칼라 value 를 더해 결과를 dst 에 보존한다.
            dst(I) =src(I) +value
            </summary>
            <param name="src1">입력 배열</param>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.AddS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            입력 배열 src1 의 모든 요소에 스칼라 value 를 더해 결과를 dst 에 보존한다.
            dst(I) =src(I) +value [mask(I)!=0 의 경우]
            </summary>
            <param name="src1">입력 배열</param>
            <param name="value">가산하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크. 8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.AddWeighted(OpenCvSharp.CvArr,System.Double,OpenCvSharp.CvArr,System.Double,System.Double,OpenCvSharp.CvArr)">
            <summary>
            입력 배열 src1 의 모든 요소에 스칼라 value 를 더해 결과를 dst 에 보존한다.
            dst(I) = src1(I) *alpha + src2(I) *beta + gamma
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="alpha">1번째의 배열 요소에의 중량감</param>
            <param name="src2">2번째의 입력 배열 스칼라</param>
            <param name="beta">2번째의 배열 요소에의 중량감</param>
            <param name="gamma">가산 결과에, 한층 더 더해지는 스칼라치</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Alloc(System.UInt32)">
            <summary>
            메모리버퍼의 영역을 확보한다
            </summary>
            <param name="size">버퍼 사이즈(바이트 단위)</param>
            <returns>메모리를 확보한 영역에의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.And(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 논리적(AND)을 계산한다. 
            dst(I) =src1(I) &amp;src2(I)
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.And(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 배열의 요소마다의 논리적(AND)을 계산한다. 
            dst(I) =src1(I) &amp;src2(I) [mask(I)!=0의 경우]
            </summary>
            <param name="src1">1번째의 입력 배열</param>
            <param name="src2">2번째의 입력 배열</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크. 8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다). </param>
        </member>
        <member name="M:OpenCvSharp.Cv.AndS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 논리적(AND)을 계산한다. 
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) &amp;value
            </summary>
            <param name="src1">입력 배열</param>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.AndS(OpenCvSharp.CvArr,OpenCvSharp.CvScalar,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열의 각 요소와 스칼라와의 비트 단위의 논리적(AND)을 계산한다. 
            실제의 계산 전에, 스칼라는 배열과 같은 타입에 변환된다.부동 소수점형 배열의 경우, 그러한 비트 표현이 처리에 사용된다.
            dst(I) =src(I) &amp;value [mask(I)!=0의 경우]
            </summary>
            <param name="src1">입력 배열</param>
            <param name="value">처리에 이용하는 스칼라</param>
            <param name="dst">출력 배열</param>
            <param name="mask">처리 마스크.8비트 싱글 채널 배열(출력 배열의 어느 요소가 변경되는지를 지정한다).</param>        
        </member>
        <member name="M:OpenCvSharp.Cv.ApproxChains(OpenCvSharp.CvChain,OpenCvSharp.CvMemStorage)">
            <summary>
            프리 맨 체인(Freeman chain)을 polyline로 근사 한다
            </summary>
            <param name="src_seq">다른 체인으로부터 참조 가능한 체인에의 참조.</param>
            <param name="storage">계산 결과 보존용의 스토리지.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ApproxChains(OpenCvSharp.CvChain,OpenCvSharp.CvMemStorage,OpenCvSharp.ContourChain)">
            <summary>
            프리 맨 체인(Freeman chain)을 polyline로 근사 한다
            </summary>
            <param name="src_seq">다른 체인으로부터 참조 가능한 체인에의 참조.</param>
            <param name="storage">계산 결과 보존용의 스토리지.</param>
            <param name="method">추정 수법.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ApproxChains(OpenCvSharp.CvChain,OpenCvSharp.CvMemStorage,OpenCvSharp.ContourChain,System.Double)">
            <summary>
            프리 맨 체인(Freeman chain)을 polyline로 근사 한다
            </summary>
            <param name="src_seq">다른 체인으로부터 참조 가능한 체인에의 참조.</param>
            <param name="storage">계산 결과 보존용의 스토리지.</param>
            <param name="method">추정 수법.</param>
            <param name="parameter">메소드 파라미터(현재는 사용되지 않았다).</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ApproxChains(OpenCvSharp.CvChain,OpenCvSharp.CvMemStorage,OpenCvSharp.ContourChain,System.Double,System.Int32)">
            <summary>
            프리 맨 체인(Freeman chain)을 polyline로 근사 한다
            </summary>
            <param name="src_seq">다른 체인으로부터 참조 가능한 체인에의 참조.</param>
            <param name="storage">계산 결과 보존용의 스토리지.</param>
            <param name="method">추정 수법.</param>
            <param name="parameter">메소드 파라미터(현재는 사용되지 않았다).</param>
            <param name="minimal_perimeter">minimal_perimeter 이상의 주위장을 가지는 윤곽만을 계산한다.그 외의 체인은 결과의 구조체로부터 삭제된다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ApproxChains(OpenCvSharp.CvChain,OpenCvSharp.CvMemStorage,OpenCvSharp.ContourChain,System.Double,System.Int32,System.Boolean)">
            <summary>
            프리 맨 체인(Freeman chain)을 polyline로 근사 한다
            </summary>
            <param name="src_seq">다른 체인으로부터 참조 가능한 체인에의 참조.</param>
            <param name="storage">계산 결과 보존용의 스토리지.</param>
            <param name="method">추정 수법.</param>
            <param name="parameter">메소드 파라미터(현재는 사용되지 않았다).</param>
            <param name="minimal_perimeter">minimal_perimeter 이상의 주위장을 가지는 윤곽만을 계산한다.그 외의 체인은 결과의 구조체로부터 삭제된다.</param>
            <param name="recursive">true의 경우, src_seq로부터 h_next 혹은 v_next에 의해서 더듬을 수 있는 모든 체인을 근사 한다.false의 경우, 단일의 체인을 근사 한다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ApproxPoly(OpenCvSharp.CvSeq{OpenCvSharp.CvPoint},System.Int32,OpenCvSharp.CvMemStorage,OpenCvSharp.ApproxPolyMethod,System.Double)">
            <summary>
            지정한 정도로 polyline를 근사 한다
            </summary>
            <param name="src_seq">점의 시퀸스 또는 배열</param>
            <param name="header_size">근사 된 polyline의 헷다사이즈.</param>
            <param name="storage">근사 된 윤곽의 보존 장소.null의 경우, 입력 순서의 스토리지가 사용된다. </param>
            <param name="method">근사 방법</param>
            <param name="parameter">근사 방법으로 의존하는 파라미터.CV_POLY_APPROX_DP의 경우에는, 요구하는 근사 정도이다.</param>
            <returns>단일 혹은 복수의 근사 곡선을 계산한 결과</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ApproxPoly(OpenCvSharp.CvSeq{OpenCvSharp.CvPoint},System.Int32,OpenCvSharp.CvMemStorage,OpenCvSharp.ApproxPolyMethod,System.Double,System.Boolean)">
            <summary>
            지정한 정도로 polyline를 근사 한다
            </summary>
            <param name="src_seq">점의 시퀸스 또는 배열</param>
            <param name="header_size">근사 된 polyline의 헷다사이즈.</param>
            <param name="storage">근사 된 윤곽의 보존 장소.null의 경우, 입력 순서의 스토리지가 사용된다. </param>
            <param name="method">근사 방법</param>
            <param name="parameter">근사 방법으로 의존하는 파라미터.CV_POLY_APPROX_DP의 경우에는, 요구하는 근사 정도이다.</param>
            <param name="parameter2">src_seq가 점의 배열(CvMat)의 경우, 이 파라미터는 윤곽이 닫고 있는(parameter2=true)인가, 열려 있는지(parameter2=false)를 지정한다.</param>
            <returns>단일 혹은 복수의 근사 곡선을 계산한 결과</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ArcLength(OpenCvSharp.CvArr)">
            <summary>
            윤곽의 주위장 또는 곡선의 길이를 계산한다
            </summary>
            <param name="curve">배열</param>
            <returns>윤곽의 주위장 또는 곡선의 길이</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ArcLength(OpenCvSharp.CvArr,OpenCvSharp.CvSlice)">
            <summary>
            윤곽의 주위장 또는 곡선의 길이를 계산한다
            </summary>
            <param name="curve">배열</param>
            <param name="slice">곡선의 시점과 종점.디폴트에서는 곡선의 모든 길이가 계산된다.</param>
            <returns>윤곽의 주위장 또는 곡선의 길이</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ArcLength(OpenCvSharp.CvArr,OpenCvSharp.CvSlice,System.Int32)">
            <summary>
            윤곽의 주위장 또는 곡선의 길이를 계산한다
            </summary>
            <param name="curve">배열</param>
            <param name="slice">곡선의 시점과 종점.디폴트에서는 곡선의 모든 길이가 계산된다.</param>
            <param name="is_closed">폐곡선인지 어떤지를 나타낸다.다음의 3개 상태가 있다： 
            is_closed=0 - 곡선은 폐곡선으로서 다루어지지 않는다. 
            is_closed>0 - 곡선은 폐곡선으로서 다루어진다. 
            is_closed&lt;0 - 곡선이 순서의 경우, ((CvSeq*) curve)->flags의 플래그 CV_SEQ_FLAG_CLOSED로부터 폐곡선인지 어떤지를 판별한다.그렇지 않은(곡선이 점의 배열(CvMat*)로 표현된다) 경우, 폐곡선으로서 다루어지지 않는다. 
            </param>
            <returns>윤곽의 주위장 또는 곡선의 길이</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.AttrList">
            <summary>
            구조체 CvAttrList의 초기화
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.AttrList(System.String[])">
            <summary>
            구조체 CvAttrList의 초기화
            </summary>
            <param name="attr">(attribute_name,attribute_value)의 페어로부터 되는 배열</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.AttrList(System.String[],OpenCvSharp.Pointer{OpenCvSharp.CvAttrList})">
            <summary>
            구조체 CvAttrList의 초기화
            </summary>
            <param name="attr">(attribute_name,attribute_value)의 페어로부터 되는 배열</param>
            <param name="next">속성 리스트의 다음의 chunk의 포인터</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Avg(OpenCvSharp.CvArr)">
            <summary>
            배열 요소의 평균치를 각 채널로 독립에 계산한다.
            </summary>
            <param name="arr">배열</param>
            <returns>평균치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Avg(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            배열 요소의 평균치를 각 채널로 독립에 계산한다.
            </summary>
            <param name="arr">배열</param>
            <param name="mask">옵션의 처리 마스크</param>
            <returns>평균치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.AvgSdv(OpenCvSharp.CvArr,OpenCvSharp.CvScalar@,OpenCvSharp.CvScalar@)">
            <summary>
            배열 요소의 평균과 표준 편차를 각 채널로 독립에 계산한다.
            </summary>
            <param name="arr">배열</param>
            <param name="mean">계산 결과의 평균치의 출력</param>
            <param name="std_dev">계산 결과의 표준 편차의 출력</param>
        </member>
        <member name="M:OpenCvSharp.Cv.AvgSdv(OpenCvSharp.CvArr,OpenCvSharp.CvScalar@,OpenCvSharp.CvScalar@,OpenCvSharp.CvArr)">
            <summary>
            배열 요소의 평균과 표준 편차를 각 채널로 독립에 계산한다.
            </summary>
            <param name="arr">배열</param>
            <param name="mean">계산 결과의 평균치의 출력</param>
            <param name="std_dev">계산 결과의 표준 편차의 출력</param>
            <param name="mask">옵션의 처리 마스크</param>
        </member>
        <member name="M:OpenCvSharp.Cv.BackProjectPCA(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            투영 계수로부터 원래의 벡터를 재구축 한다
            </summary>
            <param name="proj">입력 데이터.</param>
            <param name="avg">평균 벡터. 만약 단일행 벡터의 경우, 출력 벡터가 result의 행으로서 보존되고 있는 것을 의미한다.그렇지 않은 경우는, 단일 열이며, 그 때는 result의 열로서 보존된다.</param>
            <param name="eigenvects">고유 벡터(주성분).하나의 행이 하나의 벡터를 의미한다.</param>
            <param name="result">출력 재구축 된 벡터의 행렬.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.BoundingRect(OpenCvSharp.CvArr)">
            <summary>
            2 차원점렬을 포함 하는 정 사각형을 돌려준다.
            </summary>
            <param name="points">시퀸스(CvSeq, CvContour)인가, 점의 벡터(CvMat)인가, 비0의 픽셀이 점렬로 간주해지는 8비트 1채널 마스크 화상 (CvMat, IplImage)의 어느쪽이든으로 표현된 2 차원의 점렬.</param>
            <returns>사각형</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.BoundingRect(OpenCvSharp.CvArr,System.Boolean)">
            <summary>
            2 차원점렬을 포함 하는 정 사각형을 돌려준다.
            </summary>
            <param name="points">시퀸스(CvSeq, CvContour)인가, 점의 벡터(CvMat)인가, 비0의 픽셀이 점렬로 간주해지는 8비트 1 채널 마스크 화상 (CvMat, IplImage)의 어느쪽이든으로 표현된 2 차원의 점렬.</param>
            <param name="update">갱신 플래그. 
            points가 CvContour 로, update=false의 경우： 포함 사각형은 계산되지 않고, 윤곽 헤더의 rect 필드로부터 읽힌다. 
            points가 CvContour 로, update=true의 경우： 포함 사각형은 계산되어 윤곽 헤더의 rect 필드에 써진다. 
            points가 CvSeq나 CvMat의 경우： update는 무시되고, 포함 사각형은 계산되어 돌려주어진다. </param>
            <returns>사각형</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.BoundingRect(System.Collections.Generic.IEnumerable{OpenCvSharp.CvPoint})">
            <summary>
            2 차원점렬을 포함 하는 정사각형을 돌려준다.
            </summary>
            <param name="points">CvPoint의 열거자(CvPoint[], List CvPoint 등). 내부에서 CvSeq에 변환된다.</param>
            <returns>사각형</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.BoxPoints(OpenCvSharp.CvBox2D,OpenCvSharp.CvPoint2D32f[]@)">
            <summary>
            사각형의 정점을 찾아낸다
            </summary>
            <param name="box">사각형</param>
            <param name="pt">정점의 배열</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcArrHist(OpenCvSharp.CvArr,OpenCvSharp.CvHistogram)">
            <summary>
            1개의 배열의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="hist">히스토그램에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcArrHist(OpenCvSharp.CvArr,OpenCvSharp.CvHistogram,System.Boolean)">
            <summary>
            1개의 배열의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="hist">히스토그램에의 참조</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcArrHist(OpenCvSharp.CvArr,OpenCvSharp.CvHistogram,System.Boolean,OpenCvSharp.CvArr)">
            <summary>
            1개의 배열의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="hist">히스토그램에의 참조</param>
            <param name="accumulate">계산 플래그. 세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다.</param>
            <param name="mask">처리 마스크. 입력 화상중의 어느 픽셀을 카운트 할까를 결정한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcArrHist(OpenCvSharp.CvArr[],OpenCvSharp.CvHistogram)">
            <summary>
            배열군의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 타풀의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열군.모두 같은 사이즈·타입.</param>
            <param name="hist">히스토그램에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcArrHist(OpenCvSharp.CvArr[],OpenCvSharp.CvHistogram,System.Boolean)">
            <summary>
            배열군의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 타풀의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열군.모두 같은 사이즈·타입.</param>
            <param name="hist">히스토그램에의 참조</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcArrHist(OpenCvSharp.CvArr[],OpenCvSharp.CvHistogram,System.Boolean,OpenCvSharp.CvArr)">
            <summary>
            배열군의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 타풀의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열군.모두 같은 사이즈·타입.</param>
            <param name="hist">히스토그램에의 참조</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다. </param>
            <param name="mask">처리 마스크. 입력 화상중의 어느 픽셀을 카운트 할까를 결정한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcArrBackProject(OpenCvSharp.CvArr[],OpenCvSharp.CvArr,OpenCvSharp.CvHistogram)">
            <summary>
            백 프로젝션의 계산을 실시한다
            </summary>
            <param name="image">입력 화상군</param>
            <param name="back_project">출력의 백 프로젝션 화상.입력 화상군과 같은 타입.</param>
            <param name="hist">히스토그램</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcBackProject(OpenCvSharp.CvArr[],OpenCvSharp.CvArr,OpenCvSharp.CvHistogram)">
            <summary>
            백 프로젝션의 계산을 실시한다
            </summary>
            <param name="image">입력 화상군</param>
            <param name="back_project">출력의 백 프로젝션 화상.입력 화상군과 같은 타입.</param>
            <param name="hist">히스토그램</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcArrBackProjectPatch(OpenCvSharp.CvArr[],OpenCvSharp.CvArr,OpenCvSharp.CvSize,OpenCvSharp.CvHistogram,OpenCvSharp.HistogramComparison)">
            <summary>
            히스토그램의 비교에 근거해 화상 내부에서의 템플릿 위치를 요구한다
            </summary>
            <param name="image">입력 화상군( CvMat** 형식에서도 상관없다).모두 같은 사이즈.</param>
            <param name="dst">출력 화상</param>
            <param name="patch_size">입력 화상군상을 슬라이드시키는 템플릿의 사이즈</param>
            <param name="hist">템플릿의 히스토그램</param>
            <param name="method">비교 방법.값은 함수 cvCompareHist 에게 건네진다(이 함수에 관한 기술을 참조)</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcArrBackProjectPatch(OpenCvSharp.CvArr[],OpenCvSharp.CvArr,OpenCvSharp.CvSize,OpenCvSharp.CvHistogram,OpenCvSharp.HistogramComparison,System.Single)">
            <summary>
            히스토그램의 비교에 근거해 화상 내부에서의 템플릿 위치를 요구한다
            </summary>
            <param name="image">입력 화상군( CvMat** 형식에서도 상관없다).모두 같은 사이즈.</param>
            <param name="dst">출력 화상</param>
            <param name="patch_size">입력 화상군상을 슬라이드시키는 템플릿의 사이즈</param>
            <param name="hist">템플릿의 히스토그램</param>
            <param name="method">비교 방법.값은 함수 cvCompareHist 에게 건네진다(이 함수에 관한 기술을 참조)</param>
            <param name="factor">히스토그램의 정규화 계수.출력 화상의 정규화 스케일에 영향을 준다.값에 확신이 없는 경우는, 1으로 한다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcBackProjectPatch(OpenCvSharp.CvArr[],OpenCvSharp.CvArr,OpenCvSharp.CvSize,OpenCvSharp.CvHistogram,OpenCvSharp.HistogramComparison)">
            <summary>
            히스토그램의 비교에 근거해 화상 내부에서의 템플릿 위치를 요구한다
            </summary>
            <param name="image">입력 화상군( CvMat** 형식에서도 상관없다).모두 같은 사이즈.</param>
            <param name="dst">출력 화상</param>
            <param name="patch_size">입력 화상군상을 슬라이드시키는 템플릿의 사이즈</param>
            <param name="hist">템플릿의 히스토그램</param>
            <param name="method">비교 방법.값은 함수 cvCompareHist 에게 건네진다(이 함수에 관한 기술을 참조)</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcBackProjectPatch(OpenCvSharp.CvArr[],OpenCvSharp.CvArr,OpenCvSharp.CvSize,OpenCvSharp.CvHistogram,OpenCvSharp.HistogramComparison,System.Single)">
            <summary>
            히스토그램의 비교에 근거해 화상 내부에서의 템플릿 위치를 요구한다
            </summary>
            <param name="image">입력 화상군( CvMat** 형식에서도 상관없다).모두 같은 사이즈.</param>
            <param name="dst">출력 화상</param>
            <param name="patch_size">입력 화상군상을 슬라이드시키는 템플릿의 사이즈</param>
            <param name="hist">템플릿의 히스토그램</param>
            <param name="method">비교 방법.값은 함수 cvCompareHist 에게 건네진다(이 함수에 관한 기술을 참조)</param>
            <param name="factor">히스토그램의 정규화 계수.출력 화상의 정규화 스케일에 영향을 준다.값에 확신이 없는 경우는, 1으로 한다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcBayesianProb(OpenCvSharp.CvHistogram[],OpenCvSharp.CvHistogram[])">
            <summary>
            Calculates bayesian probabilistic histograms
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcCovarMatrix(OpenCvSharp.CvArr[],OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CovarMatrixFlag)">
            <summary>
            벡터 집합의 공변동 행렬을 계산한다.
            </summary>
            <param name="vects">입력 벡터.이것들은 모두 같은 타입으로 같은 사이즈가 아니면 안 된다.</param>
            <param name="cov_mat">부동 소수점형의 정방인 출력 공변동 행렬</param>
            <param name="avg">입력 또는 출력 배열(플래그에 의존한다) - 입력 벡터의 평균 벡터</param>
            <param name="flags">조작 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcEMD2(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DistanceType)">
            <summary>
            2개의 중량감  점 분포간의 "최소 코스트(minimal work)" 거리를 계산한다.
            </summary>
            <param name="signature1">1번째의 서명(점분포), size1×dims+1의 부동 소수점형 행렬.각 행은, 중량감의 뒤에 좌표를 보존한다.유저 정의의 코스트 행렬을 이용하는 경우는, 1열의 행렬(중량감 뿐)에서도 상관없다.</param>
            <param name="signature2">2번째의 서명(점분포)(signature1와 같은 포맷).행수나 중량감의 합계가 다르기도 하지만, 이 경우는 여분의"dummy" 점이 signature1 나 signature2 의 어딘가에 추가된다.</param>
            <param name="distance_type">이용하는 평가 지표.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcEMD2(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DistanceType,OpenCvSharp.CvDistanceFunction)">
            <summary>
            2개의 중량감  점분포간의 "최소 코스트(minimal work)" 거리를 계산한다.
            </summary>
            <param name="signature1">1번째의 서명(점분포), size1×dims+1의 부동 소수점형 행렬.각 행은, 중량감의 뒤에 좌표를 보존한다.유저 정의의 코스트 행렬을 이용하는 경우는, 1열의 행렬(중량감 뿐)에서도 상관없다.</param>
            <param name="signature2">2번째의 서명(점분포)(signature1와 같은 포맷).행수나 중량감의 합계가 다르기도 하지만, 이 경우는 여분의"dummy" 점이 signature1 나 signature2 의 어딘가에 추가된다.</param>
            <param name="distance_type">이용하는 평가 지표.</param>
            <param name="distance_func">유저 정의 거리 함수.2점의 좌표를 주면, 그 점간의 거리를 돌려준다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcEMD2(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DistanceType,OpenCvSharp.CvDistanceFunction,OpenCvSharp.CvArr)">
            <summary>
            2개의 중량감  점분포간의 "최소 코스트(minimal work)" 거리를 계산한다.
            </summary>
            <param name="signature1">1번째의 서명(점분포), size1×dims+1의 부동 소수점형 행렬.각 행은, 중량감의 뒤에 좌표를 보존한다.유저 정의의 코스트 행렬을 이용하는 경우는, 1열의 행렬(중량감 뿐)에서도 상관없다.</param>
            <param name="signature2">2번째의 서명(점분포)(signature1와 같은 포맷).행수나 중량감의 합계가 다르기도 하지만, 이 경우는 여분의"dummy" 점이 signature1 나 signature2 의 어딘가에 추가된다.</param>
            <param name="distance_type">이용하는 평가 지표.</param>
            <param name="distance_func">유저 정의 거리 함수.2점의 좌표를 주면, 그 점간의 거리를 돌려준다.</param>
            <param name="cost_matrix">유저 정의의 size1×size2의 코스트 행렬.적어도, cost_matrix 와 distance_func 의 어느쪽이든 하나는 NULL 가 아니면 안된다.코스트 행렬을 이용하는 경우는, 하한치(아래와 같은 참조)의 계산은 거리 정의 함수를 필요로 하기 위해 불가능하다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcEMD2(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DistanceType,OpenCvSharp.CvDistanceFunction,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            2개의 중량감  점분포간의 "최소 코스트(minimal work)" 거리를 계산한다.
            </summary>
            <param name="signature1">1번째의 서명(점분포), size1×dims+1의 부동 소수점형 행렬.각 행은, 중량감의 뒤에 좌표를 보존한다.유저 정의의 코스트 행렬을 이용하는 경우는, 1열의 행렬(중량감 뿐)에서도 상관없다.</param>
            <param name="signature2">2번째의 서명(점분포)(signature1와 같은 포맷).행수나 중량감의 합계가 다르기도 하지만, 이 경우는 여분의"dummy" 점이 signature1 나 signature2 의 어딘가에 추가된다.</param>
            <param name="distance_type">이용하는 평가 지표.</param>
            <param name="distance_func">유저 정의 거리 함수.2점의 좌표를 주면, 그 점간의 거리를 돌려준다.</param>
            <param name="cost_matrix">유저 정의의 size1×size2의 코스트 행렬.적어도, cost_matrix 와 distance_func 의 어느쪽이든 하나는 NULL 가 아니면 안된다.코스트 행렬을 이용하는 경우는, 하한치(아래와 같은 참조)의 계산은 거리 정의 함수를 필요로 하기 위해 불가능하다.</param>
            <param name="flow">결과의 size1×size2의 플로우 행렬(flow matrix). flow_ij 는 signature1의 i번째의 점으로부터 signature2의 j번째의 점에의 플로우를 나타낸다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcEMD2(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.DistanceType,OpenCvSharp.CvDistanceFunction,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Single@)">
            <summary>
            2개의 중량감  점분포간의 "최소 코스트(minimal work)" 거리를 계산한다.
            </summary>
            <param name="signature1">1번째의 서명(점분포), size1×dims+1의 부동 소수점형 행렬.각 행은, 중량감의 뒤에 좌표를 보존한다.유저 정의의 코스트 행렬을 이용하는 경우는, 1열의 행렬(중량감 뿐)에서도 상관없다.</param>
            <param name="signature2">2번째의 서명(점분포)(signature1와 같은 포맷).행수나 중량감의 합계가 다르기도 하지만, 이 경우는 여분의"dummy" 점이 signature1 나 signature2 의 어딘가에 추가된다.</param>
            <param name="distance_type">이용하는 평가 지표.</param>
            <param name="distance_func">유저 정의 거리 함수.2점의 좌표를 주면, 그 점간의 거리를 돌려준다.</param>
            <param name="cost_matrix">유저 정의의 size1×size2의 코스트 행렬.적어도, cost_matrix 와 distance_func 의 어느쪽이든 하나는 NULL 가 아니면 안된다.코스트 행렬을 이용하는 경우는, 하한치(아래와 같은 참조)의 계산은 거리 정의 함수를 필요로 하기 위해 불가능하다.</param>
            <param name="flow">결과의 size1×size2의 플로우 행렬(flow matrix). flow_ij 는 signature1의 i번째의 점으로부터 signature2의 j번째의 점에의 플로우를 나타낸다.</param>
            <param name="lower_bound">옵션의 입출력 파라미터</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcGlobalOrientation(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            선택된 영역에서 전역적인 모션 방향을 계산 
            </summary> 
            <param name="orientation"> 모션 그라디언트 방향 이미지. 함수 cvCalcMotionGradient에 의해 산출된다. </param> 
            <param name="mask"> 마스크 이미지. cvCalcMotionGradient 의해 얻어진 효과적인 기온 변화도 마스크와 방향을 계산해야하는 영역을 나타내는 가면 일반 부분. </param> 
            <param name="mhi"> 모션 히스토리 화상. </param> 
            <param name="timestamp"> 밀리세컨드 또는 기타 단위로 대표되는 현재 시간. cvUpdateMotionHistory를 호출할 때 인수로 전달 시간을 저장 해 놓고, 여기에 그 값을 다시 사용하는 것이 좋다. 왜냐하면 큰 이미지에 cvUpdateMotionHistory과 cvCalcMotionGradient을 실행할 경우, 긴 작업 시간이 걸릴 수 있기 때문에이다. </param> 
            <param name="duration"> timestamp와 동일한 시간 단위로 표현되는 모션 궤적의 최대 유지 시간. cvUpdateMotionHistory의 인수와 동일. </param> 
        </member>
        <member name="M:OpenCvSharp.Cv.CalcImageHomography(System.Single[],OpenCvSharp.CvPoint3D32f,System.Single[0:,0:],System.Single[0:,0:]@)">
            <summary>
            Calculates homography matrix for oblong planar object (e.g. arm)
            </summary>
            <param name="line">The main object axis direction (vector (dx,dy,dz)). </param>
            <param name="center">Object center ((cx,cy,cz)). </param>
            <param name="intrinsic">Intrinsic camera parameters (3x3 matrix). </param>
            <param name="homography">Output homography matrix (3x3). </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcHist(OpenCvSharp.IplImage,OpenCvSharp.CvHistogram)">
            <summary>
            1개의 화상의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="hist">히스토그램에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcHist(OpenCvSharp.IplImage,OpenCvSharp.CvHistogram,System.Boolean)">
            <summary>
            1개의 화상의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="hist">히스토그램에의 참조</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcHist(OpenCvSharp.IplImage,OpenCvSharp.CvHistogram,System.Boolean,OpenCvSharp.CvArr)">
            <summary>
            1개의 화상의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="hist">히스토그램에의 참조</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다.</param>
            <param name="mask">처리 마스크.입력 화상중의 어느 피크셀을 카운트 할까를 결정한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcHist(OpenCvSharp.IplImage[],OpenCvSharp.CvHistogram)">
            <summary>
            화상군의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상군. 모두 같은 사이즈·타입.</param>
            <param name="hist">히스토그램에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcHist(OpenCvSharp.IplImage[],OpenCvSharp.CvHistogram,System.Boolean)">
            <summary>
            화상군의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상군.모두 같은 사이즈·타입.</param>
            <param name="hist">히스토그램에의 참조</param>
            <param name="accumulate">계산 플래그. 세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcHist(OpenCvSharp.IplImage[],OpenCvSharp.CvHistogram,System.Boolean,OpenCvSharp.CvArr)">
            <summary>
            화상군의 히스토그램을 계산한다.
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상군.모두 같은 사이즈·타입.</param>
            <param name="hist">히스토그램에의 참조</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다. </param>
            <param name="mask">처리 마스크. 입력 화상중의 어느 픽셀을 카운트 할까를 결정한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcMotionGradient(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            모션 히스토리 화상의 그라디언트를 계산 
             </summary> 
             <param name="mhi"> 모션 히스토리 화상. </param> 
             <param name="mask"> 마스크 이미지. 모션 그라디언트 방향으로 효과적인 화소가 표시되는 마스크. 출력 매개 변수입니다. </param> 
             <param name="orientation"> 모션 그라디언트 방향 이미지. 값은 0 ~ 360 °의 각도 값. </param> 
             <param name="delta1">이 함수는 각 픽셀 (x, y)이웃한  최소 (m (x, y)) 및 최대 (M (x, y)) mhi 값을 찾아내고 다음에 해당하는 경우에만 그 그라디언트가 유효하다고 가정한다. min (delta1, delta2) &lt;= M (x, y) - m (x, y) &lt;= max (delta1, delta2) </param> 
             <param name="delta2">이 함수는 각 픽셀 (x, y)이웃한 최소 (m (x, y)) 및 최대 (M (x, y)) mhi 값을 찾아내고 다음에 해당하는 경우에만 그 그라디언트가 유효하다고 가정한다. min (delta1, delta2) &lt;= M (x, y) - m (x, y) &lt;= max (delta1, delta2) </param> 
        </member>
        <member name="M:OpenCvSharp.Cv.CalcMotionGradient(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double,OpenCvSharp.ApertureSize)">
            <summary>
            모션 히스토리 화상의 그라디언트 방향을 계산 
             </summary> 
             <param name="mhi"> 모션 히스토리 화상. </param> 
             <param name="mask"> 마스크 이미지. 모션 그라디언트 방향으로 효과적인 화소가 표시되는 마스크. 출력 매개 변수입니다. </param> 
             <param name="orientation"> 모션 그라디언트 방향 이미지. 값은 0 ~ 360 °의 각도 값. </param> 
             <param name="delta1">이 함수는 각 픽셀 (x, y) 이웃한 최소 (m (x, y)) 및 최대 (M (x, y)) mhi 값을 찾아내고 다음에 해당하는 경우에만 그 그라디언트가 유효하다고 가정한다. min (delta1, delta2) &lt;= M (x, y) - m (x, y) &lt;= max (delta1, delta2) </param> 
             <param name="delta2">이 함수는 각 픽셀 (x, y) 이웃한 최소 (m (x, y)) 및 최대 (M (x, y)) mhi 값을 찾아내고 다음에 해당하는 경우에만 그 그라디언트가 유효하다고 가정한다. min (delta1, delta2) &lt;= M (x, y) - m (x, y) &lt;= max (delta1, delta2) </param> 
             <param name="aperture_size">이 함수에서 사용되는있는 감별법 운영자 aperture_size. </param> 
        </member>
        <member name="M:OpenCvSharp.Cv.CalcOpticalFlowBM(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Boolean,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            서로 겹친 block_size.Width x block_size.Height 픽셀의 블록마다 옵티컬 플로우를 계산한다
            </summary>
            <param name="prev">1번째의 화상, 8 비트, 싱글 채널.</param>
            <param name="curr">2번째의 화상, 8 비트, 싱글 채널.</param>
            <param name="block_size">비교 대상이 되는 기본 블록의 사이즈. </param>
            <param name="shift_size">블록 좌표의 증가량. </param>
            <param name="max_range">주사(탐색) 대상이 되는 블록의 근방 영역. 픽셀 단위.</param>
            <param name="use_previous">true의 경우, 전의(입력) 속도장을 이용한다. </param>
            <param name="velx">다음의 것한 옵티컬 플로우의 수평 성분. ceil(prev->width/block_size.width)×ceil(prev->height/block_size.height)의 사이즈, 32 비트 부동 소수점형, 싱글 채널. </param>
            <param name="vely">velx 와 동일 사이즈, 32 비트 부동 소수점형, 싱글 채널의 옵티컬 플로우의 수직 성분.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcOpticalFlowHS(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Boolean,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,OpenCvSharp.CvTermCriteria)">
            <summary>
            Horn &amp;Schunck 알고리즘을 이용하여 1번째의 입력 화상의 전 픽셀에 대한 플로우를, 2번째의 화상을 참조해 계산한다.
            </summary>
            <param name="prev">1번째의 화상, 8 비트, 싱글 채널.</param>
            <param name="curr">2번째의 화상, 8 비트, 싱글 채널.</param>
            <param name="use_previous">true의 경우, 전의(입력) 속도장을 이용한다.</param>
            <param name="velx">입력 화상과 같은 사이즈의 옵티컬 플로우의 수평 성분, 32 비트 부동 소수점형, 싱글 채널.</param>
            <param name="vely">입력 화상과 같은 사이즈의 옵티컬 플로우의 수직 성분, 32 비트 부동 소수점형, 싱글 채널.</param>
            <param name="lambda">라그란쥬 승수</param>
            <param name="criteria">속도계산의 종료 조건</param>	
        </member>
        <member name="M:OpenCvSharp.Cv.CalcOpticalFlowLK(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvSize,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            Lucas &amp;Kanade 알고리즘을 이용하여 1번째의 입력 화상의 전 픽셀에 대한 플로우를, 2번째의 화상을 참조해 계산한다.
            </summary>
            <param name="prev">1번째의 화상, 8 비트, 싱글 채널.</param>
            <param name="curr">2번째의 화상, 8 비트, 싱글 채널.</param>
            <param name="win_size">픽셀을 그룹화 하기 위해서 이용되는 평균화 윈도우의 사이즈</param>
            <param name="velx">입력 화상과 같은 사이즈의 옵티컬 플로우의 수평 성분, 32 비트 부동 소수점형, 싱글 채널.</param>
            <param name="vely">입력 화상과 같은 사이즈의 옵티컬 플로우의 수직 성분, 32 비트 부동 소수점형, 싱글 채널.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcOpticalFlowPyrLK(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvPoint2D32f[]@,OpenCvSharp.CvSize,System.Int32,System.Byte[]@,System.Single[]@,OpenCvSharp.CvTermCriteria,OpenCvSharp.LKFlowFlag)">
            <summary>
             Lucas-Kanade 옵티컬 플로우의, 피라미드를 이용해 드 희소한 특징에 대응한 반복 버젼([Bouguet00])의 실장이다.
            전 프레임에 있어서의 특징점의 좌표가 주어졌을 경우에, 현재의 프레임에 있어서의 특징점의 좌표가 계산된다.좌표는 사브피크셀 정도로 검출된다. 
            </summary>
            <param name="prev">1번째의 프레임(시간 t)</param>
            <param name="curr">2번째의 프레임(시간 t + dt)</param>
            <param name="prev_pyr">최초의 화상에 대한 피라미드의 버퍼.이것이 NULL 가 아닌 경우는, 이 버퍼는, 레벨 1 으로부터 레벨 #level 까지의 피라밋드를 격납하는데 충분한 사이즈가 아니면 안된다. (image_width+8) *image_height/3 바이트의 합계가 충분한 사이즈가 된다.</param>
            <param name="curr_pyr">prev_pyr 와 같게, 2번째의 프레임에 대해서 이용된다</param>
            <param name="prev_features">플로우를 검출하는데 필요한 점의 배열</param>
            <param name="curr_features">2 차원의 점의 배열.2번째의 화상(프레임) 중의 입력 특징의 새로운 위치가 계산되어 여기에 격납된다</param>
            <param name="win_size">각 피라미드레벨로의 탐색 윈도우의 사이즈</param>
            <param name="level">피라미드레벨의 최대치.0 의 경우는 피라밋드는 이용되지 않는다(싱글 레벨).1 의 경우는 레벨 2 가 된다.</param>
            <param name="status">배열. 특징에 대응하는 플로우가 발견되었을 경우에, 배열의 각 요소가 1 에 세트 된다.그렇지 않은 경우는 0 이 된다.</param>	
            <param name="track_error">이동전의 점과 이동 후의 점의 주변 영역의 차이(오차)를 포함한 배정도형의 배열.옵션 파라미터(NULL 도 취할 수 있다).</param>	
            <param name="criteria">각 피라미드의 각 점에 대한 플로우를 검출하는 반복 계산의 종료 조건</param>
            <param name="flags">Miscellaneous 플래그</param>	
        </member>
        <member name="M:OpenCvSharp.Cv.CalcPCA(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.PCAFlag)">
            <summary>
            벡터 집합의 주성분 분석을 실시한다
            </summary>
            <param name="data">입력 데이터. 각각의 벡터는 단일행(CV_PCA_DATA_AS_ROW)인가, 단일열(CV_PCA_DATA_AS_COL)이다.</param>
            <param name="avg">평균 벡터.함수내에서 계산되는지, 유저에 의해서 주어진다. </param>
            <param name="eigenvalues">출력인 공변동 행렬의 고유치.</param>
            <param name="eigenvectors">출력인 공변동 행렬의 고유 벡터(즉, 주성분).하나의 행이 하나의 벡터를 의미한다.</param>
            <param name="flags">조작 플래그.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcPGH(OpenCvSharp.CvSeq,OpenCvSharp.CvHistogram)">
            <summary>
            윤곽의 pair-wise geometrical histogram 를 요구한다
            </summary>
            <param name="contour">입력 윤곽.현재로서는 좌표가 정수치의 점만이 이용 가능.</param>
            <param name="hist">구할 수 있던 히스토그램. 반드시 2 차원이 된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcProbDensity(OpenCvSharp.CvHistogram,OpenCvSharp.CvHistogram,OpenCvSharp.CvHistogram)">
            <summary>
            하나의 히스토그램을 다른 히스토그램으로 나눈다
            </summary>
            <param name="hist1">첫번째의 히스토그램(제수)</param>
            <param name="hist2">두번째의 히스토그램</param>
            <param name="dst_hist">출력 히스토그램</param>	
        </member>
        <member name="M:OpenCvSharp.Cv.CalcProbDensity(OpenCvSharp.CvHistogram,OpenCvSharp.CvHistogram,OpenCvSharp.CvHistogram,System.Double)">
            <summary>
            하나의 히스토그램을 다른 히스토그램으로 나눈다
            </summary>
            <param name="hist1">첫번째의 히스토그램(제수)</param>
            <param name="hist2">두번째의 히스토그램</param>
            <param name="dst_hist">출력 히스토그램</param>
            <param name="scale">출력 히스토그램의 스케일 계수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalcSubdivVoronoi2D(OpenCvSharp.CvSubdiv2D)">
            <summary>
            가상점의 좌표를 계산한다. 원래의 세분할면이 있는 정점에 대응하는 가상점 모두를 접속하여 그 정점을 포함한 Voronoi 영역의 경계를 구성한다. 
            </summary>
            <param name="subdiv">들로네 subdivision. 모든 점은 추가가 끝난 상태</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrateCamera2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@)">
            <summary>
            내부 파라미터와 각 화상에 대한 외부 파라미터를 추정한다.
            </summary>
            <param name="object_points">오브젝트(calibration 패턴) 상의점군 좌표의 결합 행렬.3xN 또는 Nx3의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="image_points">대응하는 화상상의 점군좌표의 결합 행렬. 2xN 또는 Nx2 의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="point_counts">각각의 뷰에 포함되는 점의 수를 나타내는 벡터.사이즈는 1xM 또는 Mx1 로 M는 뷰의 수.1xM or Mx1</param>
            <param name="image_size">화상 사이즈.내부 카메라 행렬의 초기화에만 이용된다.</param>
            <param name="intrinsic_matrix">출력되는 카메라 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS  나 CV_CALIB_FIX_ASPECT_RATION 가 지정되었을 경우, fx, fy, cx, cy의 파라미터 중 몇개인가, 또는 모든 것을 초기화할 필요가 있다.</param>
            <param name="distortion_coeffs">출력되는 1 x4의 폐해 계수 벡터 [k1, k2, p1, p2]. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrateCamera2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@)">
            <summary>
            내부 파라미터와 각 화상에 대한 외부 파라미터를 추정한다.
            </summary>
            <param name="object_points">오브젝트(calibration 패턴) 상의점군좌표의 결합 행렬.3xN 또는 Nx3의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="image_points">대응하는 화상상의 점군좌표의 결합 행렬. 2xN 또는 Nx2 의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="point_counts">각각의 뷰에 포함되는 점의 수를 나타내는 벡터.사이즈는 1xM 또는 Mx1 로 M는 뷰의 수.1xM or Mx1</param>
            <param name="image_size">화상 사이즈.내부 카메라 행렬의 초기화에만 이용된다.</param>
            <param name="intrinsic_matrix">출력되는 카메라 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS  나 CV_CALIB_FIX_ASPECT_RATION 가 지정되었을 경우, fx, fy, cx, cy의 파라미터 중 몇개인가, 또는 모든 것을 초기화할 필요가 있다.</param>
            <param name="distortion_coeffs">출력되는 1 x4의 폐해 계수 벡터 [k1, k2, p1, p2]. </param>
            <param name="rotation_vectors">출력되는 3 xM의 회전 벡터의 배열 (컴팩트한 회전 행렬의 표기에 대해서는 cvRodrigues2를 참조).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrateCamera2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@)">
            <summary>
            내부 파라미터와 각 화상에 대한 외부 파라미터를 추정한다.
            </summary>
            <param name="object_points">오브젝트(calibration 패턴) 상의점군좌표의 결합 행렬.3xN 또는 Nx3의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="image_points">대응하는 화상상의 점군좌표의 결합 행렬. 2xN 또는 Nx2 의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="point_counts">각각의 뷰에 포함되는 점의 수를 나타내는 벡터.사이즈는 1xM 또는 Mx1 로 M는 뷰의 수.1xM or Mx1</param>
            <param name="image_size">화상 사이즈.내부 카메라 행렬의 초기화에만 이용된다.</param>
            <param name="intrinsic_matrix">출력되는 카메라 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS  나 CV_CALIB_FIX_ASPECT_RATION 가 지정되었을 경우, fx, fy, cx, cy의 파라미터 중 몇개인가, 또는 모든 것을 초기화할 필요가 있다.</param>
            <param name="distortion_coeffs">출력되는 1 x4의 폐해 계수 벡터 [k1, k2, p1, p2]. </param>
            <param name="rotation_vectors">출력되는 3 xM의 회전 벡터의 배열 (컴팩트한 회전 행렬의 표기에 대해서는 cvRodrigues2를 참조).</param>
            <param name="translation_vectors">출력되는 3 xM의 병진 벡터의 배열.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrateCamera2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@,OpenCvSharp.CalibrationFlag)">
            <summary>
            내부 파라미터와 각 화상에 대한 외부 파라미터를 추정한다.
            </summary>
            <param name="object_points">오브젝트(calibration 패턴) 상의점군좌표의 결합 행렬.3xN 또는 Nx3의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="image_points">대응하는 화상상의 점군좌표의 결합 행렬. 2xN 또는 Nx2 의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="point_counts">각각의 뷰에 포함되는 점의 수를 나타내는 벡터.사이즈는 1xM 또는 Mx1 로 M는 뷰의 수.1xM or Mx1</param>
            <param name="image_size">화상 사이즈.내부 카메라 행렬의 초기화에만 이용된다.</param>
            <param name="intrinsic_matrix">출력되는 카메라 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS  나 CV_CALIB_FIX_ASPECT_RATION 가 지정되었을 경우, fx, fy, cx, cy의 파라미터 중 몇개인가, 또는 모든 것을 초기화할 필요가 있다.</param>
            <param name="distortion_coeffs">출력되는 1 x4의 폐해 계수 벡터 [k1, k2, p1, p2]. </param>
            <param name="rotation_vectors">출력되는 3 xM의 회전 벡터의 배열 (컴팩트한 회전 행렬의 표기에 대해서는 cvRodrigues2를 참조).</param>
            <param name="translation_vectors">출력되는 3 xM의 병진 벡터의 배열.</param>
            <param name="flags">처리 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrateCamera2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat@)">
            <summary>
            내부 파라미터와 각 화상에 대한 외부 파라미터를 추정한다.
            </summary>
            <param name="object_points">오브젝트(calibration 패턴) 상의점군좌표의 결합 행렬.3xN 또는 Nx3의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="image_points">대응하는 화상상의 점군좌표의 결합 행렬. 2xN 또는 Nx2 의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="point_counts">각각의 뷰에 포함되는 점의 수를 나타내는 벡터.사이즈는 1xM 또는 Mx1 로 M는 뷰의 수.1xM or Mx1</param>
            <param name="image_size">화상 사이즈.내부 카메라 행렬의 초기화에만 이용된다.</param>
            <param name="intrinsic_matrix">출력되는 카메라 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS  나 CV_CALIB_FIX_ASPECT_RATION 가 지정되었을 경우, fx, fy, cx, cy의 파라미터 중 몇개인가, 또는 모든 것을 초기화할 필요가 있다.</param>
            <param name="distortion_coeffs">출력되는 1 x4의 폐해 계수 벡터 [k1, k2, p1, p2]. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrateCamera2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@)">
            <summary>
            내부 파라미터와 각 화상에 대한 외부 파라미터를 추정한다. 
            </summary>
            <param name="object_points">오브젝트(calibration 패턴) 상의점군좌표의 결합 행렬.3xN 또는 Nx3의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="image_points">대응하는 화상상의 점군좌표의 결합 행렬. 2xN 또는 Nx2 의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="point_counts">각각의 뷰에 포함되는 점의 수를 나타내는 벡터.사이즈는 1xM 또는 Mx1 로 M는 뷰의 수.1xM or Mx1</param>
            <param name="image_size">화상 사이즈.내부 카메라 행렬의 초기화에만 이용된다.</param>
            <param name="intrinsic_matrix">출력되는 카메라 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS  나 CV_CALIB_FIX_ASPECT_RATION 가 지정되었을 경우, fx, fy, cx, cy의 파라미터 중 몇개인가, 또는 모든 것을 초기화할 필요가 있다.</param>
            <param name="distortion_coeffs">출력되는 1 x4의 폐해 계수 벡터 [k1, k2, p1, p2]. </param>
            <param name="rotation_vectors">출력되는 3 xM의 회전 벡터의 배열 (컴팩트한 회전 행렬의 표기에 대해서는 cvRodrigues2를 참조).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrateCamera2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@)">
            <summary>
            내부 파라미터와 각 화상에 대한 외부 파라미터를 추정한다.
            </summary>
            <param name="object_points">오브젝트(calibration 패턴) 상의점군좌표의 결합 행렬.3xN 또는 Nx3의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="image_points">대응하는 화상상의 점군좌표의 결합 행렬. 2xN 또는 Nx2 의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="point_counts">각각의 뷰에 포함되는 점의 수를 나타내는 벡터.사이즈는 1xM 또는 Mx1 로 M는 뷰의 수.1xM or Mx1</param>
            <param name="image_size">화상 사이즈.내부 카메라 행렬의 초기화에만 이용된다.</param>
            <param name="intrinsic_matrix">출력되는 카메라 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS  나 CV_CALIB_FIX_ASPECT_RATION 가 지정되었을 경우, fx, fy, cx, cy의 파라미터 중 몇개인가, 또는 모든 것을 초기화할 필요가 있다.</param>
            <param name="distortion_coeffs">출력되는 1 x4의 폐해 계수 벡터 [k1, k2, p1, p2]. </param>
            <param name="rotation_vectors">출력되는 3 xM의 회전 벡터의 배열 (컴팩트한 회전 행렬의 표기에 대해서는 cvRodrigues2를 참조).</param>
            <param name="translation_vectors">출력되는 3 xM의 병진 벡터의 배열.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrateCamera2(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvSize,OpenCvSharp.CvMat,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@,OpenCvSharp.CvMat@,OpenCvSharp.CalibrationFlag)">
            <summary>
            내부 파라미터와 각 화상에 대한 외부 파라미터를 추정한다.
            </summary>
            <param name="object_points">오브젝트(calibration 패턴) 상의점군좌표의 결합 행렬.3xN 또는 Nx3의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="image_points">대응하는 화상상의 점군좌표의 결합 행렬. 2xN 또는 Nx2 의 배열.N는 모든 뷰로의 점의 수의 합계이다.</param>
            <param name="point_counts">각각의 뷰에 포함되는 점의 수를 나타내는 벡터.사이즈는 1xM 또는 Mx1 로 M는 뷰의 수.1xM or Mx1</param>
            <param name="image_size">화상 사이즈.내부 카메라 행렬의 초기화에만 이용된다.</param>
            <param name="intrinsic_matrix">출력되는 카메라 행렬 (A) [fx 0 cx; 0 fy cy; 0 0 1]. CV_CALIB_USE_INTRINSIC_GUESS  나 CV_CALIB_FIX_ASPECT_RATION 가 지정되었을 경우, fx, fy, cx, cy의 파라미터 중 몇개인가, 또는 모든 것을 초기화할 필요가 있다.</param>
            <param name="distortion_coeffs">출력되는 1 x4의 폐해 계수 벡터 [k1, k2, p1, p2]. </param>
            <param name="rotation_vectors">출력되는 3 xM의 회전 벡터의 배열 (컴팩트한 회전 행렬의 표기에 대해서는 cvRodrigues2를 참조).</param>
            <param name="translation_vectors">출력되는 3 xM의 병진 벡터의 배열.</param>
            <param name="flags">처리 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrationMatrixValues(OpenCvSharp.CvMat,OpenCvSharp.CvSize)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="camera_matrix">내부 파라미터 행렬(예를 들면 cvCalibrateCamera2 에 의해서 구할 수 있던 것). </param>
            <param name="image_size">화상의 사이즈. 픽셀 단위.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrationMatrixValues(OpenCvSharp.CvMat,OpenCvSharp.CvSize,System.Double,System.Double)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="camera_matrix">내부 파라미터 행렬(예를 들면 cvCalibrateCamera2 에 의해서 구할 수 있던 것). </param>
            <param name="image_size">화상의 사이즈. 픽셀 단위.</param>
            <param name="aperture_width">aperture 폭.실제 길이 단위.</param>
            <param name="aperture_height">aperture 높이.실제 길이 단위.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrationMatrixValues(OpenCvSharp.CvMat,OpenCvSharp.CvSize,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="camera_matrix">내부 파라미터 행렬(예를 들면 cvCalibrateCamera2 에 의해서 구할 수 있던 것). </param>
            <param name="image_size">화상의 사이즈. 픽셀 단위</param>
            <param name="aperture_width">aperture 폭.실제 길이 단위.</param>
            <param name="aperture_height">aperture 높이.실제 길이 단위.</param>
            <param name="fovx">x-방향의 화각. degree 단위.</param>
            <param name="fovy">y-방향의 화각. degree 단위.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrationMatrixValues(OpenCvSharp.CvMat,OpenCvSharp.CvSize,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="camera_matrix">내부 파라미터 행렬(예를 들면 cvCalibrateCamera2 에 의해서 구할 수 있던 것). </param>
            <param name="image_size">화상의 사이즈. 픽셀 단위</param>
            <param name="aperture_width">aperture 폭.실제 길이 단위.</param>
            <param name="aperture_height">aperture 높이.실제 길이 단위.</param>
            <param name="fovx">x-방향의 화각. degree 단위.</param>
            <param name="fovy">y-방향의 화각. degree 단위.</param>
            <param name="focal_length">촛점거리. 실제 길이 단위.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrationMatrixValues(OpenCvSharp.CvMat,OpenCvSharp.CvSize,System.Double,System.Double,System.Double@,System.Double@,System.Double@,OpenCvSharp.CvPoint2D64f@)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="camera_matrix">내부 파라미터 행렬(예를 들면 cvCalibrateCamera2 에 의해서 구할 수 있던 것). </param>
            <param name="image_size">화상의 사이즈. 픽셀 단위</param>
            <param name="aperture_width">aperture 폭.실제 길이 단위.</param>
            <param name="aperture_height">aperture 높이.실제 길이 단위.</param>
            <param name="fovx">x-방향의 화각. degree 단위.</param>
            <param name="fovy">y-방향의 화각. degree 단위.</param>
            <param name="focal_length">촛점거리. 실제 길이 단위.</param>
            <param name="principal_point">principal point(광학 중심) 실제 길이 단위.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CalibrationMatrixValues(OpenCvSharp.CvMat,OpenCvSharp.CvSize,System.Double,System.Double,System.Double@,System.Double@,System.Double@,OpenCvSharp.CvPoint2D64f@,System.Double@)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="camera_matrix">내부 파라미터 행렬(예를 들면 cvCalibrateCamera2 에 의해서 구할 수 있던 것). </param>
            <param name="image_size">화상의 사이즈. 픽셀 단위.</param>
            <param name="aperture_width">aperture 폭.실제 길이 단위.</param>
            <param name="aperture_height">aperture 높이.실제 길이 단위.</param>
            <param name="fovx">x-방향의 화각. degree 단위.</param>
            <param name="fovy">y-방향의 화각. degree 단위.</param>
            <param name="focal_length">촛점거리. 실제 길이 단위.</param>
            <param name="principal_point">principal point(광학 중심) 실제 길이 단위.</param>
            <param name="pixel_aspect_ratio">픽셀의 어스펙트비 fy/fx</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CamShift(OpenCvSharp.CvArr,OpenCvSharp.CvRect,OpenCvSharp.CvTermCriteria,OpenCvSharp.CvConnectedComp)">
            <summary>
            객체 중심, 크기 및 위치을 구한다 
             </summary> 
             <param name="prob_image"> 개체 히스토그램 Back projection</param> 
             <param name="window"> 서치윈도우 초기화 </param> 
             <param name="criteria"> 윈도우 서치를 종료하는 조건. </param> 
             <param name="comp"> 결과 구조체. 수렴하여 서치 윈도우의 좌표 (comp -> rect 필드), 그리고 윈도우의 모든 픽셀의 합계 (comp -> area 필드)가 포함된다. </param> 
             <returns> </returns> 
        </member>
        <member name="M:OpenCvSharp.Cv.CamShift(OpenCvSharp.CvArr,OpenCvSharp.CvRect,OpenCvSharp.CvTermCriteria,OpenCvSharp.CvConnectedComp,System.Nullable{OpenCvSharp.CvBox2D})">
            <summary>
              객체 중심, 크기 및 위치를 구한다 
             </summary> 
             <param name="prob_image"> 개체 히스토그램 Back projection </param> 
             <param name="window"> 서치 윈도우 초기화 </param> 
             <param name="criteria"> 윈도우 서치를 종료하는 조건. </param> 
             <param name="comp"> 결과 구조체. 수렴하여 검색 윈도우의 좌표 (comp -> rect 필드), 그리고 윈도우의 모든 픽셀의 합계 (comp -> area 필드)가 포함된다. </param> 
             <param name="box"> 개체의 외접사각형. NULL이 아닌 경우, 개체의 크기와 위치가 포함된다. </param> 
             <returns> </returns> 
        </member>
        <member name="M:OpenCvSharp.Cv.Canny(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            Canny 알고리즘을 사용하고, 입력 화상 image에 포함되어 있는 엣지를 검출해, 그것을 출력 화상 edges 에 보존하는 [aperture_size=3]. 
            threshold1 와 threshold2 의 쳐 작은 편이 엣지끼리를 접속하기 위해서 이용되어 큰 편이 강한 엣지의 초기 검출에 이용된다. 
            </summary>
            <param name="image">입력 화상</param>
            <param name="edges">이 함수에 의해서 얻을 수 있던 엣지 화상</param>
            <param name="threshold1">1번째의 스레스홀드</param>
            <param name="threshold2">2번째의 스레스홀드</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Canny(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double,OpenCvSharp.ApertureSize)">
            <summary>
            Canny 알고리즘을 사용하고, 입력 화상 image에 포함되어 있는 엣지를 검출해, 그것을 출력 화상 edges 에 보존한다. 
            threshold1 와 threshold2 의 쳐 작은 편이 엣지끼리를 접속하기 위해서 이용되어 큰 편이 강한 엣지의 초기 검출에 이용된다. 
            </summary>
            <param name="image">입력 화상</param>
            <param name="edges">이 함수에 의해서 얻을 수 있던 엣지 화상</param>
            <param name="threshold1">1번째의 스레스홀드</param>
            <param name="threshold2">2번째의 스레스홀드</param>
            <param name="aperture_size">Sobel 연산자의 aperture_size</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CartToPolar(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            2 차원 벡터의 각도와 크기를 계산한다
            </summary>
            <param name="x">x좌표의 배열.</param>
            <param name="y">y좌표의 배열.</param>
            <param name="magnitude">크기의 출력 배열. 필요하지 않으면 null을 세트 한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CartToPolar(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            2 차원 벡터의 각도와 크기를 계산한다
            </summary>
            <param name="x">x좌표의 배열.</param>
            <param name="y">y좌표의 배열.</param>
            <param name="magnitude">크기의 출력 배열. 필요하지 않으면 null이 세트 된다.</param>
            <param name="angle">각도의 출력 배열. 필요하지 않으면 null이 세트 된다. 각도는 라디안(0..2π), 또는 번(0..360о)으로 측정된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CartToPolar(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.AngleUnit)">
            <summary>
            2 차원 벡터의 각도와 크기를 계산한다
            </summary>
            <param name="x">x좌표의 배열.</param>
            <param name="y">y좌표의 배열.</param>
            <param name="magnitude">크기의 출력 배열. 필요하지 않으면 null이 세트 된다.</param>
            <param name="angle">각도의 출력 배열.필요하지 않으면 null이 세트 된다. 각도는 라디안(0..2π), 또는 번(0..360о)으로 측정된다.</param>
            <param name="unit">각도를 나타내기 위해서 라디안(디폴트치), 또는 각도의 어느 쪽을 이용하는지를 나타내는 플래그.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Cbrt(System.Single)">
            <summary>
            수의 입방근을 계산한다.
            이것은, 통상, pow(value,1./3)(을)를 계산하는 것보다도 고속으로  있다.한편, 부의 인수도 올바르게 처리된다.
            또, 특별한 값(±Inf, NaN)는 취급할 수 없다. 
            </summary>
            <param name="value">부동 소수점형의 입력치</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Ceil(System.Double)">
            <summary>
            인수보다 작지 않은 최소의 정수치를 돌려준다.
            </summary>
            <param name="value">부동 소수점형의 입력치</param>
            <returns>인수보다 작지 않은 최소의 정수치</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CheckArr(OpenCvSharp.CvArr)">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다 
            </summary>
            <param name="arr">체크 대상의 배열</param>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CheckArr(OpenCvSharp.CvArr,OpenCvSharp.CheckArrFlag)">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다 
            </summary>
            <param name="arr">체크 대상의 배열</param>
            <param name="flags">처리 플래그</param>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CheckArr(OpenCvSharp.CvArr,OpenCvSharp.CheckArrFlag,System.Double,System.Double)">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다
            </summary>
            <param name="arr">체크 대상의 배열</param>
            <param name="flags">처리 플래그</param>
            <param name="min_val">유효한 치역의 하한치(이 값이상).CheckArrFlag.Range 가 세트 되고 있을 때 마셔 유효.</param>
            <param name="max_val">유효한 치역의 상한치(이 값미만).CheckArrFlag.Range 가 세트 되고 있을 때 마셔 유효.</param>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CheckArray(OpenCvSharp.CvArr)">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다. CheckArr의 앨리어스(alias).
            </summary>
            <param name="arr">체크 대상의 배열</param>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CheckArray(OpenCvSharp.CvArr,OpenCvSharp.CheckArrFlag)">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다. CheckArr의 앨리어스(alias). 
            </summary>
            <param name="arr">체크 대상의 배열</param>
            <param name="flags">처리 플래그</param>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CheckArray(OpenCvSharp.CvArr,OpenCvSharp.CheckArrFlag,System.Double,System.Double)">
            <summary>
            입력 배열의 모든 요소에 대해서, 무효인 값이 존재하지 않는지를 체크한다. CheckArr의 앨리어스(alias). 
            </summary>
            <param name="arr">체크 대상의 배열</param>
            <param name="flags">처리 플래그</param>
            <param name="min_val">유효한 치역의 하한치(이 값이상).CheckArrFlag.Range 가 세트 되고 있을 때 마샬 유효.</param>
            <param name="max_val">유효한 치역의 상한치(이 값미만).CheckArrFlag.Range 가 세트 되고 있을 때 마샬 유효.</param>
            <returns>체크가 올바르게 끝나면 true</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CheckContourConvexity(OpenCvSharp.CvArr)">
            <summary>
            윤곽이 凸인지를 조사한다
            </summary>
            <param name="contour">테스트하는 윤곽(점렬의 시퀸스나 배열)</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CheckTermCriteria(OpenCvSharp.CvTermCriteria,System.Double,System.Int32)">
            <summary>
            종료 조건을 체크해, type= Iteration|Epsilon 로 설정해, 반복수의 max_iter와 eprilon 의 양쪽 모두가 유효하게 되도록(듯이) 변환한다
            </summary>
            <param name="criteria"></param>
            <param name="default_eps"></param>
            <param name="default_max_iters"></param>
            <returns>변환 결과</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Circle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Circle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Circle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Circle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">중심 좌표와 반경의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Circle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Circle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Circle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Circle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">중심 좌표와 반경의 소수점 이하의 자리수를 나타내는 비트수.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawCircle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawCircle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawCircle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawCircle(OpenCvSharp.CvArr,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center_x">원의 중심의 x좌표</param>
            <param name="center_y">원의 중심의 y좌표</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">중심 좌표와 반경의 소수점 이하의 자리수를 나타내는 비트수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawCircle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawCircle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawCircle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.DrawCircle(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvColor,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            원을 그린다
            </summary>
            <param name="img">화상</param>
            <param name="center">원의 중심</param>
            <param name="radius">원의 반경</param>
            <param name="color">원의 색</param>
            <param name="thickness">선의 폭. 부(거짓)의 값을 지정했을 경우는 전부 칠해진다.</param>
            <param name="line_type">선의 종류</param>
            <param name="shift">중심 좌표와 반경의 소수점 이하의 자리수를 나타내는 비트수.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ClearGraph(OpenCvSharp.CvGraph)">
            <summary>
            그래프로부터 모든 정점과 엣지를 삭제한다
            </summary>
            <param name="graph">그래프</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ClearHist(OpenCvSharp.CvHistogram)">
            <summary>
            히스토그램을 클리어 한다.
            조밀한 히스토그램의 경우, 모든 히스토그램의 빈을 0에 세트 한다, 또 희소 히스토그램의 경우는, 모든 히스토그램의 빈을 삭제한다.
            </summary>
            <param name="hist">대상의 히스토그램에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ClearMemStorage(OpenCvSharp.CvMemStorage)">
            <summary>
            스토리지의 선두(빈영역의 경계)를, 제일 최초로 되돌린다.
            이 함수는 메모리를 해제하지 않는다. 만약 스토리지가 부모를 가지는 경우, 이 함수는 부모에게 모든 블록을 돌려준다.
            </summary>
            <param name="storage">대상의 스토리지에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ClearND(OpenCvSharp.CvArr,System.Int32[])">
            <summary>
            조밀한 배열과 희소 배열의 지정한 요소를 클리어(0에 세트) 한다. 요소가 존재하지 않으면, 이 함수는 아무것도 하지 않는다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="idx">요소의 인덱스의 배열(가변장 인수)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ClearSeq(OpenCvSharp.CvSeq)">
            <summary>
            시퀸스를 클리어 한다
            </summary>
            <param name="seq">시퀸스</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ClearSet(OpenCvSharp.CvSet)">
            <summary>
            
            </summary>
            <param name="set"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ClearSubdivVoronoi2D(OpenCvSharp.CvSubdiv2D)">
            <summary>
            모든 가상점을 삭제한다. 
            이 함수의 전회의 소환 후에 세분비율이 변경되었을 경우, 이 함수는 cvCalcSubdivVoronoi2D 의 내부에서 불린다. 
            </summary>
            <param name="subdiv">들로네 subdivision</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ClipLine(OpenCvSharp.CvSize,OpenCvSharp.CvPoint@,OpenCvSharp.CvPoint@)">
            <summary>
            선분을 화상 영역에서 잘라낸다
            </summary>
            <param name="img_size">화상의 크기</param>
            <param name="pt1">선분의 1번째의 단 점. 이 값은 이 함수에 의해서 변경된다.</param>
            <param name="pt2">선분의 2번째의 단 점. 이 값은 이 함수에 의해서 변경된다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Clone(System.IntPtr)">
            <summary>
            오브젝트의 카피를 작성한다
            </summary>
            <param name="struct_ptr">카피하는 오브젝트</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Clone``1(``0)">
            <summary>
            오브젝트의 카피를 작성한다
            </summary>
            <param name="struct_ptr">카피하는 오브젝트</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CloneGraph(OpenCvSharp.CvGraph,OpenCvSharp.CvMemStorage)">
            <summary>
            그래프를 카피한다
            </summary>
            <param name="graph">카피하는 그래프</param>
            <param name="storage">카피를 위한 컨테이너</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CloneImage(OpenCvSharp.IplImage)">
            <summary>
            헤더, ROI, 데이터를 포함한 화상의 완전한 카피를 작성한다. 
            </summary>
            <param name="image">오리지날 화상</param>
            <returns>카피된 화상</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CloneMat(OpenCvSharp.CvMat)">
            <summary>
            입력 행렬의 카피를 작성해 돌려준다
            </summary>
            <param name="mat">입력 행렬</param>
            <returns>카피된 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CloneMatND(OpenCvSharp.CvMatND)">
            <summary>
            다차원 배열의 완전한 카피를 작성한다
            </summary>
            <param name="mat">입력 행렬</param>
            <returns>카피된 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CloneSeq(OpenCvSharp.CvSeq)">
            <summary>
            입력 행렬의 카피를 작성해 돌려준다
            </summary>
            <param name="seq">시퀸스</param>
            <returns>카피된 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CloneSeq(OpenCvSharp.CvSeq,OpenCvSharp.CvMemStorage)">
            <summary>
            입력 행렬의 카피를 작성해 돌려준다
            </summary>
            <param name="seq">시퀸스</param>
            <param name="storage">새로운 시퀸스 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 입력 순서에 포함되는 스토리지를 사용한다.</param>
            <returns>카피된 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CloneSeq``1(OpenCvSharp.CvSeq{``0})">
            <summary>
            입력 행렬의 카피를 작성해 돌려준다
            </summary>
            <param name="seq">시퀸스</param>
            <returns>카피된 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CloneSeq``1(OpenCvSharp.CvSeq{``0},OpenCvSharp.CvMemStorage)">
            <summary>
            입력 행렬의 카피를 작성해 돌려준다
            </summary>
            <param name="seq">시퀸스</param>
            <param name="storage">새로운 시퀸스 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 입력 순서에 포함되는 스토리지를 사용한다.</param>
            <returns>카피된 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CloneSparseMat(OpenCvSharp.CvSparseMat)">
            <summary>
            
            </summary>
            <param name="mat">입력행렬</param>
            <returns>복사된 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.Cmp(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.ArrComparison)">
            <summary>
            두 개의 배열의 각 요소마다의 비교를 실시한다. 대응하는 요소를 비교해, 출력 배열의 값에 세트 한다.
            dst(I) = src1(I) op src2(I) .
            비교 결과가 참(true)이면 dst(I)에는 0 xff(요소 모든 비트가 1 )를 세트 해, 그 이외의 경우(FALSE)이면 0 을 세트 한다.
            </summary>
            <param name="src1">입력 배열(싱글 채널)</param>
            <param name="src2">2번째의 입력 배열.어느 쪽의 입력 배열도 싱글 채널이 아니면 안된다.</param>
            <param name="dst">출력 배열(타입은 8u 나 8s 가 아니면 안 된다)</param>
            <param name="cmp_op">비교 방법을 나타내는 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CmpS(OpenCvSharp.CvArr,System.Double,OpenCvSharp.CvArr,OpenCvSharp.ArrComparison)">
            <summary>
            배열 요소와 스칼라를 비교해, 출력 배열의 값을 세트 한다.
            dst(I) = src1(I) op scalar .
            비교 결과가 참(true)이면 dst(I)에는 0 xff(요소 모든 비트가 1 )를 세트 해, 그 이외의 경우(false)이면 0 을 세트 한다.
            </summary>
            <param name="src">입력 배열(싱글 채널)</param>
            <param name="value">각각의 배열 요소라고 비교되는 스칼라</param>
            <param name="dst">출력 배열(타입은 8u 나 8s 가 아니면 안 된다)</param>
            <param name="cmp_op">비교 방법을 나타내는 플래그</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConDensInitSampleSet(OpenCvSharp.CvConDensation,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            
            </summary>
            <param name="condens"></param>
            <param name="lower_bound"></param>
            <param name="upper_bound"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConDensUpdateByTime(OpenCvSharp.CvConDensation)">
            <summary>
            
            </summary>
            <param name="condens"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.CompareHist(OpenCvSharp.CvHistogram,OpenCvSharp.CvHistogram,OpenCvSharp.HistogramComparison)">
            <summary>
            2개의 조밀한 히스토그램을 비교한다.
            희소 히스토그램, 혹은 중요 된 점이 모인 것 같은, 보다 일반적인 구조를 비교하기 위해서는, 함수 cvCalcEMD2 를 이용하는 편이 좋은 경우도 있다.
            </summary>
            <param name="hist1">1번째의 조밀한 히스토그램</param>
            <param name="hist2">2번째의 조밀한 히스토그램</param>
            <param name="method">비교 방법</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ComputeCorrespondEpilines(OpenCvSharp.CvMat,System.Int32,OpenCvSharp.CvMat,OpenCvSharp.CvMat@)">
            <summary>
            2개의 화상간의 점대응으로부터 기초 행렬(F행렬)을 계산한다
            </summary>
            <param name="points">입력점으로 크기는 2xN, Nx2, 3 xN, 또는 Nx3의 배열이다 (여기서 N 는 점의 수). 멀티 채널의 1 xN, 또는 Nx1 의 배열도 사용 가능.</param>
            <param name="which_image">points를 포함한 화상의 인덱스(1 또는 2).</param>
            <param name="fundamental_matrix">기초 행렬</param>
            <param name="correspondent_lines">계산된 에피포라선. 크기는 3xN 또 Nx3 의 배열.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ContourArea(OpenCvSharp.CvArr)">
            <summary>
            윤곽 전체의 영역, 또는 윤곽의 일부를 계산한다. 
            후자의 경우, 윤곽의 호와 선택된 2점을 연결하는 현으로 단락지어진 에리어 전체가 계산된다.
            </summary>
            <param name="contour">윤곽(정점의 시퀸스 또는 배열)</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ContourArea(OpenCvSharp.CvArr,OpenCvSharp.CvSlice)">
            <summary>
            윤곽 전체의 영역, 또는 윤곽의 일부를 계산한다. 
            후자의 경우, 윤곽의 호와 선택된 2점을 연결하는 현으로 단락지어진 에리어 전체가 계산된다.
            </summary>
            <param name="contour">윤곽(정점의 시퀸스 또는 배열)</param>
            <param name="slice">주목 영역의 윤곽의 시점과 종점.디폴트에서는 전영역이 계산된다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ContourFromContourTree(OpenCvSharp.CvContourTree,OpenCvSharp.CvMemStorage,OpenCvSharp.CvTermCriteria)">
            <summary>
            트리로부터 윤곽을 복원한다
            </summary>
            <param name="tree">윤곽의 2분목</param>
            <param name="storage">복원한 윤곽의 출력처</param>
            <param name="criteria">복원을 멈추는 기준</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ContoursMoments(OpenCvSharp.CvSeq,OpenCvSharp.CvMoments)">
            <summary>
            Alias for Moments with CvSeq contours
            </summary>
            <param name="contour"></param>
            <param name="moments"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ContourPerimeter(OpenCvSharp.CvArr)">
            <summary>
            cvArcLength(curve,Whole_Seq,1) 의 앨리어스(alias)
            </summary>
            <param name="contour"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvertImage(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.ConvertImageFlag)">
            <summary>
            화상을 필요에 따라서 변환한다
            </summary>
            <param name="src">입력 화상.</param>
            <param name="dst">출력 화상.1 채널 8 비트 화상, 혹은, 3 채널 8 비트 화상이다.</param>
            <param name="flags">조작 플래그.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvertPointsHomogenious(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            2매의 화상간의 점대응으로부터 기초 행렬(F행렬)을 계산한다
            </summary>
            <param name="src">입력점의 배열.크기는 2xN, Nx2, 3xN, Nx3, 4 xN, 또는 Nx4(여기서 N는 점의 수).멀티 채널의 1 xN 또는 Nx1의 배열도 사용 가능.</param>
            <param name="dst">출력점의 배열.입력 배열과 같은 수의 점이 포함되는 차원수는, 같을, 혹은 입력보다  1적은가  1크다.그리고 2..4의 범위내가 아니면 안된다. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvertPointsHomogeneous(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            2매의 화상간의 점대응으로부터 기초 행렬(F행렬)을 계산한다
            </summary>
            <param name="src">입력점의 배열.크기는 2xN, Nx2, 3xN, Nx3, 4 xN, 또는 Nx4(여기서 N는 점의 수).멀티 채널의 1 xN 또는 Nx1의 배열도 사용 가능.</param>
            <param name="dst">출력점의 배열.입력 배열과 같은 수의 점이 포함되는 차원수는, 같을, 혹은 입력보다  1적은가  1크다.그리고 2..4의 범위내가 아니면 안된다. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvertScale(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[scale=1, shift=0]
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(깊이는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvertScale(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[shift=0]
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">스케일링 계수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvertScale(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">ScaleAbs 계수</param>
            <param name="shift">스케일링 한 입력 배열의 요소에 가세하는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CvtScale(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[scale=1, shift=0]
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(깊이는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CvtScale(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[shift=0]
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(심도 8 u)</param>
            <param name="scale">스케일링 계수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CvtScale(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">스케일링 계수</param>
            <param name="shift">스케일링 한 입력 배열의 요소에 가세하는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Scale(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[scale=1, shift=0]
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(깊이는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Scale(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.[shift=0]
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(깊이는 8 u)</param>
            <param name="scale">스케일링 계수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Scale(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            임의의 선형 변환에 의해서 배열의 값을 변환한다.
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(심도는 8 u)</param>
            <param name="scale">스케일링 계수</param>
            <param name="shift">스케일링 한 입력 배열의 요소에 가세하는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Convert(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            scale=1, shift=0 로의 cvConvertScale 호출. 임의의 선형 변환에 의해서 배열의 값을 변환한다.
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(깊이는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvertScaleAbs(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없음 정수형의 배열로 변환한다.[scale=1, shift=0]
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(깊이는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvertScaleAbs(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없음 정수형의 배열로 변환한다.[shift=0]
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">ScaleAbs 계수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvertScaleAbs(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없음 정수형의 배열로 변환한다.
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(심도는 8 u)</param>
            <param name="scale">ScaleAbs 계수</param>
            <param name="shift">스케일링 한 입력 배열의 요소에 가세하는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CvtScaleAbs(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없음 정수형의 배열로 변환한다.[scale=1, shift=0]
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(깊이는 8 u)</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CvtScaleAbs(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없음 정수형의 배열로 변환한다.[shift=0]
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(데프스는 8 u)</param>
            <param name="scale">ScaleAbs 계수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CvtScaleAbs(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double,System.Double)">
            <summary>
            임의의 선형 변환에 의해서, 입력 배열의 요소를 8비트 부호 없음 정수형의 배열로 변환한다.
            </summary>
            <param name="src">입력 배열</param>
            <param name="dst">출력 배열(심도는 8 u)</param>
            <param name="scale">ScaleAbs 계수</param>
            <param name="shift">스케일링 한 입력 배열의 요소에 가세하는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvexHull2(OpenCvSharp.CvArr,OpenCvSharp.CvMat)">
            <summary>
            Sklansky의 알고리즘을 사용해 2 차원의 점렬의 철포를 찾아낸다
            </summary>
            <param name="input">32비트 정수형, 혹은 부동 소수점형으로 나타내진 2 차원의 점의 시퀸스 또는 배열. </param>
            <param name="hull_storage">凸를 보관한 출력 배열. 1 차원이 아니면 안됨, 입력한 배열/순서와 같은 요소수를 가지지 않으면 안 된다.출력시로 헤더가 변경되는：행과 열의 수가, 철포의 사이즈까지 절약할 수 있다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvexHull2(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.ConvexHullOrientation)">
            <summary>
            Sklansky의 알고리즘을 사용해 2 차원의 점렬의 철포를 찾아낸다
            </summary>
            <param name="input">32비트 정수형, 혹은 부동 소수점형으로 나타내진 2 차원의 점의 시퀸스 또는 배열. </param>
            <param name="hull_storage">凸를 보관한 출력 배열. 1 차원이 아니면 안됨, 입력한 배열/순서와 같은 요소수를 가지지 않으면 안 된다.출력시로 헤더가 변경되는：행과 열의 수가, 철포의 사이즈까지 절약할 수 있다.</param>
            <param name="orientation">凸를 구성하는 데이터의 줄.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvexHull2(OpenCvSharp.CvArr,OpenCvSharp.CvMat,OpenCvSharp.ConvexHullOrientation,System.Boolean)">
            <summary>
            Sklansky의 알고리즘을 사용해 2 차원의 점렬의 철포를 찾아낸다
            </summary>
            <param name="input">32비트 정수형, 혹은 부동 소수점형으로 나타내진 2 차원의 점의 시퀸스 또는 배열. </param>
            <param name="hull_storage">凸를 보관한 출력 배열. 1 차원이 아니면 안됨, 입력한 배열/순서와 같은 요소수를 가지지 않으면 안 된다.출력시로 헤더가 변경되는：행과 열의 수가, 凸포의 사이즈까지 절약할 수 있다.</param>
            <param name="orientation">凸를 구성하는 데이터의 줄.</param>
            <param name="return_points">이 파라미터가 false로, hull_storage가 배열의 경우에는 인덱스가, 메모리스트레이지의 경우에는 포인터가 출력 배열에 보관된다. true의 경우, 凸를 나타내는 점의 집합 자신이 보관된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvexHull2(OpenCvSharp.CvArr)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">Sequence or array of 2D points with 32-bit integer or floating-point coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvexHull2(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage)">
            <summary>
            Sklansky의 알고리즘을 사용해 2 차원의 점렬의 凸를 찾아낸다
            </summary>
            <param name="input">32비트 정수형, 혹은 부동 소수점형으로 나타내진 2 차원의 점의 시퀸스 또는 배열.</param>
            <param name="hull_storage">凸를 보관한 메모리스토레이지.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvexHull2(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.ConvexHullOrientation)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">Sequence or array of 2D points with 32-bit integer or floating-point coordinates. </param>
            <param name="hull_storage">The destination array (CvMat*) or memory storage (CvMemStorage*) that will store the convex hull. If it is array, it should be 1d and have the same number of elements as the input array/sequence. On output the header is modified so to truncate the array downto the hull size. </param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE or CV_COUNTER_CLOCKWISE. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvexHull2(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,OpenCvSharp.ConvexHullOrientation,System.Boolean)">
            <summary>
            Finds convex hull of point set
            </summary>
            <param name="input">Sequence or array of 2D points with 32-bit integer or floating-point coordinates. </param>
            <param name="hull_storage">The destination array (CvMat*) or memory storage (CvMemStorage*) that will store the convex hull. If it is array, it should be 1d and have the same number of elements as the input array/sequence. On output the header is modified so to truncate the array downto the hull size. </param>
            <param name="orientation">Desired orientation of convex hull: CV_CLOCKWISE or CV_COUNTER_CLOCKWISE. </param>
            <param name="return_points">If true, the points themselves will be stored in the hull instead of indices if hull_storage is array, or pointers if hull_storage is memory storage. </param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvexityDefects(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            윤곽의 凸로부터 오목한 상태 결손을 찾아낸다
            </summary>
            <param name="contour">입력 윤곽</param>
            <param name="convexhull">凸의 점 그 자체가 아니고, 윤곽의 점에의 포인터 또는 인덱스를 가진다, 즉 cvConvexHull2의 return_points 파라미터가 0인 cvConvexHull2 를 사용해 얻을 수 있던 凸.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.ConvexityDefects(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage)">
            <summary>
            윤곽의 凸로부터 오목한 상태 결손을 찾아낸다
            </summary>
            <param name="contour">입력 윤곽</param>
            <param name="convexhull">凸의 점 그 자체가 아니고, 윤곽의 점에의 포인터 또는 인덱스를 가진다, 즉 cvConvexHull2의 return_points 파라미터가 0인 cvConvexHull2 를 사용해 얻을 수 있던 凸.</param>
            <param name="storage">오목한 상태 결손의 출력 순서를 보관하는 변수.이것이 null인 경우, 대신에, 윤곽 혹은 凸의 스토리지가(이 차례로) 이용된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Copy(OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            하나의 배열을 다른 배열에 카피한다.
            카피때는, ROI 와 COI 가 이용된다.카피원배열과 카피처 배열은, 같은 형태, 같은 차원, 같은 사이즈가 아니면 안된다.
            </summary>
            <param name="src">카피원화상</param>
            <param name="dst">카피처의 화상</param>
        </member>
        <member name="M:OpenCvSharp.Cv.Copy(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            하나의 배열을 다른 배열에 카피한다.
            카피때는, ROI 와 COI 가 이용된다.카피원배열과 카피처 배열은, 같은 형태, 같은 차원, 같은 사이즈가 아니면 안된다.
            </summary>
            <param name="src">카피원화상</param>
            <param name="dst">카피처의 화상</param>
            <param name="mask">8 비트 싱글 채널 배열의 처리 마스크.카피처의 배열의 변경하는 요소를 지정한다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CopyMakeBorder(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.BorderType)">
            <summary>
            화상을 카피해, 그 주위에 경계선을 붙인다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="offset">입력 화상(혹은 ROI)이 카피되는 출력 화상내 구형 영역의 좌상 카도자안표 (좌하에 원점을 가지는 화상의 경우는, 좌하 카도자안표).</param>
            <param name="bordertype">카피된 구형 영역의 주위에 생성하는 경계선의 타입</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CopyMakeBorder(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.BorderType,OpenCvSharp.CvScalar)">
            <summary>
            화상을 카피해, 그 주위에 경계선을 붙인다
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="offset">입력 화상(혹은 ROI)이 카피되는 출력 화상내 구형 영역의 좌상 카도자안표 (좌하에 원점을 가지는 화상의 경우는, 좌하 카도자안표).</param>
            <param name="bordertype">카피된 구형 영역의 주위에 생성하는 경계선의 타입</param>
            <param name="value">bordertype=Constant 의 경우는 경계를 묻는 값</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CornerEigenValsAndVecs(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Int32)">
            <summary>
            코너 검출을 위해서 화상 블록의 고유치와 고유 벡터를 계산한다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="eigenvv">결과 보존용의 화상.입력 화상의 6배의 사이즈가 필요.</param>
            <param name="block_size">인접 블록의 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CornerEigenValsAndVecs(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Int32,OpenCvSharp.ApertureSize)">
            <summary>
            코너 검출을 위해서 화상 블록의 고유치와 고유 벡터를 계산한다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="eigenvv">결과 보존용의 화상.입력 화상의 6배의 사이즈가 필요.</param>
            <param name="block_size">인접 블록의 사이즈</param>
            <param name="aperture_size">Sobel 연산자의 aperture_size(cvSobel 참조).</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CornerHarris(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Int32)">
            <summary>
            입력 화상에 대해 Harris 엣지 검출을 실시한다. 
            cvCornerMinEigenVal 이나 cvCornerEigenValsAndVecs와 같은 기능을 가져, 각각의 피크셀에 대하고,
            block_size×block_size 인접에 있어서의 2×2 사이즈의 구배로부터 공변동 행렬 M 를 계산한다.그 후, 
            det(M) - k * trace(M)^2
            를 계산해, 검출 결과적으로 출력 화상에 보존한다.결과 화상의 극대치를 요구하는 것으로, 화상의 코너를 검출할 수 있다. 
            </summary>
            <param name="image">입력 화상</param>
            <param name="harris_responce">검출 결과를 보존하는 화상.입력 화상 image 와 같은 사이즈가 아니면 안 된다.</param>
            <param name="block_size">인접 블록의 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CornerHarris(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Int32,OpenCvSharp.ApertureSize)">
            <summary>
            입력 화상에 대해 Harris 엣지 검출을 실시한다. 
            cvCornerMinEigenVal 이나 cvCornerEigenValsAndVecs와 같은 기능을 가져, 각각의 피크셀에 대하고,
            block_size×block_size 인접에 있어서의 2×2 사이즈의 구배로부터 공변동 행렬 M 를 계산한다.그 후, 
            det(M) - k * trace(M)^2
            를 계산해, 검출 결과적으로 출력 화상에 보존한다.결과 화상의 극대치를 요구하는 것으로, 화상의 코너를 검출할 수 있다. 
            </summary>
            <param name="image">입력 화상</param>
            <param name="harris_responce">검출 결과를 보존하는 화상.입력 화상 image 와 같은 사이즈가 아니면 안 된다.</param>
            <param name="block_size">인접 블록의 사이즈</param>
            <param name="aperture_size">Sobel 연산자의 aperture_size(cvSobel 참조).입력 화상이 부동 소수점형인 경우, 이 파라미터는 차분을 계산하기 위해서 이용되는 고정 소수점형 필터의 수를 나타낸다</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CornerHarris(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Int32,OpenCvSharp.ApertureSize,System.Double)">
            <summary>
            입력 화상에 대해 Harris 엣지 검출을 실시한다. 
            cvCornerMinEigenVal 이나 cvCornerEigenValsAndVecs와 같은 기능을 가져, 각각의 피크셀에 대하고,
            block_size×block_size 인접에 있어서의 2×2 사이즈의 구배로부터 공변동 행렬 M 를 계산한다.그 후, 
            det(M) - k * trace(M)^2
            를 계산해, 검출 결과적으로 출력 화상에 보존한다.결과 화상의 극대치를 요구하는 것으로, 화상의 코너를 검출할 수 있다. 
            </summary>
            <param name="image">입력 화상</param>
            <param name="harris_responce">검출 결과를 보존하는 화상.입력 화상 image 와 같은 사이즈가 아니면 안 된다.</param>
            <param name="block_size">인접 블록의 사이즈</param>
            <param name="aperture_size">Sobel 연산자의 아파체사이즈(cvSobel 참조).입력 화상이 부동 소수점형인 경우, 이 파라미터는 차분을 계산하기 위해서 이용되는 고정 소수점형 필터의 수를 나타낸다</param>
            <param name="k">Harris 검출기의 파라미터</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CopyHist(OpenCvSharp.CvHistogram,OpenCvSharp.CvHistogram@)">
            <summary>
            cvCopyHist 메소드는 히스토그램의 복사본을 생성한다. 
            두번째 히스토그램의 포인터가 널인경우 같은 크기의 새로운 히스토그램이 생성된다. 
            아니면 두개의 같은 타입 같은 사이즈의 히스토그램을 생성한다
            이 함수는 원본 히스토그램 빈 값을 대상에 복사하고 src 내에 정의된 것과 같은 bin values ranges를 설정한다. 
            </summary> 
            <param name="src"> 원본 히스토그램. </param> 
            <param name="dst"> 대상 히스토그램에 대한 포인터. </param> 
        </member>
        <member name="M:OpenCvSharp.Cv.CornerMinEigenVal(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Int32)">
            <summary>
            코너 검출을 위해서, 화상 블록의 최소 고유치를 계산한다. 
            모든 픽셀에 대해서, 인접 블록에 있어서의 도함수의 공변동 행렬의 최소 고유치만을 요구하는 함수이다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="eigenval">최소 고유치를 보존하는 화상.image 와 같은 사이즈가 아니면 안 된다.</param>
            <param name="block_size">인접 블록의 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CornerMinEigenVal(OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Int32,OpenCvSharp.ApertureSize)">
            <summary>
            코너 검출을 위해서, 화상 블록의 최소 고유치를 계산한다. 
            모든 픽셀에 대해서, 인접 블록에 있어서의 도함수의 공변동 행렬의 최소 고유치만을 요구하는 함수이다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="eigenval">최소 고유치를 보존하는 화상.image 와 같은 사이즈가 아니면 안 된다.</param>
            <param name="block_size">인접 블록의 사이즈</param>
            <param name="aperture_size">Sobel 연산자의 aperture_size(cvSobel 참조).입력 화상이 부동 소수점형인 경우, 이 파라미터는 차분을 계산하기 위해서 이용되는 고정 소수점형 필터의 수를 나타낸다</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CountNonZero(OpenCvSharp.CvArr)">
            <summary>
            배열 요소에 대해 0 이 아닌 요소를 카운트 한다.
            배열이 IplImage 의 경우, ROI, COI 의 양쪽 모두에 대응하고 있다.
            </summary>
            <param name="arr">배열(싱글 채널 또는 COI가 세트 된 멀티 채널의 화상).</param>
            <returns>0 이 아닌 요소수</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateCameraCapture(System.Int32)">
            <summary>
            카메라로부터의 비디오 캡쳐를 초기화한다.
            Windows 에서는, 다음의 두 개의 카메라 인터페이스를 이용할 수 있는：Video for Windows(VFW), Matrox Imaging Library(MIL). 
            Linux 에서는, 다음의 두 개 카메라 인터페이스를 이용할 수 있는：Video for Linux(V4L), FireWire(IEEE1394). 
            </summary>
            <param name="index">사용되는 카메라의 인덱스.사용하는 카메라가 1대 때, 혹은, 몇대의 카메라를 사용할지가 중요하지 않을 때는,-1 그렇지만 문제 없는 경우도 있다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateCameraCapture(OpenCvSharp.CaptureDevice)">
            <summary>
            카메라로부터의 비디오 캡쳐를 초기화한다.
            Windows 에서는, 다음의 두 개의 카메라 인터페이스를 이용할 수 있는：Video for Windows(VFW), Matrox Imaging Library(MIL). 
            Linux 에서는, 다음의 두 개 카메라 인터페이스를 이용할 수 있는：Video for Linux(V4L), FireWire(IEEE1394). 
            </summary>
            <param name="device">사용되는 카메라의 종류</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateChildMemStorage(OpenCvSharp.CvMemStorage)">
            <summary>
            메모리 확보/해제방기구의 차이를 제외하고, 단순한 메모리 스토레이지를 닮은 차일드 메모리 스토레이지를 생성한다.
            </summary>
            <param name="parent">부모 메모리 스토레이지</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateConDensation(System.Int32,System.Int32,System.Int32)">
            <summary>
            ConDensation 필터 구조체의 파티션을 실시한다
            </summary>
            <param name="dynam_params">상태 벡터의 차원</param>
            <param name="measure_params">관측 벡터의 차원</param>
            <param name="sample_count">샘플수</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateContourTree(OpenCvSharp.CvSeq,OpenCvSharp.CvMemStorage,System.Double)">
            <summary>
            윤곽의 계층적 표현을 생성한다
            </summary>
            <param name="contour">입력 윤곽</param>
            <param name="storage">결과의 트리의 출력처</param>
            <param name="threshold">근사 정도</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateData(OpenCvSharp.CvArr)">
            <summary>
            화상, 행렬 혹은 다차원 배열의 데이터를 확보한다.
            </summary>
            <param name="arr">배열 헤더</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateFeatureTree(OpenCvSharp.CvMat)">
            <summary>
            특징 벡터의 트리를 작성한다
            </summary>
            <param name="desc">d 차원 특징 벡터의 n × d 행렬（CV_32FC1 or CV_64FC1）.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateFileCapture(System.String)">
            <summary>
            파일로부터의 비디오 캡쳐를 초기화한다
            </summary>
            <param name="filename">비디오 파일명</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateHist(System.Int32[],OpenCvSharp.HistogramFormat)">
            <summary>
            지정 사이즈의 히스토그램을 생성해, 그 히스토그램의 참조를 돌려준다. 
            </summary>
            <param name="dims">히스토그램 각 차원의 사이즈를 나타내는 배열</param>
            <param name="type">히스토그램 표현 포맷</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateHist(System.Int32[],OpenCvSharp.HistogramFormat,System.Single[][])">
            <summary>
            지정 사이즈의 히스토그램을 생성해, 그 히스토그램의 참조를 돌려준다. 
            </summary>
            <param name="dims">히스토그램 각 차원의 사이즈를 나타내는 배열</param>
            <param name="type">히스토그램 표현 포맷</param>
            <param name="ranges">히스토그램의 빈(bin)(치역)를 나타내는 배열.이 파라미터의 의미는 파라미터 uniform에 의존하고 있다.
            이 레인지는, 히스토그램을 계산하거나 또 어느 히스토그램의 빈이 입력 화상의 어느 값이나 어느 데이터 요소에 대응할까를 결정하기 위한 백 프로젝션으로 이용된다.
            null 의 경우는, 나중에 함수 cvSetHistBinRanges 를 이용해 결정된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateHist(System.Int32[],OpenCvSharp.HistogramFormat,System.Single[][],System.Boolean)">
            <summary>
            지정 사이즈의 히스토그램을 생성해, 그 히스토그램의 참조를 돌려준다. 
            </summary>
            <param name="dims">히스토그램 각 차원의 사이즈를 나타내는 배열</param>
            <param name="type">히스토그램 표현 포맷</param>
            <param name="ranges">히스토그램의 빈(bin)(치역)를 나타내는 배열.이 파라미터의 의미는 파라미터 uniform에 의존하고 있다.
            이 레인지는, 히스토그램을 계산하거나 또 어느 히스토그램의 빈이 입력 화상의 어느 값이나 어느 데이터 요소에 대응할까를 결정하기 위한 백 프로젝션으로 이용된다.
            null 의 경우는, 나중에 함수 cvSetHistBinRanges 를 이용해 결정된다.</param>
            <param name="uniform">일 모양성에 관한 플래그</param>
            <returns>다차원 히스토그램 클래스</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateGraph(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            비어있는 그래프를 생성한다
            </summary>
            <param name="graph_flags">생성한 그래프의 타입.무방향그래프의 경우, CV_SEQ_KIND_GRAPH, 유향그래프의 경우, CV_SEQ_KIND_GRAPH | CV_GRAPH_FLAG_ORIENTED. </param>
            <param name="vtx_size">그래프의 헤드사이즈 (sizeof(CvGraph) 이상)</param>
            <param name="edge_size">그래프의 정점 사이즈</param>
            <param name="storage">그래프의 엣지사이즈</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateGraph(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage,System.Int32)">
            <summary>
            Creates empty graph
            </summary>
            <param name="graph_flags">Type of the created graph. Usually, it is either CV_SEQ_KIND_GRAPH for generic unoriented graphs and CV_SEQ_KIND_GRAPH | CV_GRAPH_FLAG_ORIENTED for generic oriented graphs. </param>
            <param name="header_size">Graph header size; may not be less than sizeof(CvGraph).</param>
            <param name="vtx_size">Graph vertex size; the custom vertex structure must start with CvGraphVtx  (use CV_GRAPH_VERTEX_FIELDS()) </param>
            <param name="edge_size">Graph edge size; the custom edge structure must start with CvGraphEdge  (use CV_GRAPH_EDGE_FIELDS()) </param>
            <param name="storage">The graph container. </param>
            <returns>The function cvCreateGraph creates an empty graph and returns it.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateGraphScanner(OpenCvSharp.CvGraph)">
            <summary>
            그래프 depth-first 주사를 위한 구조체를 생성한다
            </summary>
            <param name="graph">그래프</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateGraphScanner(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프가 depth-first 주사를 위한 구조체를 생성한다
            </summary>
            <param name="graph">그래프</param>
            <param name="vtx">주사(탐색) 시작 정점. null의 경우, 주사는 선두의 정점(정점 시퀸스 중 최소의 인덱스를 가지는 정점)으로부터 시작된다.</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateGraphScanner(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx,OpenCvSharp.GraphScannerMask)">
            <summary>
            그래프 depth-first  주사를 위한 구조체를 생성한다
            </summary>
            <param name="graph">그래프</param>
            <param name="vtx">주사(탐색) 시작 정점. null의 경우, 주사는 선두의 정점(정점 시퀸스 중 최소의 인덱스를 가지는 정점)으로부터 시작된다.</param>
            <param name="mask">이벤트 마스크. 어느 이벤트에 유저가 주목하고 싶은 것인지를 지정한다 .</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateImage(OpenCvSharp.CvSize,OpenCvSharp.BitDepth,System.Int32)">
            <summary>
            화상의 헤더를 작성해, 데이터 영역을 확보한다
            </summary>
            <param name="size">화상의 폭과 높이</param>
            <param name="depth">화상 요소의 빗트데프스</param>
            <param name="channels">요소(피크셀) 마다의 채널수.1,2,3,4 의 언젠가.</param>
            <returns>화상 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateImageHeader(OpenCvSharp.CvSize,OpenCvSharp.BitDepth,System.Int32)">
            <summary>
            메모리 확보와 초기화를 실시한다
            </summary>
            <param name="size">화상의 폭과 높이</param>
            <param name="depth">화상 요소의 비트 심도</param>
            <param name="channels">요소(픽셀) 마다의 채널수.1,2,3,4 의 언젠가.이 채널은 인터리브 된다. 예를 들면, 통상의 칼라 화상의 데이터 레이아웃은, b0 g0 r0 b1 g1 r1 ...되고 있다.</param>
            <returns>화상 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateKalman(System.Int32,System.Int32)">
            <summary>
            칼만 필터 구조체의 파티션을 실시한다.
            </summary>
            <param name="dynam_params">상태 벡터의 차원수</param>
            <param name="measure_params">관측 벡터의 차원</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateKalman(System.Int32,System.Int32,System.Int32)">
            <summary>
            칼만 필터 구조체의 파티션을 실시한다.
            </summary>
            <param name="dynam_params">상태 벡터의 차원수</param>
            <param name="measure_params">관측 벡터의 차원</param>
            <param name="control_params">컨트롤 벡터의 차원</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateMat(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            새로운 행렬과 그 내부 데이터를 위한 헤더를 확보해, 작성된 행렬에의 참조를 돌려준다.
            </summary>
            <param name="rows">행렬의 행수</param>
            <param name="cols">행렬의 열수</param>
            <param name="type">행렬 요소의 종류</param>
            <returns>행렬</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateMatHeader(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            새로운 행렬의 헤더를 작성해, 그 참조를 돌려준다.
            게다가 cvCreateData 를 이용하는지, cvSetData 에 의해, 유저가 확보한 데이터 영역을 명시적으로 세트 하는 것으로, 행렬 데이터가 확보된다.
            </summary>
            <param name="rows">행렬의 행수</param>
            <param name="cols">행렬의 렬수</param>
            <param name="type">행렬 요소의 종류</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateMatND(System.Int32,System.Int32[],OpenCvSharp.MatrixType)">
            <summary>
            다차원의 조밀한 배열의 헤더와 그 내부 데이터를 확보해, 작성된 배열의 포인터를 돌려준다.
            </summary>
            <param name="dims">배열의 차원수.CV_MAX_DIM(디폴트에서는 32.빌드시로 변경될 가능성도 있다)를 넘어선 안 된다.</param>
            <param name="sizes">차원 사이즈의 배열.</param>
            <param name="type">배열 요소의 종류.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateMatNDHeader(System.Int32,System.Int32[],OpenCvSharp.MatrixType)">
            <summary>
            다차원의 조밀한 배열의 헤더를 확보한다.
            게다가 cvCreateData 를 이용하는지, cvSetData 에 의해, 유저가 확보한 데이터 영역을 명시적으로 세트 하는 것으로, 배열 데이터가 확보된다. 
            </summary>
            <param name="dims">배열의 차원수.</param>
            <param name="sizes">차원 사이즈의 배열.</param>
            <param name="type">배열 요소의 종류.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateMemStorage">
            <summary>
            메모리스토레이지를 생성해, 그 참조를 돌려준다. 초기 상태에서는 스토리지는 비어있다.
            block_size를 제외한 헤더의 필드는 모두 0으로 설정되어 있다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateMemStorage(System.Int32)">
            <summary>
            메모리스트레이지를 생성해, 그 참조를 돌려준다. 초기 상태에서는 스토리지는 비어있다.
            block_size를 제외한 헤더의 필드는 모두 0으로 설정되어 있다.
            </summary>
            <param name="block_size">스토리지 블록의 바이트 단위의 사이즈. 0의 경우, 디폴트치(현재는 64 K)가 사용된다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreatePOSITObject(OpenCvSharp.CvPoint3D32f[])">
            <summary>
            오브젝트의 정보를 가지는 구조체를 초기화한다
            </summary>
            <param name="points">3 차원 오브젝트 모델상의 점데이터의 배열</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreatePOSITObject(OpenCvSharp.CvPoint3D32f[],System.Int32)">
            <summary>
            오브젝트의 정보를 가지는 구조체를 초기화한다
            </summary>
            <param name="points">3 차원 오브젝트 모델상의 점데이터의 배열</param>
            <param name="point_count">오브젝트상의 점데이터의 수</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateSeq(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            시퀸스를 생성한다.
            </summary>
            <param name="seq_flags">생성된 시퀸스의 플래그. 생성된 순서가, 특정의 시퀸스 타입을 인수로 취하는 함수에 일절 건네받지 않는 경우는, 이 값에 0을 지정해도 상관없다.그렇지 않은 경우는, 정의 끝난 시퀸스 타입의 리스트로부터 적절한 타입이 선택되지 않으면 안 된다.</param>
            <param name="header_size">시퀸스의 헤드 사이즈.sizeof(CvSeq) 이상이 아니면 안된다. 또, 특별한 타입인가 그 확장이 지시받고 있는 경우, 그 타입은 기본 타입의 헤더와 합치하고 있지 않으면 안 된다.</param>
            <param name="elem_size">시퀸스의 요소 사이즈(바이트 단위).사이즈는 시퀸스 타입과 합치해야 한다. 예를 들면, 점군의 순서를 작성하는 경우, 요소 타입에 CV_SEQ_ELTYPE_POINT를 지정해, 파라미터 elem_size 는 sizeof(CvPoint)와 동일하지 않으면 안 된다.</param>
            <param name="storage">시퀸스가 보존되는 장소</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateSeq``1(OpenCvSharp.SeqType,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            시퀸스를 생성한다
            </summary>
            <param name="seq_flags">생성된 시퀸스의 플래그. 생성된 시퀸스가, 특정의 시퀸스 타입을 인수로 취하는 함수에 일절 건네받지 않는 경우는, 이 값에 0을 지정해도 상관없다.그렇지 않은 경우는, 정의 끝난 시퀸스 타입의 리스트로부터 적절한 타입이 선택되지 않으면 안 된다.</param>
            <param name="header_size">시퀸스의 헤더 사이즈.sizeof(CvSeq) 이상이 아니면 안된다. 또, 특별한 타입인가 그 확장이 지시받고 있는 경우, 그 타입은 기본 타입의 헤더와 합치하고 있지 않으면 안 된다.</param>
            <param name="storage">시퀸스가 보존되는 장소</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateSeqBlock(OpenCvSharp.CvSeqWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateSet(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            비어있는 세트를 생성한다
            </summary>
            <param name="set_flags">생성하는 세트의 타입. </param>
            <param name="header_size">세트의 헤더 사이즈(sizeof(CvSet) 이상). </param>
            <param name="elem_size">세트의 요소 사이즈(CvSetElem 이상). </param>
            <param name="storage">세트를 위한 컨테이너. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateSet``1(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            비어있는 세트를 생성한다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="set_flags">생성하는 세트 타입. </param>
            <param name="header_size">세트의 헤더 사이즈(sizeof(CvSet) 이상). </param>
            <param name="elem_size">세트의 요소 사이즈(CvSetElem 이상). </param>
            <param name="storage">세트를 위한 컨테이너. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateSparseMat(System.Int32,System.Int32[],OpenCvSharp.MatrixType)">
            <summary>
            희소 배열을 작성한다
            </summary>
            <param name="dims">배열의 차원수.조밀한 행렬과는 반대로, 차원수는 실질적으로는 무제한이다(2^16 까지).</param>
            <param name="sizes">차원 사이즈의 배열.</param>
            <param name="type">배열 요소의 종류.</param>
            <returns>다차원의 희소 배열</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateStereoBMState">
            <summary>
            스테레오 블록 매칭 구조체를 작성한다
            </summary>
            <returns>스테레오 블록 매칭 구조체</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateStereoBMState(OpenCvSharp.StereoBMPreset)">
            <summary>
            스테레오 블록 매칭 구조체를 작성한다
            </summary>
            <param name="preset">미리 정의된 파라미터의 ID.구조체를 작성한 다음에, 임의의 파라미터를 오버라이드(override) 할 수 있다. </param>
            <returns>스테레오 블록 매칭 구조체</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateStereoBMState(OpenCvSharp.StereoBMPreset,System.Int32)">
            <summary>
            스테레오 블록 매칭 구조체를 작성한다
            </summary>
            <param name="preset">미리 정의된 파라미터의 ID.구조체를 작성한 다음에, 임의의 파라미터를 오버라이드(override) 할 수 있다. </param>
            <param name="numberOfDisparities">시차수(최대 시차-최소 시차). 이 파라미터가 0 의 경우, preset 로부터 선택된다. 그렇지 않은 경우는, 주어진 값이 preset 의 값을 오버라이드(override) 한다.</param>
            <returns>스테레오 블록 매칭 구조체</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateStereoGCState(System.Int32,System.Int32)">
            <summary>
            그래프컷 스테레오 매칭 알고리즘의 구조체를 작성한다
            </summary>
            <param name="numberOfDisparities">시차수.시차의 탐색 범위는, state->minDisparity 작거나 같은 disparity  state->minDisparity + state->numberOfDisparities 가 된다.</param>
            <param name="maxIters">반복 계산의 최대수. 각 반복에 대하고, 모든(혹은, 적당한 수의)α확장을 실시한다. 이 알고리즘은, 코스트 함수 전체를 감소시키는α확장이 발견되지 않았던 경우는, 거기서 종료한다.</param>
            <returns>그래프컷 스테레오 매칭 알고리즘의 구조체</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateStructuringElementEx(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.ElementShape)">
            <summary>
            팽창·수축 처리에 이용하는 구조 요소를 생성한다
            </summary>
            <param name="cols">구조 요소의 열수</param>
            <param name="rows">구조 요소의 행수</param>
            <param name="anchor_x">구조 요소의 원점의 x좌표</param>
            <param name="anchor_y">구조 요소의 원점의 y좌표</param>
            <param name="shape">구조 요소의 형상</param>
            <returns>구조 요소</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateStructuringElementEx(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.ElementShape,System.Int32[0:,0:])">
            <summary>
            팽창·수축 처리에 이용하는 구조 요소를 생성한다
            </summary>
            <param name="cols">구조 요소의 렬수</param>
            <param name="rows">구조 요소의 행수</param>
            <param name="anchor_x">구조 요소의 원점의 x좌표</param>
            <param name="anchor_y">구조 요소의 원점의 y좌표</param>
            <param name="shape">구조 요소의 형상</param>
            <param name="values">구조 요소 데이터에의 포인터. 이 파라미터는 형상이 CV_SHAPE_CUSTOM 때 마셔 유효</param>
            <returns>구조 요소</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateSubdiv2D(OpenCvSharp.SeqType,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            CvSubdiv2D를 생성한다.
            이후에, cvInitSubdivDelaunay2D로 초기화할 것
            </summary>
            <param name="subdiv_type"></param>
            <param name="header_size"></param>
            <param name="vtx_size"></param>
            <param name="quadedge_size"></param>
            <param name="storage"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateSubdivDelaunay2D(OpenCvSharp.CvRect,OpenCvSharp.CvMemStorage)">
            <summary>
            빈 들로네 삼각형을 만들 
            </summary> 
            <param name="rect"> subdivision을 위해 추가되는 모든 2 차원 점을 포함하는 사각형. </param> 
            <param name="storage"> subdivision을 위한 공간. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateTrackbar(System.String,System.String,System.Int32,System.Int32,OpenCvSharp.CvTrackbarCallback)">
            <summary>
            지정된 이름과 범위의 트랙바(슬라이더, 레인지 컨트롤이라고도 불린다)를 작성한다.
            작성된 트랙바는 주어진 윈도우의 최상단에 표시된다.
            </summary>
            <param name="trackbar_name">트랙바의 이름</param>
            <param name="window_name">트랙바의 부모 윈도우의 이름</param>
            <param name="value">슬라이더의 초기 위치</param>
            <param name="count">슬라이더의 최대치.최소치는 항상 0.</param>
            <param name="on_change">슬라이더의 위치가 변경될 때마다 불려 가는 Delegate</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateVideoWriter(System.String,System.String,System.Double,OpenCvSharp.CvSize)">
            <summary>
            비디오 라이터를 작성해 돌려준다.
            </summary>
            <param name="filename">출력하는 비디오 파일의 이름</param>
            <param name="fourcc">
            프레임을 압축하기 위한 코덱을 나타내는 4 문자.예를 들면,"PIM1" 는, MPEG-1 코덱, "MJPG" 는, motion-jpeg 코덱이다. 
            Win32 환경하에서는, null 를 건네준다고 다이얼로그로부터 압축 방법과 압축의 파라미터를 선택할 수 있게 된다. 
            </param>
            <param name="fps">작성된 비디오 스트림의 frame rate</param>
            <param name="frame_size">비디오 프레임의 사이즈</param>
            <returns>CvVideoWriter</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CreateVideoWriter(System.String,System.String,System.Double,OpenCvSharp.CvSize,System.Boolean)">
            <summary>
            비디오 라이터를 작성해, 돌려준다.
            </summary>
            <param name="filename">출력하는 비디오 파일의 이름</param>
            <param name="fourcc">
            프레임을 압축하기 위한 코덱을 나타내는 4 문자.예를 들면,"PIM1" 는, MPEG-1 코덱, "MJPG" 는, motion-jpeg 코덱이다. 
            Win32 환경하에서는, null 를 건네준다고 다이얼로그로부터 압축 방법과 압축의 파라미터를 선택할 수 있게 된다. 
            </param>
            <param name="fps">작성된 비디오 스트림의 frame rate</param>
            <param name="frame_size">비디오 프레임의 사이즈</param>
            <param name="is_color">true의 경우, 엔코더는 칼라 프레임으로서 encode 한다. false의 경우, 그레이 스케일 프레임으로서 동작한다(현재로서는, 이 플래그는 Windows 에서만 이용할 수 있다).</param>
            <returns>CvVideoWriter</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CrossProduct(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            두 개의 3 차원 벡터의 외적을 계산한다.
            dst = src1 × src2,  (dst1 = src12src23 - src13src22 , dst2 = src13src21 - src11src23 , dst3 = src11src22 - src12src21).
            </summary>
            <param name="src1">1번째의 입력 벡터</param>
            <param name="src2">2번째의 입력 벡터</param>
            <param name="dst">출력 벡터</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CvtColor(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.ColorConversion)">
            <summary>
            입력 화상의 색공간(color space)를 변환한다
            </summary>
            <param name="src">입력 화상. 8비트(8u), 16비트(16u), 혹은 단정도 부동 소수점형(32f).</param>
            <param name="dst">출력 화상. 입력 화상과 같은 데이터 타입. 채널수는 다르기도 한다.</param>
            <param name="code">색공간(color space)의 변환의 방법</param>
        </member>
        <member name="M:OpenCvSharp.Cv.CvtSeqToArray``1(OpenCvSharp.CvSeq,``0[]@)">
            <summary>
            시퀸스를 메모리내에 연속한 하나의 블록에 카피한다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="seq">시퀸스</param>
            <param name="elements">충분히 큰 영역을 가지는 출력 배열</param>
            <returns>출력되는 배열. out 되는 인수 element 와 같은 값.</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CvtSeqToArray``1(OpenCvSharp.CvSeq,``0[]@,OpenCvSharp.CvSlice)">
            <summary>
            시퀸스를 메모리내에 연속한 하나의 블록에 카피한다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="seq">시퀸스</param>
            <param name="elements">충분히 큰 영역을 가지는 출력 배열</param>
            <param name="slice">배열에 카피하는 순서내의 부분</param>
            <returns>출력되는 배열. out 되는 인수 element 와 같은 값.</returns>
        </member>
        <member name="F:OpenCvSharp.Cv.WHOLE_SEQ">
            <summary>
            CV_WHOLE_SEQ
            </summary>
        </member>
        <member name="M:OpenCvSharp.Cv.ARE_TYPES_EQ(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            지정한 2개의 행렬의 데이터 타입이 동일하면 true를 돌려준다
            </summary>
            <param name="mat1">1번째의 입력 행렬</param>
            <param name="mat2">2번째의 입력 행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FOURCC(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            4개의 문자로부터 FOURCC의 정수치를 얻는다
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <param name="c3"></param>
            <param name="c4"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.FOURCC(System.String)">
            <summary>
            4개의 문자로부터 FOURCC의 정수치를 얻는다
            </summary>
            <param name="fourcc"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.IS_SET_ELEM(OpenCvSharp.ICvPtrHolder)">
            <summary>
            지정한 노드가 사용되고 있는지 어떤지를 판단한다
            </summary>
            <param name="ptr">노드 포인터</param>
        </member>
        <member name="M:OpenCvSharp.Cv.MAT_ELEM_PTR_FAST(OpenCvSharp.CvMat,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="mat"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="pix_size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.MAT_ELEM_PTR(OpenCvSharp.CvMat,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="mat"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CV_MAT_ELEM``1(OpenCvSharp.CvMat,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mat"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.NEXT_LINE_POINT(OpenCvSharp.CvLineIterator)">
            <summary>
            
            </summary>
            <param name="line_iterator"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.NEXT_SEQ_ELEM(System.Int32,OpenCvSharp.CvSeqReader)">
            <summary>
            다음의 순서에
            </summary>
            <param name="elem_size"></param>
            <param name="reader"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.NODE_IDX(OpenCvSharp.CvSparseMat,OpenCvSharp.CvSparseNode)">
            <summary>
            CV_NODE_IDX
            </summary>
            <param name="mat"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.NODE_VAL``1(OpenCvSharp.CvSparseMat,OpenCvSharp.CvSparseNode)">
            <summary>
            CV_NODE_VAL
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mat"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.PREV_SEQ_ELEM(System.Int32,OpenCvSharp.CvSeqReader)">
            <summary>
            전의 순서에
            </summary>
            <param name="elem_size"></param>
            <param name="reader"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.READ_SEQ_ELEM``1(``0@,OpenCvSharp.CvSeqReader)">
            <summary>
            시퀸스의 요소를 하나 읽어내고, 읽기 포인터를 다음에 1개 이동시킨다
            </summary>
            <param name="elem"></param>
            <param name="reader"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.REV_READ_SEQ_ELEM``1(``0@,OpenCvSharp.CvSeqReader)">
            <summary>
            시퀸스의 요소를 하나 읽어내고, 읽기 포인터를 다음에 1개 이동시킨다
            </summary>
            <param name="elem"></param>
            <param name="reader"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.RGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            칼라값을 작성한다
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.SWAP(System.Object@,System.Object@,System.Object@)">
            <summary>
            2개의 인수의 값을 바꿔 넣는다 (OpenCV 준거판)
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="t"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.SWAP``1(``0@,``0@)">
            <summary>
            2개의 인수의 값을 바꿔 넣는다 (제네릭판)
            </summary>
            <param name="a"></param>
            <param name="b"></param>		
        </member>
        <member name="M:OpenCvSharp.Cv.WRITE_SEQ_ELEM_VAR(System.IntPtr,OpenCvSharp.CvSeqWriter)">
            <summary>
            
            </summary>
            <param name="elem_ptr"></param>
            <param name="writer"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.WRITE_SEQ_ELEM``1(``0,OpenCvSharp.CvSeqWriter)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="elem"></param>
            <param name="writer"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.WRITE_SEQ_ELEM``1(``0,OpenCvSharp.CvSeqWriter{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="elem"></param>
            <param name="writer"></param>
        </member>
        <member name="M:OpenCvSharp.Cv.Cast``1(System.IntPtr)">
            <summary>
            void*로부터 T형의 오브젝트에 변환을 시도한다.
            T가 OpenCV의 오브젝트의 경우는, IntPtr를 취하는 constructor 호출을 시도한다.
            </summary>
            <typeparam name="T">오브젝트의 형태. 원시적형인가, OpenCV의 오브젝트(ICvObject).</typeparam>
            <param name="p">변환하는 포인터</param>
            <returns>T형으로 변환한 결과</returns>
        </member>
        <member name="M:OpenCvSharp.Cv.ToStruct``1(System.IntPtr)">
            <summary>
            포인터로부터 구조체에 캐스트를 시도한다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Cv.CheckType(System.Type,System.Type)">
            <summary>
            test와 targetdl 같은 형태인지 체크
            </summary>
            <param name="test">source type</param>
            <param name="target">generic type</param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CvHaarClassifier">
            <summary>
            단일 결정 트리에 의한 분류기(가장 단순한 경우는 stump). 이것은 개개의 화상
            위치에 있어서 특징에 대한 응답(즉 윈도우내의 부분 사각형에 대한 픽셀 합계치)
            를 돌려주어 그 응답에 의존하는 값을 출력한다
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvObject">
            <summary>
            OpenCV의 네이티브 포인터를 가진 클래스의 기본 클래스
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvObject._ptr">
            <summary>
            Data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvObject.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvObject.#ctor(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="P:OpenCvSharp.CvObject.CvPtr">
            <summary>
            OpenCV의 구조체에의 네이티브 포인터
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvHaarClassifier.SizeOf">
            <summary>
            sizeof(CvHaarClassifier) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvHaarClassifier._data">
            <summary>
            C++/CLI wrapper of data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifier.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvHaarClassifier*</param>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifier.Count">
            <summary>
            결정트리의 노드수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifier.HaarFeature">
            <summary>
            haar 특징의 배열
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifier.Threshold">
            <summary>
            branch threshold. 특징 응답 &lt;= threshold 가 되는 경우는 좌측의 가지가 선택되고 그렇지 않은 경우는 오른쪽 가지가 선택된다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifier.Left">
            <summary>
            좌측의 차일드 인덱스(좌측의 차일드가 leaf 경우에는 거짓값의 인덱스)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifier.Right">
            <summary>
            우측의 차일드 인덱스(우측의 차일드가 leaf 경우에는 거짓값의 인덱스)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifier.Alpha">
            <summary>
            leaf에 대응하는 출력치
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvScalar">
            <summary>
            4개까지의 수를 보관하는 컨테이너. 매니지 double 배열과 임시 변환.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvScalar.SizeOf">
            <summary>
            sizeof(CvScalar) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvScalar.Val0">
            <summary>
            첫번째요소
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvScalar.Val1">
            <summary>
            2번째 요소
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvScalar.Val2">
            <summary>
            3번째 요소
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvScalar.Val3">
            <summary>
            4번째 요소
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvScalar.#ctor(System.Double)">
            <summary>
            1개의 스칼라치를 지정해 초기화. 나머지는 0으로 
            </summary>
            <param name="val0"></param>
        </member>
        <member name="M:OpenCvSharp.CvScalar.#ctor(System.Double,System.Double)">
            <summary>
            2개의 스칼라치를 지정해 초기화. 나머지는 0으로 
            </summary>
            <param name="val0"></param>
            <param name="val1"></param>
        </member>
        <member name="M:OpenCvSharp.CvScalar.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            3개의 스칼라치를 지정해 초기화. 나머지는 0으로 
            </summary>
            <param name="val0"></param>
            <param name="val1"></param>
            <param name="val2"></param>
        </member>
        <member name="M:OpenCvSharp.CvScalar.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            모든 스칼라치를 지정해 초기화
            </summary>
            <param name="val0"></param>
            <param name="val1"></param>
            <param name="val2"></param>
            <param name="val3"></param>
        </member>
        <member name="M:OpenCvSharp.CvScalar.ScalarAll(System.Double)">
            <summary>
            지정한 값을 배열의 모든 요소로서 초기화해, 돌려준다
            </summary>
            <param name="val0123"></param>
        </member>
        <member name="M:OpenCvSharp.CvScalar.RealScalar(System.Double)">
            <summary>
            지정한 값을 선두 요소로 해, 나머지를 0으로 초기화해 돌려준다
            </summary>
            <param name="val0"></param>
        </member>
        <member name="M:OpenCvSharp.CvScalar.op_Explicit(System.Double[])~OpenCvSharp.CvScalar">
            <summary>
            매니지 Double 배열로부터 변환하는 명시적인 캐스트
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvScalar.op_Implicit(System.Double)~OpenCvSharp.CvScalar">
            <summary>
            Double형의 값으로부터 변환하는 묵시적 캐스트. RealScalar로 초기화해 돌려준다.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvScalar.op_Explicit(OpenCvSharp.CvScalar)~System.Double[]">
            <summary>
            매니지 Double 배열로 변환하는 명시적인 캐스트
            </summary>
            <param name="self"></param>
            <returns>double[4]</returns>
        </member>
        <member name="M:OpenCvSharp.CvScalar.op_Implicit(OpenCvSharp.CvScalar)~System.Double">
            <summary>
            Double형의 값으로 변환하는 묵시적 캐스트. 선두의 요소를 돌려준다.
            </summary>
            <param name="self"></param>
            <returns>double</returns>
        </member>
        <member name="M:OpenCvSharp.CvScalar.op_Equality(OpenCvSharp.CvScalar,OpenCvSharp.CvScalar)">
            <summary>
            == 연산자의 overload
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvScalar.op_Inequality(OpenCvSharp.CvScalar,OpenCvSharp.CvScalar)">
            <summary>
            != 연산자의 overload
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvScalar.Equals(OpenCvSharp.CvScalar)">
            <summary>
            지정한 CvScalar의 값과 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvScalar.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvScalar.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvScalar.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="P:OpenCvSharp.CvScalar.Item(System.Int32)">
            <summary>
            인덱서
            </summary>
        </member>
        <member name="T:OpenCvSharp.Subdiv2DPointLocation">
            <summary>
            cvSubdiv2DLocate에 의한 점의 배치의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.Subdiv2DPointLocation.Error">
            <summary>
            입력의 인수가 올바르지 않을 때 [CV_PTLOC_ERROR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Subdiv2DPointLocation.OutsideRect">
            <summary>
            점은 세분비율 평면의 참조 사각형의 밖에 있는 [CV_PTLOC_OUTSIDE_RECT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Subdiv2DPointLocation.Inside">
            <summary>
            점은 안에 존재하는 [CV_PTLOC_INSIDE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Subdiv2DPointLocation.Vertex">
            <summary>
            점은 세분비율 평면내의 정점과 일치하는 [CV_PTLOC_VERTEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Subdiv2DPointLocation.OnEdge">
            <summary>
            점은 변 위에 존재하는 [CV_PTLOC_ON_EDGE]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CaptureDevice">
            <summary>
            카메라 캡쳐의 초기화에 이용하는 카메라의 디바이스
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureDevice.Any">
            <summary>
            autodetect
            [CV_CAP_ANY]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureDevice.MIL">
            <summary>
            MIL proprietary drivers
            [CV_CAP_MIL]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureDevice.VFW">
            <summary>
            platform native
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureDevice.Firewire">
            <summary>
            IEEE 1394 drivers
            [CV_CAP_FIREWIRE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureDevice.IEEE1394">
            <summary>
            IEEE 1394 drivers
            [CV_CAP_IEEE1394]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureDevice.Stereo">
            <summary>
            TYZX proprietary drivers
            [CV_CAP_STEREO_]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureDevice.QuickTime">
            <summary>
            QuickTime
            [CV_CAP_QT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureDevice.Unicap">
            <summary>
            Unicap drivers
            [CV_CAP_UNICAP]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureDevice.DShow">
            <summary>
            DirectShow (via videoInput)
            [CV_CAP_DSHOW]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSetElem">
            <summary>
            빈노드의 리스트
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSetElem.SizeOf">
            <summary>
            sizeof(CvSetElem)를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSetElem._data">
            <summary>
            C++/CLI wrapper of data poitner
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSetElem.#ctor">
            <summary>
            초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSetElem.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr">struct CvSetElem*</param>
        </member>
        <member name="P:OpenCvSharp.CvSetElem.FreeElems">
            <summary>
            빈노드의 리스트 
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSetElem.Flags">
            <summary>
            빈노드라면 true, 그 외의 경우는 false
            </summary>
        </member>
        <member name="T:OpenCvSharp.AngleUnit">
            <summary>
            cvCartToPolar에서 이용하는 각도를 나타내기 위해 라디안 또는 도수(degree)를 사용할지 결정하는 플래그. 
            </summary>
        </member>
        <member name="F:OpenCvSharp.AngleUnit.Radians">
            <summary>
            라디안 단위의 각도
            </summary>
        </member>
        <member name="F:OpenCvSharp.AngleUnit.Degrees">
            <summary>
            도수 단위의 각도
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvGraphScanner">
            <summary>
            그래프 주사 상태를 위한 구조체
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvGraphScanner.SizeOf">
            <summary>
            sizeof(CvGraphScanner) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvGraphScanner._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvGraphScanner.#ctor(System.IntPtr)">
            <summary>
            Initialize from pointer
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.CvGraphScanner.#ctor(OpenCvSharp.CvGraph)">
            <summary>
            그래프가 깊이 우선 주사를 위한 클래스를 생성한다
            </summary>
            <param name="graph">그래프</param>
        </member>
        <member name="M:OpenCvSharp.CvGraphScanner.#ctor(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프가 깊이 우선 주사를 위한 클래스를 생성한다
            </summary>
            <param name="graph">그래프</param>
            <param name="vtx">주사 시작 정점. null의 경우, 주사는 선두의 정점(정점 순서 중 최소의 인덱스를 가지는 정점)으로부터 시작된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvGraphScanner.#ctor(OpenCvSharp.CvGraph,OpenCvSharp.CvGraphVtx,OpenCvSharp.GraphScannerMask)">
            <summary>
            그래프가 깊이 우선 주사를 위한 클래스를 생성한다
            </summary>
            <param name="graph">그래프</param>
            <param name="vtx">주사 개시 정점.null의 경우, 주사는 선두의 정점(정점 순서 중 최소의 인덱스를 가지는 정점)으로부터 시작된다.</param>
            <param name="mask">이벤트 마스크.어느 이벤트에 유저가 주목하고 싶은 것인지를 지정한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvGraphScanner.Dispose">
            <summary>
            그래프의 주사 처리를 종료한다 (cvReleaseGraphScanner).
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvGraphScanner.NextGraphItem">
            <summary>
            그래프 주사 처리를 1 스텝, 혹은 수스텝 진행한다
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvGraphScanner.Vtx">
            <summary>
            현재의 정점(혹은 엣지의 시점)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvGraphScanner.Dst">
            <summary>
            현재의 엣지의 접속처 정점
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvGraphScanner.Edge">
            <summary>
            현재의 엣지
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvReleaseFunc">
            <summary>
            
            </summary>
            <param name="struct_dblptr"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.MyAction">
            <summary>
            substitute of System.Action
            </summary>
        </member>
        <member name="T:OpenCvSharp.TimeMeasurer">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.TimeMeasurer.Measure(OpenCvSharp.MyAction)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.MatchShapesMethod">
            <summary>
            cvMatchShapes 알고리즘에 이용
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatchShapesMethod.I1">
            <summary>
            [CV_CONTOURS_MATCH_I1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatchShapesMethod.I2">
            <summary>
            [CV_CONTOURS_MATCH_I2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatchShapesMethod.I3">
            <summary>
            [CV_CONTOURS_MATCH_I3]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvMat">
            <summary>
            다중행렬
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMat.SizeOf">
            <summary>
            sizeof(CvMat)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMat._data">
            <summary>
            C++/CLI측에서 포인터에 액세스 하는 오브젝트
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMat.dataArrayByte">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMat.dataArrayInt16">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMat.dataArrayInt32">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMat.dataArraySingle">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMat.dataArrayDouble">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMat.#ctor(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            사이즈와 요소의 종류를 지정해 초기화 (cvCreateMatHeader 상당)
            </summary>
            <param name="rows">행렬의 행수</param>
            <param name="cols">행렬의 렬수</param>
            <param name="type">행렬 요소의 종류</param>
            <returns>행렬</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.#ctor(System.Int32,System.Int32,OpenCvSharp.MatrixType,System.Array)">
            <summary>
            행렬의 데이터를 지정해 초기화 (cvCreateMatHeader + cvSetData 상당)
            </summary>
            <param name="rows">행렬의 행수</param>
            <param name="cols">행렬의 렬수</param>
            <param name="type">행렬 요소의 종류</param>
            <param name="elements">행렬의 데이터로 하는 배열. 1 차원에서, 요소의 형태는 구조체일 필요가 있다.</param>
            <returns>행렬</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.#ctor(System.String)">
            <summary>
            지정된 파일로부터 화상을 읽어들여 초기화
            </summary>
            <param name="filename">파일명</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.#ctor(System.String,OpenCvSharp.LoadMode)">
            <summary>
            지정된 파일로부터 화상을 읽어들여 초기화
            </summary>
            <param name="filename">파일명</param>
            <param name="flags">읽어들이는 화상이 칼라/그레이 스케일의 어느 쪽인지 비트 심도를 지정한다</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.CvMat.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            포인터와 자동 해제의 가부를 지정해 초기화
            </summary>
            <param name="ptr"></param>
            <param name="isEnabledDispose"></param>
        </member>
        <member name="M:OpenCvSharp.CvMat.#ctor">
            <summary>
            sizeof(CvMat)의 분의 메모리의 할당만 가서 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMat.#ctor(System.Boolean)">
            <summary>
            sizeof(CvMat)의 분의 메모리의 할당만 가서, GC금지 설정으로 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray(System.Double[])">
            <summary>
            double[]로부터 CvMat를 초기화해 돌려준다. F64C1형으로서 생성한다 
            </summary>
            <param name="data"></param>
            <returns>CvMat</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray(System.Single[])">
            <summary>
            float[]로부터 CvMat를 초기화해 돌려준다. F32C1형으로서 생성한다. 
            </summary>
            <param name="data"></param>
            <returns>CvMat</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray(System.Int32[])">
            <summary>
            int[]로부터 CvMat를 초기화해 돌려준다. S32C1형으로서 생성한다. 
            </summary>
            <param name="data"></param>
            <returns>CvMat</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray(System.Int16[])">
            <summary>
            short[]로 부터CvMat을 초기화해 돌려 준다. S16C1형으로 생성한다 
            </summary>
            <param name="data"></param>
            <returns>CvMat</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray(System.Byte[])">
            <summary>
            byte[]로부터 CvMat을 초기화해 돌려 준다. U8C1형으로 생성한다
            </summary>
            <param name="data"></param>
            <returns>CvMat</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray``1(``0[],OpenCvSharp.MatrixType)">
            <summary>
            T[]로부터 CvMat를 초기화해 돌려준다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.ToLinearArtay``1(``0[0:,0:])">
            <summary>
            2 차원의 Rectangular Array를 1 차원 배열로 변환한다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray(System.Double[0:,0:])">
            <summary>
            double[,]로 부터CvMat을 초기화해 돌려준다 F64C1형으로 생성 
            </summary>
            <param name="data"></param>
            <returns>CvMat</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray(System.Single[0:,0:])">
            <summary>
            float[,]로부터 CvMat을 초기화해 돌려 준다. F32C1형으로 생성 
            </summary>
            <param name="data"></param>
            <returns>CvMat</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray(System.Int32[0:,0:])">
            <summary>
            int[,]로 부터CvMat을 초기화해 돌려준다. S32C1형으로 생성 
            </summary>
            <param name="data"></param>
            <returns>CvMat</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray(System.Int16[0:,0:])">
            <summary>
            short[,]로 부터CvMat을 초기화해 돌려준다. S16C1형으로 생성 
            </summary>
            <param name="data"></param>
            <returns>CvMat</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray(System.Byte[0:,0:])">
            <summary>
            byte[,]로 부터CvMat을 초기화해 돌려준다. U8C1형으로 생성 
            </summary>
            <param name="data"></param>
            <returns>CvMat</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromArray``1(``0[0:,0:],OpenCvSharp.MatrixType)">
            <summary>
            T[,]로부터 CvMat를 초기화해 돌려준다.  
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <returns>CvMat</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.FromFile(System.String)">
            <summary>
            지정된 파일로부터 화상을 읽어들여, 그 화상의 참조를 CvMat 형식으로 돌려준다
            </summary>
            <param name="filename">파일명</param>
            <returns>화상의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.LoadImageM(System.String,OpenCvSharp.LoadMode)">
            <summary>
            지정된 파일로부터 화상을 읽어들여, 그 화상의 참조를 CvMat 형식으로 돌려준다
            </summary>
            <param name="filename">파일명</param>
            <param name="flags">읽어들이는 화상이 칼라/그레이 스케일 인지 비트 심도를 지정한다</param>
            <returns>화상의 참조</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.AffineTransform(OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvPoint2D32f[])">
            <summary>
            3점과 각각 대응하는 점으로부터 아핀 변환을 계산하는 (2 x 3 의 CV_32 FC1형) [cvGetAffineTransform 해당]. 
            아마 out로 나오는 행렬과 함수의 돌려진 값은 같아서, out 인수의 분을 생략한 것이다.
            (x'i,y'i) T=map_matrix(xi,yi,1) T, 
            여기서 dst(i)=(x'i,y'i), src(i)=(xi,yi), i=0..2.
            </summary>
            <param name="src">입력(변환전) 화상내에 존재하는 삼각형의 3개의 정점 좌표를 보관한 배열</param>
            <param name="dst">출력(변환 후) 화상내에 존재하는 src에 대응한 삼각형의 3개의 정점 좌표를 보관한 배열</param>
            <returns>구해진 2×3의 아핀 변환 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.PerspectiveTransform(OpenCvSharp.CvPoint2D32f[],OpenCvSharp.CvPoint2D32f[])">
            <summary>
            4점과 각각 대응하는 점을 이용해 투시 변환 행렬을 요구하는 (3 x 3 의 CV_32 FC1형) [cvGetPerspectiveTransform 상당].
            아마 out로 나오는 행렬과 함수의 돌려진 값은 같아서, out 인수의 분을 생략한 것이다.
            (tix'i,tiy'i,ti) T = map_matrix(xi,yi,1) T
            여기서 dst(i) = (x'i,y'i),  src(i) = (xi,yi), i=0..3.
            </summary>
            <param name="src">입력 화상중의 사각형의 4 정점의 좌표</param>
            <param name="dst">출력 화상중의 대응하는 사각형의 4 정점의 좌표</param>
            <returns>구해진 3×3의 투영 변환 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.Identity(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            단위행렬을 생성해 돌려준다
            </summary>
            <param name="rows">행렬의 행수</param>
            <param name="cols">행렬의 열수</param>
            <param name="type">행렬 요소의 종류</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.Identity(System.Int32,System.Int32,OpenCvSharp.MatrixType,OpenCvSharp.CvScalar)">
            <summary>
            단위행렬을 생성해 돌려준다
            </summary>
            <param name="rows">행렬의 행수</param>
            <param name="cols">행렬의 열수</param>
            <param name="type">행렬 요소의 종류</param>
            <param name="value">대각 성분의 값</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.RotationMatrix(OpenCvSharp.CvPoint2D32f,System.Double,System.Double)">
            <summary>
            2 차원 회전의 아핀 행렬을 계산하는 (2 x 3 의 CV_32 FC1형)  (cv2DRotationMatrix 해당).
            </summary>
            <param name="center">입력 화상내의 회전 중심 </param>
            <param name="angle">각도(degree) 단위의 회전 각도. 정의 값은 반시계방향의 회전을 의미한다(좌표 원점은 좌상에 있다고 가정).</param>
            <param name="scale">등방성 스케일링 계수(x,y방향과도 같은 계수 scale 를 사용한다) </param>
            <returns>2 x 3의 2 차원 회전의 아핀 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_UnaryPlus(OpenCvSharp.CvMat)">
            <summary>
            행렬의 단항 +연산자
            </summary>
            <param name="a">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_UnaryNegation(OpenCvSharp.CvMat)">
            <summary>
            행렬의 단항 -연산자
            </summary>
            <param name="a">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_OnesComplement(OpenCvSharp.CvMat)">
            <summary>
            행렬의 단항 not 연산자
            </summary>
            <param name="a">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_Addition(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            행렬과 행렬의 가산 연산자. cvAdd에 의해 가산한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_Addition(OpenCvSharp.CvMat,OpenCvSharp.CvScalar)">
            <summary>
            행렬과 스칼라의 가산 연산자. cvAddS에 의해 가산한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_Subtraction(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            행렬과 행렬의 감산 연산자. cvSub에 의해 감산한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_Subtraction(OpenCvSharp.CvMat,OpenCvSharp.CvScalar)">
            <summary>
            행렬과 스칼라의 감산 연산자. cvSubS에 의해 가산한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_Multiply(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            행렬과 행렬의 곱셈 연산자. cvMatMul에 의해 곱셈한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_Multiply(OpenCvSharp.CvMat,System.Double)">
            <summary>
            행렬과 스칼라의 곱셈 연산자. a의 요소 마다 b를 걸친 결과를 cvAddWeighted에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_Division(OpenCvSharp.CvMat,System.Double)">
            <summary>
            행렬과 스칼라의 제산 연산자. a의 요소 마다 b로 나눈 결과를 cvAddWeighted에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_BitwiseAnd(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            행렬과 행렬의 and 연산자. cvAnd에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_BitwiseAnd(OpenCvSharp.CvMat,OpenCvSharp.CvScalar)">
            <summary>
            행렬과 스칼라의 and 연산자. cvAndS에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_BitwiseOr(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            행렬과 행렬의 or연산자. cvOr에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_BitwiseOr(OpenCvSharp.CvMat,OpenCvSharp.CvScalar)">
            <summary>
            행렬과 스칼라의 or연산자. cvOrS에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_ExclusiveOr(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            행렬과 행렬의 xor 연산자. cvXor에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.op_ExclusiveOr(OpenCvSharp.CvMat,OpenCvSharp.CvScalar)">
            <summary>
            행렬과 스칼라의 xor 연산자. cvXorS에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.CalibrationMatrixValues(OpenCvSharp.CvSize)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="image_size">화상의 사이즈. 픽셀 단위.</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.CalibrationMatrixValues(OpenCvSharp.CvSize,System.Double,System.Double)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="image_size">화상의 사이즈.픽셀 단위.</param>
            <param name="aperture_width">아파체폭.실제가 길이 단위.</param>
            <param name="aperture_height">아파체 높이.실제가 길이 단위.</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.CalibrationMatrixValues(OpenCvSharp.CvSize,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="image_size">화상의 사이즈.픽셀 단위.</param>
            <param name="aperture_width">아파체폭.실제가 길이 단위.</param>
            <param name="aperture_height">아파체 높이.실제가 길이 단위.</param>
            <param name="fovx">x-방향의 화각.degree 단위.</param>
            <param name="fovy">y-방향의 화각.degree 단위.</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.CalibrationMatrixValues(OpenCvSharp.CvSize,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="image_size">화상의 사이즈.픽셀 단위.</param>
            <param name="aperture_width">아파체폭.실제가 길이 단위.</param>
            <param name="aperture_height">아파체 높이.실제가 길이 단위.</param>
            <param name="fovx">x-방향의 화각.degree 단위.</param>
            <param name="fovy">y-방향의 화각.degree 단위.</param>
            <param name="focal_length">촛점거리.실제가 길이 단위.</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.CalibrationMatrixValues(OpenCvSharp.CvSize,System.Double,System.Double,System.Double@,System.Double@,System.Double@,OpenCvSharp.CvPoint2D64f@)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="image_size">화상의 사이즈.픽셀 단위.</param>
            <param name="aperture_width">아파체폭.실제가 길이 단위.</param>
            <param name="aperture_height">아파체 높이.실제가 길이 단위.</param>
            <param name="fovx">x-방향의 화각.degree 단위.</param>
            <param name="fovy">y-방향의 화각.degree 단위.</param>
            <param name="focal_length">촛점거리.실제가 길이 단위.</param>
            <param name="principal_point">요점(광학 중심) 실제가 길이 단위.</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.CalibrationMatrixValues(OpenCvSharp.CvSize,System.Double,System.Double,System.Double@,System.Double@,System.Double@,OpenCvSharp.CvPoint2D64f@,System.Double@)">
            <summary>
            여러가지 카메라 특성을 계산한다
            </summary>
            <param name="image_size">화상의 사이즈.픽셀 단위.</param>
            <param name="aperture_width">아파체폭.실제가 길이 단위.</param>
            <param name="aperture_height">아파체 높이.실제가 길이 단위.</param>
            <param name="fovx">x-방향의 화각.degree 단위.</param>
            <param name="fovy">y-방향의 화각.degree 단위.</param>
            <param name="focal_length">촛점거리.실제가 길이 단위.</param>
            <param name="principal_point">요점(광학 중심) 실제가 길이 단위.</param>
            <param name="pixel_aspect_ratio">픽셀의 어스펙트비 fy/fx</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.Clone">
            <summary>
            행렬의 완전한 카피를 작성한다(cvCloneMat 상당).
            </summary>
            <returns>원래 화상의 완전한 카피</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.ComputeCorrespondEpilines(System.Int32,OpenCvSharp.CvMat,OpenCvSharp.CvMat@)">
            <summary>
            2장의 화상간에 점대응으로부터 기초 행렬(F행렬)을 계산한다
            </summary>
            <param name="which_image">points를 포함한 화상의 인덱스(1 또는 2).</param>
            <param name="fundamental_matrix">기초 행렬</param>
            <param name="correspondent_lines">계산된 에피포라선.크기는 3xN 또 Nx3 의 배열.</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.ConvertPointsHomogenious(OpenCvSharp.CvMat)">
            <summary>
            2장의 화상간에 점대응으로부터 기초 행렬(F행렬)을 계산한다
            </summary>
            <param name="dst">출력점의 배열.입력 배열과 같은 수의 점이 포함되는 차원수는, 같을, 혹은 입력보다  1적은가  1크다.그리고 2..4의 범위내가 아니면 안된다. </param>
        </member>
        <member name="M:OpenCvSharp.CvMat.ConvertPointsHomogeneous(OpenCvSharp.CvMat)">
            <summary>
            2장의 화상간에 점대응으로부터 기초 행렬(F행렬)을 계산한다
            </summary>
            <param name="dst">출력점의 배열.입력 배열과 같은 수의 점이 포함되는 차원수는, 같을, 혹은 입력보다  1적은가  1크다.그리고 2..4의 범위내가 아니면 안된다. </param>
        </member>
        <member name="M:OpenCvSharp.CvMat.InitMatHeader(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            이미 확보된 CvMat 를 초기화한다.
            </summary>
            <param name="rows">화상의 폭과 높이</param>
            <param name="cols">화상의 컬러깊이</param>
            <param name="type">채널수</param>
            <returns>초기화된 행렬 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.InitMatHeader``1(System.Int32,System.Int32,OpenCvSharp.MatrixType,``0[])">
            <summary>
            이미 확보된 CvMat 를 초기화한다.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rows">화상의 폭과 높이</param>
            <param name="cols">화상의 컬러심도</param>
            <param name="type">채널수</param>
            <param name="data">행렬의 헤더로 지정되는 데이터 배열. 길이가 rows*cols*channels의 1 차원 배열을 지정한다.</param>
            <returns>초기화된 행렬 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.InitMatHeader``1(System.Int32,System.Int32,OpenCvSharp.MatrixType,``0[],System.Int32)">
            <summary>
            이미 확보된 CvMat 를 초기화한다.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rows">화상의 폭과 높이</param>
            <param name="cols">화상의 컬러심도</param>
            <param name="type">채널수</param>
            <param name="data">행렬의 헤더로 지정되는 데이터 배열. 길이가 rows*cols*channels의 1 차원 배열을 지정한다.</param>
            <param name="step">할당할 수 있는 데이터의 총 폭을 바이트 단위로 나타낸다.디폴트에서는, step에는 가능한 한 작은 값이 이용된다.즉, 행렬이 연속하는 행간에 갭이 존재하지 않는다.</param>
            <returns>초기화된 행렬 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.mGet(System.Int32,System.Int32)">
            <summary>
            싱글 채널 부동 소수점형 행렬의 특정의 요소를 돌려준다. cvGetReal2D의 고속화판 함수이다.
            </summary>
            <param name="row">행의 0을 기준으로 한 인덱스</param>
            <param name="col">열의 0을 기준으로 한 인덱스</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.mSet(System.Int32,System.Int32,System.Double)">
            <summary>
            싱글 채널의 부동 소수점형 행렬의 특정의 요소의 값을 변경한다.cvSetReal2D의 고속화판 함수이다.
            </summary>
            <param name="row">행의 0을 기준으로 한 인덱스</param>
            <param name="col">열의 0을 기준으로 한 인덱스</param>
            <param name="value">행렬의 요소가 새로운 값</param>
        </member>
        <member name="M:OpenCvSharp.CvMat.Rodrigues2(OpenCvSharp.CvMat)">
            <summary>
            회전 벡터를 회전 행렬로 변환한다.또는 그 반대도 가능하다.
            </summary>
            <param name="dst">각 입력에 대응한 출력의 회전 행렬(3 x3), 또는 회전 벡터(3x1 혹은 1 x3)</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.Rodrigues2(OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            회전 벡터를 회전 행렬로 변환한다.또는 그 반대도 가능하다.
            </summary>
            <param name="dst">각 입력에 대응한 출력의 회전 행렬(3 x3), 또는 회전 벡터(3x1 혹은 1 x3)</param>
            <param name="jacobian">옵션 출력의 3 x9 또는 9 x3의 야코비안 - 출력 배열의 각 요소의, 입력 배열의 각 요소에 관한 편미분 계수.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMat.UndistortPoints(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            관측된 점좌표로부터 이상적인 점좌표를 계산한다
            </summary>
            <param name="dst">일그러짐 보정 후에 역투시 투영을 실시한 이상적인 점좌표.</param>
            <param name="camera_matrix">카메라 행렬 A=[fx 0 cx; 0 fy cy; 0 0 1] </param>
            <param name="dist_coeffs">일그러짐 계수의 벡터, 4x1, 1x4, 5x1, 1x5.</param>
            <param name="R">오브젝트 공간에서의 평행화 변환(3x3 행렬). cvStereoRectify 로 계산된 값, R1 혹은 R2 가 건네받는다.이 파라미터가 null 의 경우, 단위행렬이 이용된다.</param>
            <param name="P">새로운 카메라 행렬(3 x3), 혹은, 새로운 투영 행렬(3 x4). cvStereoRectify  로 계산된 값, P1 혹은 P2  가 건네받는다. 이 파라미터가 null 의 경우, 단위행렬이 이용된다. </param>
        </member>
        <member name="M:OpenCvSharp.CvMat.ToString">
            <summary>
            문자열 형식을 돌려준다. 1 채널의 경우에만 대응하고 있다.
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="P:OpenCvSharp.CvMat.Type">
            <summary>
            CvMat 서명 (CV_MAT_MAGIC_VAL). 요소의 형태와 플래그
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.Step">
            <summary>
            전행의 바이트 길이
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.Data">
            <summary>
            행렬 데이터의 포인터.
            실제로 보관하고 있는 데이터형에 따라 적당 byte*나 double*등을 캐스트 해 이용한다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.DataByte">
            <summary>
            행렬 데이터의 Byte형 포인터.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.DataInt16">
            <summary>
            행렬 데이터의 Int16(short) 형 포인터.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.DataInt32">
            <summary>
            행렬 데이터의 Int32(int) 형 포인터.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.DataSingle">
            <summary>
            행렬 데이터의 Single(float) 형 포인터.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.DataDouble">
            <summary>
            행렬 데이터의 Double형 포인터.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.DataArrayByte">
            <summary>
            행렬 데이터의 Byte형 포인터. 배열과 같이 액세스 가능.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.DataArrayInt16">
            <summary>
            행렬 데이터에의 Int16(short) 형 포인터. 배열과 같이 액세스 가능.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.DataArrayInt32">
            <summary>
            행렬 데이터에의 Int32(int) 형 포인터. 배열과 같이 액세스 가능.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.DataArraySingle">
            <summary>
            행렬 데이터에의 Single(float) 형 포인터. 배열과 같이 액세스 가능.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.DataArrayDouble">
            <summary>
            행렬 데이터에의 Double형 포인터. 배열과 같이 액세스 가능.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.Cols">
            <summary>
            행렬의 열수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.Height">
            <summary>
            행렬의 열수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.Rows">
            <summary>
            행렬의 행수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.Width">
            <summary>
            행렬의 행수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.Dims">
            <summary>
            배열의 차원수를 취득한다 (2 고정)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMat.Item(System.Int32,System.Int32)">
            <summary>
            특정의 배열 요소를 취득·설정한다 (cvmGet, cvmSet 상당). 
            </summary>
            <param name="row">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="col">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="T:OpenCvSharp.CvSubdiv2D">
             <summary>
            서브디비젼을 위한 클래스
             </summary>
        </member>
        <member name="T:OpenCvSharp.CvGraph">
            <summary>
            Oriented or unoriented weigted graph
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvGraph.SizeOf">
            <summary>
            sizeof(CvGraph) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvGraph._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvGraph.#ctor">
            <summary>
            디폴트 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvGraph.#ctor(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            비어있는 그래프를 생성한다
            </summary>
            <param name="graph_flags">생성한 그래프의 타입. 무방향그래프의 경우, CV_SEQ_KIND_GRAPH, 유향그래프의 경우, CV_SEQ_KIND_GRAPH | CV_GRAPH_FLAG_ORIENTED. </param>
            <param name="vtx_size">그래프의 헤드사이즈 (sizeof(CvGraph) 이상)</param>
            <param name="edge_size">그래프의 정점 사이즈</param>
            <param name="storage">그래프의 엣지사이즈</param>
        </member>
        <member name="M:OpenCvSharp.CvGraph.#ctor(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage,System.Int32)">
            <summary>
            비어있는 그래프를 생성한다
            </summary>
            <param name="graph_flags">생성한 그래프의 타입. 무방향그래프의 경우, CV_SEQ_KIND_GRAPH, 유향그래프의 경우, CV_SEQ_KIND_GRAPH | CV_GRAPH_FLAG_ORIENTED. </param>
            <param name="header_size">그래프의 헤드사이즈 (sizeof(CvGraph) 이상)</param>
            <param name="vtx_size">그래프의 정점 사이즈</param>
            <param name="edge_size">그래프의 엣지사이즈</param>
            <param name="storage">그래프 컨테이너</param>
        </member>
        <member name="M:OpenCvSharp.CvGraph.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvGraph*</param>
        </member>
        <member name="M:OpenCvSharp.CvGraph.Initialize(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvGraph*</param>
        </member>
        <member name="M:OpenCvSharp.CvGraph.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvGraph.ClearGraph">
            <summary>
            그래프로부터 모든 정점과 엣지를 삭제한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvGraph.CloneGraph(OpenCvSharp.CvMemStorage)">
            <summary>
            그래프를 카피한다
            </summary>
            <param name="storage">카피를 위한 컨테이너</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.FindGraphEdge(System.Int32,System.Int32)">
            <summary>
            그래프로부터 엣지를 검출한다(인덱스 지정)
            </summary>
            <param name="start_idx">엣지의 시점을 나타내는 정점의 인덱스. </param>
            <param name="end_idx">엣지의 종점을 나타내는 정점의 인덱스.무향그래프의 경우, 순서는 어디라도 좋다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphFindEdge(System.Int32,System.Int32)">
            <summary>
            그래프로부터 엣지를 검출한다(인덱스 지정)
            </summary>
            <param name="start_idx">엣지의 시점을 나타내는 정점의 인덱스. </param>
            <param name="end_idx">엣지의 종점을 나타내는 정점의 인덱스.무향그래프의 경우, 순서는 어디라도 좋다. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.FindGraphEdgeByPtr(OpenCvSharp.CvGraphVtx,OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프로부터 엣지를 검출한다(포인터 지정)
            </summary>
            <param name="start_vtx">엣지의 시점을 나타내는 정점에의 포인터. </param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점에의 포인터.무향그래프의 경우, 순서는 어디라도 좋다. </param>
            <returns>지정한 두 개의 정점을 접속하는 엣지</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphFindEdgeByPtr(OpenCvSharp.CvGraphVtx,OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프로부터 엣지를 검출한다(포인터 지정)
            </summary>
            <param name="start_vtx">엣지의 시점을 나타내는 정점에의 포인터. </param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점에의 포인터.무향그래프의 경우, 순서는 어디라도 좋다. </param>
            <returns>지정한 두 개의 정점을 접속하는 엣지</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphAddEdge(System.Int32,System.Int32)">
            <summary>
            그래프에 엣지를 추가한다(인덱스 지정)
            </summary>
            <param name="start_idx">엣지의 시점을 나타내는 인덱스</param>
            <param name="end_idx">엣지의 종점을 나타내는 인덱스.무향그래프의 경우, 순서는 어디라도 좋다. </param>
            <returns>추가에 성공하면 1을 돌려주어, 이미 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려주어, 정점의 어느 쪽에도 존재하지 않을때, 시점과 종점이 같을때 또는 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphAddEdge(System.Int32,System.Int32,OpenCvSharp.CvGraphEdge)">
            <summary>
            그래프에 엣지를 추가한다(인덱스 지정)
            </summary>
            <param name="start_idx">엣지의 시점을 나타내는 인덱스</param>
            <param name="end_idx">엣지의 종점을 나타내는 인덱스.무향그래프의 경우, 순서는 어디라도 좋다.  </param>
            <param name="edge">옵션의 입력 파라미터.엣지의 초기화를 위한 데이터.． </param>
            <returns>추가에 성공하면 1을 돌려주어, 이미 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려주어, 정점의 어느 쪽에도 존재하지 않을때, 시점과 종점이 같을때 또는 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphAddEdge(System.Int32,System.Int32,OpenCvSharp.CvGraphEdge,System.IntPtr)">
            <summary>
            그래프에 엣지를 추가한다(인덱스 지정)
            </summary>
            <param name="start_idx">엣지의 시점을 나타내는 인덱스</param>
            <param name="end_idx">엣지의 종점을 나타내는 인덱스.무향그래프의 경우, 순서는 어디라도 좋다.  </param>
            <param name="edge">옵션의 입력 파라미터.엣지의 초기화를 위한 데이터. </param>
            <param name="inserted_edge">입력된 엣지의 주소를 보존하기 위한 , 옵션의 출력 파라미터. </param>
            <returns>추가에 성공하면 1을 돌려주어, 이미 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려주어, 정점의 어느 쪽에도 존재하지 않을때, 시점과 종점이 같을때 또는 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphAddEdgeByPtr(OpenCvSharp.CvGraphEdge,OpenCvSharp.CvGraphEdge)">
            <summary>
            그래프에 엣지를 추가한다(포인터 지정)
            </summary>
            <param name="start_vtx">엣지의 시점을 나타내는 정점</param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점</param>
            <returns>추가에 성공하면 1을 돌려주어, 벌써 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려주고 정점의 어느 쪽에도 존재하지 않거나, 시점과 종점이 같을때 또는 다른 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphAddEdgeByPtr(OpenCvSharp.CvGraphEdge,OpenCvSharp.CvGraphEdge,OpenCvSharp.CvGraphEdge)">
            <summary>
            그래프에 엣지를 추가한다(포인터 지정)
            </summary>
            <param name="start_vtx">엣지의 시점을 나타내는 정점</param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점</param>
            <param name="edge">옵션의 입력 파라미터, 엣지의 초기화 데이터.</param>
            <returns>추가에 성공하면 1을 돌려주어, 벌써 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려주고 정점의 어느 쪽에도 존재하지 않거나, 시점과 종점이 같을때 또는 다른 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphAddEdgeByPtr(OpenCvSharp.CvGraphEdge,OpenCvSharp.CvGraphEdge,OpenCvSharp.CvGraphEdge,System.IntPtr)">
            <summary>
            그래프에 엣지를 추가한다(포인터 지정)
            </summary>
            <param name="start_vtx">엣지의 시점을 나타내는 정점</param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점</param>
            <param name="edge">옵션의 입력 파라미터, 엣지의 초기화 데이터.</param>
            <param name="inserted_edge">엣지의 집합 중에서 입력된 엣지의 주소를 보존하기 위한 , 옵션의 출력 파라미터.</param>
            <returns>추가에 성공하면 1을 돌려주어, 벌써 두 개의 정점을 접속하는 엣지가 존재하는 경우는 0을 돌려주고 정점의 어느 쪽에도 존재하지 않거나, 시점과 종점이 같을때 또는 다른 중대한 문제가 있을 때는―1을 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphAddVtx">
            <summary>
            그래프에 정점을 추가한다
            </summary>
            <returns>정점의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphAddVtx(OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프에 정점을 추가한다
            </summary>
            <param name="vtx">추가되는 정점의 초기화에 사용되는, 옵션의 입력 인수(sizeof(CvGraphVtx)의 영역을 넘은 유저 정의 필드만 카피된다). </param>
            <returns>정점의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphAddVtx(OpenCvSharp.CvGraphVtx,OpenCvSharp.CvGraphVtx@)">
            <summary>
            그래프에 정점을 추가한다
            </summary>
            <param name="vtx">추가되는 정점의 초기화에 사용되는, 옵션의 입력 인수(sizeof(CvGraphVtx)의 영역을 넘은 유저 정의 필드만 카피된다). </param>
            <param name="inserted_vtx">새로운 정점의 주소가 여기에 쓰여진다.</param>
            <returns>정점의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphEdgeIdx(OpenCvSharp.CvGraphEdge)">
            <summary>
            그래프의 엣지의 인덱스를 돌려준다
            </summary>
            <param name="edge">엣지 참조</param>
            <returns>그래프의 엣지 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphGetEdgeCount">
            <summary>
            Returns count of edges
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphGetVtxCount">
            <summary>
            Returns count of vertex
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphRemoveEdge(System.Int32,System.Int32)">
            <summary>
            그래프로부터 엣지를 삭제한다(인덱스 지정)
            </summary>
            <param name="start_idx">엣지의 시점을 나타내는 정점의 인덱스. </param>
            <param name="end_idx">엣지의 종점을 나타내는 정점의 인덱스.무향그래프의 경우, 순서는 어디라도 좋다. </param>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphRemoveEdgeByPtr(OpenCvSharp.CvGraphVtx,OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프로부터 엣지를 삭제한다(포인터 지정)
            </summary>
            <param name="start_vtx">엣지의 시점을 나타내는 정점의 인덱스. </param>
            <param name="end_vtx">엣지의 종점을 나타내는 정점의 인덱스.무향그래프의 경우, 순서는 어디라도 좋다. </param>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphRemoveVtx(System.Int32)">
            <summary>
            그래프로부터 정점을 삭제한다(인덱스 지정)
            </summary>
            <param name="index">삭제되는 정점의 인덱스</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphRemoveVtxByPtr(OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프로부터 정점을 삭제한다(포인터 지정)
            </summary>
            <param name="vtx">삭제되는 정점에의 포인터</param>
            <returns>삭제된 엣지의 수, 혹은 정점이 그래프에 존재하지 않는 경우는―1</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphVtxDegree(System.Int32)">
            <summary>
            정점으로 접속하고 있는 엣지의 수를 센다(인덱스 지정)
            </summary>
            <param name="vtx_idx">정점의 인덱스</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphVtxDegreeByPtr(OpenCvSharp.CvGraphVtx)">
            <summary>
            정점으로 접속하고 있는 옆의 수를 센다(포인터 지정)
            </summary>
            <param name="vtx">정점에의 포인터</param>
            <returns>지정한 정점으로 접속한(들어가는/나오는 양방향의) 엣지의 수</returns>
        </member>
        <member name="M:OpenCvSharp.CvGraph.GraphVtxIdx(OpenCvSharp.CvGraphVtx)">
            <summary>
            그래프 정점의 인덱스를 돌려준다
            </summary>
            <param name="vtx">그래프 정점에의 참조</param>
            <returns>그래프 정점의 인덱스를 돌려준다</returns>
        </member>
        <member name="P:OpenCvSharp.CvGraph.Edges">
            <summary>
            Set of edges
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSubdiv2D.SizeOf">
            <summary>
            sizeof(CvSubdiv2D)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSubdiv2D._data">
            <summary>
            C++/CLI측에서 포인터에 액세스 하는 오브젝트
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.#ctor">
            <summary>
            디폴트 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.#ctor(OpenCvSharp.CvRect,OpenCvSharp.CvMemStorage)">
            <summary>
            cvCreateSubdivDelaunay2D로 초기화
            </summary>
            <param name="rect"></param>
            <param name="storage"></param>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvSubdiv2D*</param>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.Initialize(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvSubdiv2D*</param>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.CalcVoronoi2D">
            <summary>
            가상점의 좌표를 계산한다. 원래의 세분할면이 있는 정점에 대응하는 가상점모두를 접속하여 그 정점을 포함한 보로노이 영역의 경계를 구성한다(CalcSubdivVoronoi2D 상당) 
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.ClearVoronoi2D">
            <summary>
            모든 가상점을 삭제한다 (cvClearSubdivVoronoi2D). 
            이 함수 전에 소환되어 세분할이 변경되었을 경우 이 함수는 cvCalcSubdivVoronoi2D의 내부에서 불린다. 
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.FindNearestPoint2D(OpenCvSharp.CvPoint2D32f)">
            <summary>
            주어진 점에 가장 가까운 세분비율의 정점을 구한다. 입력점을 세분할내에 배치하는 또 하나의 함수이다.
            이 함수는 입력된 점에 가장 가까운 정점을 구한다. 
            </summary>
            <param name="pt">입력점</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.Insert(OpenCvSharp.CvPoint2D32f)">
            <summary>
            들로네 삼각형에 점을 추가한다 (cvSubdivDelaunay2D)
            </summary>
            <param name="pt">추가하는 점</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.InitSubdivDelaunay2D(OpenCvSharp.CvRect)">
            <summary>
            CvSubdiv2D의 초기화
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.Locate(OpenCvSharp.CvPoint2D32f,OpenCvSharp.CvSubdiv2DEdge@)">
            <summary>
            들로네 삼각형에 점을 추가한다 (cvSubdiv2DLocate 상당)
            </summary>
            <param name="pt">배치하는 점</param>
            <param name="edge">출력되는 엣지. 배치한 점은 그 근처상 또는 구석에 존재한다.</param>
            <returns>배치하는 점</returns>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2D.Locate(OpenCvSharp.CvPoint2D32f,OpenCvSharp.CvSubdiv2DEdge@,OpenCvSharp.CvSubdiv2DPoint@)">
            <summary>
            들로네 삼각형에 점을 추가한다 (cvSubdiv2DLocate 상당)
            </summary>
            <param name="pt">배치하는 점</param>
            <param name="edge">출력되는 엣지. 배치한 점은 그 근처상 또는 구석에 존재한다.</param>
            <param name="vertex">옵션 출력. 입력점으로 일치하는 세분할의 정점의 포인터의 포인터</param>
            <returns>배치하는 점</returns>
        </member>
        <member name="P:OpenCvSharp.CvSubdiv2D.QuadEdges">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSubdiv2D.IsGeometryValid">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSubdiv2D.RecentEdge">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSubdiv2D.TopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSubdiv2D.BottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvStereoBMState">
            <summary>
            블록매칭에 의한 스테레오 매칭 알고리즘을 위한 구조체
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStereoBMState.SizeOf">
            <summary>
            sizeof(CvStereoBMState)를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStereoBMState._data">
            <summary>
            C++/CLI wrapper of native CvStereoBMState* pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvStereoBMState.#ctor">
            <summary>
            스테레오 블록매칭 구조체를 작성한다 (cvCreateStereoBMState 해당)
            </summary>
            <returns>스테레오 블록 매칭 구조체</returns>
        </member>
        <member name="M:OpenCvSharp.CvStereoBMState.#ctor(OpenCvSharp.StereoBMPreset)">
            <summary>
            스테레오 블록매칭 구조체를 작성한다 (cvCreateStereoBMState 해당)
            </summary>
            <param name="preset">미리 정의된 파라미터의 ID. 구조체를 작성한 다음에 임의의 파라미터를 오버라이드(override) 할 수 있다. </param>
        </member>
        <member name="M:OpenCvSharp.CvStereoBMState.#ctor(OpenCvSharp.StereoBMPreset,System.Int32)">
            <summary>
            스테레오 블록매칭 구조체를 작성한다 (cvCreateStereoBMState)
            </summary>
            <param name="preset">미리 정의된 파라미터의 ID. 구조체를 작성한 다음에 임의의 파라미터를 오버라이드(override) 할 수 있다. </param>
            <param name="numberOfDisparities">시차수(최대 시차-최소 시차). 이 파라미터가 0 의 경우 preset 로부터 선택된다. 그렇지 않은 경우는 주어진 값이 preset 의 값을 오버라이드(override) 한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvStereoBMState.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">CvStereoBMState*</param>
        </member>
        <member name="M:OpenCvSharp.CvStereoBMState.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvStereoBMState.FindStereoCorrespondence(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            블록매칭 알고리즘을 이용해 시차 화상을 계산한다 (cvFindStereoCorrespondenceBM 상당)
            </summary>
            <param name="left">왼쪽 화상. 싱글 채널 8비트.</param>
            <param name="right">왼쪽 화상. 싱글 채널 8비트.</param>
            <param name="disparity">출력의 시차 배열. 싱글 채널 16비트, 부호 있는 정수, 입력 화상과 같은 사이즈. 각 요소는, 계산된 시차이며 16배 되어 정수치에.</param>
        </member>
        <member name="P:OpenCvSharp.CvStereoBMState.PreFilterType">
            <summary>
            사전 필터의 타입 (현재로서는 0)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoBMState.PreFilterSize">
            <summary>
            사전 필터의 사이즈 (대체로 5 x5로부터 21x21)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoBMState.PreFilterCap">
            <summary>
            사전 필터의 캡 (대체로 31 이하)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoBMState.SADWindowSize">
            <summary>
            SAD(Sum of Absolute Difference)의 창의 크기 (5 x5로부터 21x21)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoBMState.MinDisparity">
            <summary>
            SAD(Sum of Absolute Difference)의 최소 시차 (=0)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoBMState.NumberOfDisparities">
            <summary>
            SAD(Sum of Absolute Difference)의 최대 시차-최소 시차
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoBMState.TextureThreshold">
            <summary>
            사후 필터의 texture가 없는 영역을 무시할 때 임계값
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoBMState.UniquenessRatio">
            <summary>
            사후 필터의 다른 시차로의 (성냥?)부근에 있는 경우에 그 픽셀을 제외할 때의 비율?
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoBMState.SpeckleWindowSize">
            <summary>
            사후 필터의 시차 변화 윈도우(이용되지 않는다)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoBMState.SpeckleRange">
            <summary>
            사후 필터의 윈도우의 변화 범위(이용되지 않는다)
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSeqReader">
            <summary>
            CvSeq로부터 데이터를 읽어내기 위한 클래스
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSeqReader.SizeOf">
            <summary>
            sizeof(CvSeqReader)를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSeqReader._data">
            <summary>
            C++/CLI wrapper of data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqReader.#ctor">
            <summary>
            초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqReader.GetPos">
            <summary>
            현재의 리더의 위치(0 ... reader->seq->total - 1 의 범위)를 돌려준다 (cvGetSeqReaderPos).
            </summary>
            <returns>리더의 위치</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeqReader.NextSeqElem(System.Int32)">
            <summary>
            다음의 시퀸스에 (CV_NEXT_SEQ_ELEM 해당)
            </summary>
            <param name="elem_size"></param>
        </member>
        <member name="M:OpenCvSharp.CvSeqReader.PrevSeqElem(System.Int32)">
            <summary>
            전의 시퀸스에 (CV_PREV_SEQ_ELEM 해당)
            </summary>
            <param name="elem_size"></param>
        </member>
        <member name="M:OpenCvSharp.CvSeqReader.ReadSeqElem``1">
            <summary>
            시퀸스의 요소를 하나 읽어내고 읽기 포인터를 다음으로 1칸 이동시킨다 (CV_READ_SEQ_ELEM 해당)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqReader.RevReadSeqElem``1">
            <summary>
            시퀸스의 전의 요소를 하나 읽어내고 읽기 포인터를 전에 1칸 이동시킨다 (CV_REV_READ_SEQ_ELEM 해당)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqReader.SetPos(System.Int32)">
            <summary>
            읽기 위치를 절대 위치나 상대 위치에서 나타내진 위치로 이동한다 (cvSetSeqReaderPos).
            </summary>
            <param name="index">이동처의 위치.위치 결정 모드(다음의 파라미터 is_relative를 참조)가 사용되고 있는 경우, 실제의 위치는 index 를 reader->seq->total로 나눈 잉여가 된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeqReader.SetPos(System.Int32,System.Boolean)">
            <summary>
            읽기 위치를 절대 위치나 상대 위치에서 나타내진 위치로 이동한다 (cvSetSeqReaderPos).
            </summary>
            <param name="index">이동처의 위치.위치 결정 모드(다음의 파라미터 is_relative를 참조)가 사용되고 있는 경우, 실제의 위치는 index 를 reader->seq->total로 나눈 잉여가 된다.</param>
            <param name="is_relative">true, index 는 현재 위치로부터의 상대치</param>
        </member>
        <member name="P:OpenCvSharp.CvSeqReader.HeaderSize">
            <summary>
            시퀸스의 헤드 사이즈
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqReader.Seq">
            <summary>
            Sequence, beign read
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqReader.Block">
            <summary>
            current block
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqReader.Ptr">
            <summary>
            pointer to element be read next
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqReader.BlockMin">
            <summary>
            pointer to the beginning of block
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqReader.BlockMax">
            <summary>
            pointer to the End of block
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqReader.DeltaIndex">
            <summary>
            seq->first->start_index
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqReader.PrevElem">
            <summary>
            pointer to the End of block
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqReader.ReaderPos">
            <summary>
            현재의 리더의 위치를 취득·설정한다
            </summary>
        </member>
        <member name="T:OpenCvSharp.ArrayAddress1`1">
            <summary>
            1 차원 배열의 주소를 얻기 위한 클래스
            </summary>
        </member>
        <member name="M:OpenCvSharp.ArrayAddress1`1.#ctor(`0[])">
            <summary>
            초기화
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:OpenCvSharp.ArrayAddress1`1.#ctor(`0[0:,0:])">
            <summary>
            초기화
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:OpenCvSharp.ArrayAddress1`1.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.ArrayAddress1`1.op_Implicit(OpenCvSharp.ArrayAddress1{`0})~System.IntPtr">
            <summary>
            포인터에의 묵시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.ArrayAddress1`1.Pointer">
            <summary>
            포인터의 취득
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.ArrayAddress2`1">
            <summary>
            2 차원 배열의 주소를 얻기 위한 클래스
            </summary>
        </member>
        <member name="M:OpenCvSharp.ArrayAddress2`1.#ctor(`0[][])">
            <summary>
            초기화
            </summary>
            <param name="array">T[][]</param>
        </member>
        <member name="M:OpenCvSharp.ArrayAddress2`1.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.ArrayAddress2`1.op_Implicit(OpenCvSharp.ArrayAddress2{`0})~System.IntPtr[]">
            <summary>
            포인터의 묵시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.ArrayAddress2`1.Pointer">
            <summary>
            포인터의 취득
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.ConvertImageFlag">
            <summary>
            cvConvertImage의 처리 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.ConvertImageFlag.MeanC">
            <summary>
            화상을 수직 방향으로 반전 [CV_CVTIMG_FLIP]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ConvertImageFlag.GaussianC">
            <summary>
            빨강과 파랑의 채널을 스왑 [CV_CVTIMG_SWAP_RB]
            </summary>
        </member>
        <member name="T:OpenCvSharp.ImageOrigin">
            <summary>
            IplImage의 원점
            </summary>
        </member>
        <member name="F:OpenCvSharp.ImageOrigin.TopLeft">
            <summary>
            좌상원점 [IPL_ORIGIN_TL (0)]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ImageOrigin.BottomLeft">
            <summary>
            좌하원점 (Windows의 비트 맵 형식) [IPL_ORIGIN_BL (1)]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSparseNode">
            <summary>
            CvSparseMat의 요소
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSparseNode.SizeOf">
            <summary>
            sizeof(CvSparseNode)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSparseNode._data">
            <summary>
            C++/CLI access to object`s pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSparseNode.#ctor(System.IntPtr)">
            <summary>
            디폴트 constructor　 　
            </summary>
            <param name="ptr">CvSparseNode*</param>
        </member>
        <member name="P:OpenCvSharp.CvSparseNode.HashVal">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSparseNode.Next">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.PointerAccessor1D_Int32">
            <summary>
            Int32* 를 배열과 같이 액세스 할 수 있도록 하기 위한 클래스
            </summary>
        </member>
        <member name="T:OpenCvSharp.IPointerAccessor1D`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:OpenCvSharp.IPointerAccessor1D`1.Get(System.Int32)">
            <summary>
            ptr[index]
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IPointerAccessor1D`1.Set(System.Int32,`0)">
            <summary>
            ptr[index] = value;
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="P:OpenCvSharp.IPointerAccessor1D`1.Ptr">
            <summary>
            Data pointer
            </summary>
        </member>
        <member name="P:OpenCvSharp.IPointerAccessor1D`1.Item(System.Int32)">
            <summary>
            Indexer
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:OpenCvSharp.PointerAccessor1D_Int32.ptr">
            <summary>
            Pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Int32.#ctor(System.IntPtr)">
            <summary>
            IntPtr 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Int32.#ctor(System.Int32*)">
            <summary>
            Int32* 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Int32.Get(System.Int32)">
            <summary>
            지정한 인덱스의 배열의 요소를 취득한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Int32.Set(System.Int32,System.Int32)">
            <summary>
            지정한 인덱스의 배열의 요소를 설정한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D_Int32.Ptr">
            <summary>
            내부에서 보관 유지하고 있는 포인터 (Int32*)
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D_Int32.Item(System.Int32)">
            <summary>
            배열의 요소에 액세스 하는 인덱스
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="T:OpenCvSharp.CvLineSegmentPoint">
            <summary>
            cvHoughLines2로 얻을 수 있는, 양단의 점으로 표현되는 선분
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvLineSegmentPoint.P1">
            <summary>
            첫번째 점
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvLineSegmentPoint.P2">
            <summary>
            2번째 점
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPoint.#ctor(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint)">
            <summary>
            초기화
            </summary>
            <param name="p1">1번째 점</param>
            <param name="p2">2번째 점</param>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPoint.Equals(OpenCvSharp.CvLineSegmentPoint)">
            <summary>
            지정한 CvLineSegmentPoint와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPoint.op_Equality(OpenCvSharp.CvLineSegmentPoint,OpenCvSharp.CvLineSegmentPoint)">
            <summary>
            == 연산자의 overload
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPoint.op_Inequality(OpenCvSharp.CvLineSegmentPoint,OpenCvSharp.CvLineSegmentPoint)">
            <summary>
            != 연산자의 overload 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPoint.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPoint.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPoint.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.ReduceOperation">
            <summary>
            cvReduce로 이용하는 축소 처리의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.ReduceOperation.Sum">
            <summary>
            출력은 각 행(또는 각 렬)의 총화
            [CV_REDUCE_SUM]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ReduceOperation.Avg">
            <summary>
            출력은 각 행(또는 각 렬)의 평균 벡터
            [CV_REDUCE_AVG]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ReduceOperation.Max">
            <summary>
            출력은 각 행(또는 각 렬)에 있어서의 최대치
            [CV_REDUCE_MAX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ReduceOperation.Min">
            <summary>
            출력은 각 행(또는 각 렬)에 있어서의 최소치
            [CV_REDUCE_MIN]
            </summary>
        </member>
        <member name="T:OpenCvSharp.InvertMethod">
            <summary>
            역행열을 구하는 알고리즘
            </summary>
        </member>
        <member name="F:OpenCvSharp.InvertMethod.LU">
            <summary>
            최적인 비트 선택에 의한 Gauss의 소거법 [CV_LU]
            </summary>
        </member>
        <member name="F:OpenCvSharp.InvertMethod.Svd">
            <summary>
            특이치 분해 [CV_SVD]
            </summary>
        </member>
        <member name="F:OpenCvSharp.InvertMethod.SvdSymmetric">
            <summary>
            대칭 행렬을 위한 특이치 분해 [CV_SVD_SYM]
            </summary>
        </member>
        <member name="T:OpenCvSharp.HoughCirclesMethod">
            <summary>
            cvHoughCircles로 이용하는 허프 변환(원 검출)의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.HoughCirclesMethod.Gradient">
            <summary>
            기본적인 2 단계의 허프 변환 [CV_HOUGH_GRADIENT]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvMatND">
            <summary>
            다차원, 다채널의 조밀한 행렬
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMatND.SizeOf">
            <summary>
            sizeof(CvMatND)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMatND._data">
            <summary>
            C++/CLI wrapper in order to access a native structure
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMatND.dataArrayByte">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMatND.dataArrayInt16">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMatND.dataArrayInt32">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMatND.dataArraySingle">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMatND.dataArrayDouble">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMatND.#ctor(System.Int32,System.Int32[],OpenCvSharp.MatrixType)">
            <summary>
            다차원의 조밀한 배열의 헤더와 그 내부 데이터를 확보한다.
            </summary>
            <param name="dims">배열의 차원수.CV_MAX_DIM(디폴트에서는 32.빌드시로 변경될 가능성도 있다)를 넘어선 안 된다.</param>
            <param name="sizes">차원 사이즈의 배열.</param>
            <param name="type">배열 요소의 종류.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMatND.#ctor(System.Int32,System.Int32[],OpenCvSharp.MatrixType,System.Array)">
            <summary>
            다차원의 조밀한 배열의 헤더와 그 내부 데이터를 확보한다.
            </summary>
            <param name="dims">배열의 차원수.CV_MAX_DIM(디폴트에서는 32.빌드시로 변경될 가능성도 있다)를 넘어선 안 된다.</param>
            <param name="sizes">차원 사이즈의 배열.</param>
            <param name="type">배열 요소의 종류.</param>
            <param name="data">행렬의 헤더로 지정되는 데이터</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMatND.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.CvMatND.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            포인터와 자동 해제의 가부를 지정해 초기화
            </summary>
            <param name="ptr"></param>
            <param name="isEnabledDispose"></param>
        </member>
        <member name="M:OpenCvSharp.CvMatND.#ctor">
            <summary>
            sizeof(CvMatND)의 분의 메모리의 할당만 가서 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMatND.#ctor(System.Boolean)">
            <summary>
            sizeof(CvMatND)의 분의 메모리의 할당만 가서, GC금지 설정으로 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMatND.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMatND.Clone">
            <summary>
            다차원 배열의 완전한 카피를 작성한다
            </summary>
            <returns>카피된 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.CvMatND.InitMatNDHeader(System.Int32,System.Int32[],OpenCvSharp.MatrixType)">
            <summary>
            다차원 배열의 헤더를 초기화한다
            </summary>
            <param name="dims">배열의 차원수</param>
            <param name="sizes">차원 사이즈의 배열</param>
            <param name="type">배열 요소의 종류</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMatND.InitMatNDHeader``1(System.Int32,System.Int32[],OpenCvSharp.MatrixType,``0[])">
            <summary>
            다차원 배열의 헤더를 초기화한다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dims">배열의 차원수</param>
            <param name="sizes">차원 사이즈의 배열</param>
            <param name="type">배열 요소의 종류</param>
            <param name="data">행렬의 헤더로 지정되는 데이터</param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvMatND.Dims">
            <summary>
            배열의 차원수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.Type">
            <summary>
            CvMatND 서명 (CV_MAT_MAGIC_VAL).요소의 형태와 플래그
            CvMatND signature (CV_MATND_MAGIC_VAL), element type and flags
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.Dim">
            <summary>
            각 차원에서의(요소수, 요소간의 바이트 거리)의 조
            Pairs (number of elements, distance between elements in bytes) for every dimension
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.Data">
            <summary>
            행렬 데이터에의 포인터.
            실제로 보관하고 있는 데이터형에 따라 적당 byte*나 double*등에 캐스트 해 이용한다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.DataByte">
            <summary>
            행렬 데이터에의 Byte형 포인터.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.DataInt16">
            <summary>
            행렬 데이터에의 Int16(short) 형 포인터
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.DataInt32">
            <summary>
            행렬 데이터에의 Int32(int) 형 포인터.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.DataSingle">
            <summary>
            행렬 데이터에의 Single(float) 형 포인터.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.DataDouble">
            <summary>
            행렬 데이터에의 Double형 포인터.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.DataArrayByte">
            <summary>
            행렬 데이터에의 Byte형 포인터. 배열과 같이 액세스 가능.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.DataArrayInt16">
            <summary>
            행렬 데이터에의 Int16(short) 형 포인터. 배열과 같이 액세스 가능.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.DataArrayInt32">
            <summary>
            행렬 데이터에의 Int32(int) 형 포인터. 배열과 같이 액세스 가능.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.DataArraySingle">
            <summary>
            행렬 데이터에의 Single(float) 형 포인터. 배열과 같이 액세스 가능.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMatND.DataArrayDouble">
            <summary>
            행렬 데이터에의 Double형 포인터. 배열과 같이 액세스 가능.
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvMatND.Dimension">
            <summary>
            각 차원에서의(요소수, 요소간의 아르바이트 거리)의 조
            Pairs (number of elements, distance between elements in bytes) for every dimension
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMatND.Dimension.Size">
            <summary></summary>
        </member>
        <member name="F:OpenCvSharp.CvMatND.Dimension.Step">
            <summary></summary>
        </member>
        <member name="T:OpenCvSharp.CvChain">
            <summary>
            윤곽 데이터
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSeq`1">
            <summary>
            확장 가능한 요소의 시퀸스
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.#ctor(OpenCvSharp.SeqType,OpenCvSharp.CvMemStorage)">
            <summary>
            시퀸스를 생성한다. header_size=sizeof(CvSeq)
            </summary>
            <param name="seq_flags">생성된 시퀸스의 플래그. 생성된 시퀸스가, 특정의 시퀸스 타입을 인수로 취하는 함수에 일절 건네받지 않는 경우는, 이 값에 0을 지정해도 상관없다.그렇지 않은 경우는, 정의 끝난 시퀸스 타입의 리스트로부터 적절한 타입이 선택되지 않으면 안 된다.</param>
            <param name="storage">시퀸스가 보존되는 장소</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.#ctor(OpenCvSharp.SeqType,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            시퀸스를 생성한다
            </summary>
            <param name="seq_flags">생성된 시퀸스의 플래그.생성된 시퀸스가, 특정의 시퀸스 타입을 인수로 취하는 함수에 일절 건네받지 않는 경우는, 이 값에 0을 지정해도 상관없다.그렇지 않은 경우는, 정의 끝난 시퀸스 타입의 리스트로부터 적절한 타입이 선택되지 않으면 안 된다.</param>
            <param name="header_size">시퀸스의 헤드사이즈.sizeof(CvSeq) 이상이 아니면 안된다. 또, 특별한 타입인가 그 확장이 지시받고 있는 경우, 그 타입은 기본 타입의 헤더와 합치하고 있지 않으면 안 된다.</param>
            <param name="storage">시퀸스가 보존되는 장소</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.#ctor(OpenCvSharp.CvSeq)">
            <summary>
            CvSeq -> CvSeq&lt;T&gt;
            </summary>
            <param name="seq"></param>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr">struct CvSeq*</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.FromArray(System.Collections.Generic.IEnumerable{`0},OpenCvSharp.SeqType,OpenCvSharp.CvMemStorage)">
            <summary>
            배열로부터 인스턴스를 생성한다
            </summary>
            <param name="array">IEnumerable 인터페이스를 실장하는 오브젝트.Array나 List&lt;T&gt; 등.</param>
            <param name="seq_flags">생성된 시퀸스의 플래그</param>
            <param name="storage">시퀸스가 보존되는 장소</param>
            <returns>CvSeq&lt;CvSeq&gt;</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.Clone">
            <summary>
            입력 행렬의 카피를 작성해 돌려준다 (cvCloneSeq).
            </summary>
            <returns>카피된 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.Clone(OpenCvSharp.CvMemStorage)">
            <summary>
            입력 행렬의 카피를 작성해 돌려준다 (cvCloneSeq).
            </summary>
            <param name="storage">새로운 시퀸스 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 입력 순서에 포함되는 스토리지를 사용한다.</param>
            <returns>카피된 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.ElemIdx(`0)">
            <summary>
            지정된 시퀸스의 요소의 인덱스를 돌려준다 (cvSeqElemIdx).
            </summary>
            <param name="element">시퀸스 요소</param>
            <returns>지정된 시퀸스 요소의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.ElemIdx(`0,OpenCvSharp.CvSeqBlock@)">
            <summary>
            지정된 시퀸스의 요소의 인덱스를 돌려준다 (cvSeqElemIdx).
            </summary>
            <param name="element">시퀸스 요소</param>
            <param name="block">요소를 포함한 시퀸스 블록의 주소가 이 장소에 보존된다.</param>
            <returns>지정된 시퀸스 요소의 인덱스</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.GetSeqElem(System.Int32)">
            <summary>
            주어진 인덱스를 가지는 요소를 시퀀스중에서 구해 그 요소를 돌려준다.
            </summary>
            <param name="index">요소의 인덱스. 부의 인덱스의 지정도 가능하고, 예를 들면,-1은 시퀀스의 마지막 요소,-2는 마지막 하나전을 가리킨다.</param>
            <returns>주어진 인덱스를 가지는 요소.요소가 발견되지 않는 경우는 null.</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.Insert(System.Int32,`0)">
            <summary>
            시퀸스안에 요소를 삽입한다 (cvSeqInsert).
            </summary>
            <param name="before_index">요소가 삽입되는 인덱스(이 인덱스의 전에 삽입된다)</param>
            <param name="element">추가되는 요소. 원시적형인가, OpenCV의 구조체(CvPoint 등).</param>
            <returns>추가된 요소</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.Partition(OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq@,OpenCvSharp.CvCmpFunc{`0})">
            <summary>
            데이터 순서를 동치류(같은 클래스에 속한다고 정의된 데이터군)에 분할한다
            </summary>
            <param name="storage">동치류로서 분할된 시퀀스의 보존 영역.null의 경우는, seq->storage 를 사용한다.</param>
            <param name="labels">출력 파라미터.입력 시퀀스의 각 요소에 할당해진(분할 결과를 나타낸다) 0으로부터 시작되는 라벨 시퀀스의 포인터의 포인터.</param>
            <param name="is_equal">2개의 시퀀스 요소가 같은 클래스인 경우, 관계 함수는 0이외를 돌려준다. 그렇지 않으면 0을 돌려준다.분할 알고리즘은, 동치 기준으로서 관계 함수의 transitive closure를 이용한다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.Pop">
            <summary>
            시퀸스의 말미로부터 하나의 요소를 삭제한다 (cvSeqPop).
            </summary>
            <returns>삭제한 요소</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.PopFront">
            <summary>
            시퀸스의 선두로부터 하나의 요소를 삭제한다 (cvSeqPopFront).
            </summary>
            <returns>삭제한 요소를 카피하는 출력처</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.PopMulti(System.Int32,OpenCvSharp.InsertPosition)">
            <summary>
            복수의 요소를 시퀸스의 어느 쪽인가의 단(선두나 말미)으로부터 삭제한다 (cvSeqPopMulti).
            </summary>
            <param name="count">삭제되는 요소수.</param>
            <param name="in_front">변경하는 시퀸스의 구석을 지정하는 플래그.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.Push(System.Nullable{`0})">
            <summary>
            시퀸스의 말미에 요소를 추가해, 할당할 수 있었던 요소를 돌려준다 (cvSeqPush).
            입력의 element 가 null 의 경우, 이 함수는 단지 요소 하나 분의 영역을 확보한다.
            </summary>
            <param name="element">추가되는 요소. 원시적형인가, OpenCV의 구조체(CvPoint 등).</param>
            <returns>추가된 요소</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.PushFront(`0)">
            <summary>
            시퀸스의 선두에 요소를 추가해, 할당할 수 있었던 요소에의 포인터를 돌려준다 (cvSeqPushFront).
            입력의 element 가 null 의 경우, 이 함수는 단지 요소 하나 분의 영역을 확보한다.
            </summary>
            <param name="element">추가되는 요소. 원시적형인가, OpenCV의 구조체(CvPoint 등).</param>
            <returns>추가된 요소</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.PushMulti(`0[],OpenCvSharp.InsertPosition)">
            <summary>
            복수의 요소를 시퀸스의 어느 쪽인가의 단(선두나 말미)에 추가한다 (cvSeqPushMulti).
            </summary>
            <param name="elements">추가되는 요소군.</param>
            <param name="in_front">변경하는 시퀸스의 끝을 지정하는 플래그.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.Search(`0,OpenCvSharp.CvCmpFunc{`0},System.Boolean,System.Int32@)">
            <summary>
            시퀸스중에서 요소를 검색한다 (cvSeqSearch).
            </summary>
            <param name="elem">검색하는 요소</param>
            <param name="func">요소의 관계에 따르고, 부·0·정의 값을 돌려주는 비교 함수</param>
            <param name="is_sorted">시퀸스가 소트가 끝난 상태인가 아닌가를 나타내는 플래그</param>
            <param name="elem_idx">출력 파라미터.발견된 요소의 인덱스.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.Slice(OpenCvSharp.CvSlice)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다 (cvSeqSlice).
            </summary>
            <param name="slice">추출하는 시퀸스의 일부분</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.Slice(OpenCvSharp.CvSlice,OpenCvSharp.CvMemStorage)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다 (cvSeqSlice).
            </summary>
            <param name="slice">추출하는 시퀸스의 일부분</param>
            <param name="storage">새로운 시퀸스 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 이 함수는 입력 순서에 포함되는 스토리지를 사용한다</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.Slice(OpenCvSharp.CvSlice,OpenCvSharp.CvMemStorage,System.Boolean)">
            <summary>
            시퀸스 슬라이스를 위한 다른 헤더를 작성한다 (cvSeqSlice).
            </summary>
            <param name="slice">추출하는 시퀸스의 일부분</param>
            <param name="storage">새로운 시퀸스 헤더와 카피된 데이터(만약 데이터가 있으면)를 보존하는 출력 스토리지. null의 경우, 이 함수는 입력 순서에 포함되는 스토리지를 사용한다</param>
            <param name="copy_data">추출된 슬라이스의 요소를 카피할까 하지 않을까를 나타내는 플래그</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.Sort(OpenCvSharp.CvCmpFunc{`0})">
            <summary>
            시퀸스의 요소를, 지정한 비교 함수를 이용해 소트 한다 (cvSeqSort).
            </summary>
            <param name="func">요소의 관계에 따르고, 부·0·정의 값을 돌려주는 비교 함수</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.StartRead(OpenCvSharp.CvSeqReader{`0})">
            <summary>
            시퀸스로부터의 연속 읽기 처리를 초기화한다 (cvStartReadSeq).
            </summary>
            <param name="reader">리더(reader) 상태.이 함수로 초기화된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.StartRead(OpenCvSharp.CvSeqReader{`0},System.Boolean)">
            <summary>
            시퀸스로부터의 연속 읽기 처리를 초기화한다 (cvStartReadSeq).
            </summary>
            <param name="reader">리더(reader) 상태.이 함수로 초기화된다.</param>
            <param name="reverse">시퀸스 주사 방향의 지정.reverse 가 false 의 경우, 리더는 선두의 시퀸스 요소에 위치한다.그 이외는 마지막 요소에 위치한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.ToArray">
            <summary>
            시퀸스를 메모리내에 연속한 하나의 블록에 카피한다 (cvCvtSeqToArray).
            </summary>
            <returns>출력되는 배열. out 되는 인수 element 와 같은 값.</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.ToArray(OpenCvSharp.CvSlice)">
            <summary>
            시퀸스를 메모리내에 연속한 하나의 블록에 카피한다 (cvCvtSeqToArray).
            </summary>
            <param name="slice">배열에 카피하는 순서내의 부분</param>
            <returns>출력되는 배열. out 되는 인수 element 와 같은 값.</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.ApproxPoly(System.Int32,OpenCvSharp.CvMemStorage,OpenCvSharp.ApproxPolyMethod,System.Double)">
            <summary>
            지정한 정도로 polyline를 근사 한다
            </summary>
            <param name="header_size">근사 된 polyline의 헷다사이즈.</param>
            <param name="storage">근사 된 윤곽의 보존 장소.null의 경우, 입력 순서의 스토리지가 사용된다. </param>
            <param name="method">근사 방법</param>
            <param name="parameter">근사 방법으로 의존하는 파라미터.CV_POLY_APPROX_DP의 경우에는, 요구하는 근사 정도이다.</param>
            <returns>단일 혹은 복수의 근사 곡선을 계산한 결과</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.ApproxPoly(System.Int32,OpenCvSharp.CvMemStorage,OpenCvSharp.ApproxPolyMethod,System.Double,System.Boolean)">
            <summary>
            지정한 정도로 polyline를 근사 한다
            </summary>
            <param name="header_size">근사 된 polyline의 헷다사이즈.</param>
            <param name="storage">근사 된 윤곽의 보존 장소.null의 경우, 입력 순서의 스토리지가 사용된다. </param>
            <param name="method">근사 방법</param>
            <param name="parameter">근사 방법으로 의존하는 파라미터.CV_POLY_APPROX_DP의 경우에는, 요구하는 근사 정도이다.</param>
            <param name="parameter2">src_seq가 점의 배열(CvMat)의 경우, 이 파라미터는 윤곽이 닫고 있는(parameter2=true)인가, 열려 있는지(parameter2=false)를 지정한다.</param>
            <returns>단일 혹은 복수의 근사 곡선을 계산한 결과</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A IEnumerator&lt;CvSeq&gt; that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeq`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An System.Collections.IEnumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:OpenCvSharp.CvSeq`1.HPrev">
            <summary>
            하나전의 시퀸스 포인터
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq`1.HNext">
            <summary>
            하나 후의 시퀸스 포인터
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq`1.VPrev">
            <summary>
            하나전의 시퀸스 포인터(두번째 구조에 따라서 의미가 다르다)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq`1.VNext">
            <summary>
            하나 후의 시퀸스 포인터(두번째, 구조에 따라서 의미가 다르다)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeq`1.Item(System.Int32)">
            <summary>
            요소에 액세스 하는 인덱스
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:OpenCvSharp.CvChain.SizeOf">
            <summary>
            sizeof(CvChain) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvChain._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvChain.#ctor(System.IntPtr)">
            <summary>
            네이티브의 데이터 포인터로부터 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.CvChain.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvChain.ApproxChains(OpenCvSharp.CvMemStorage)">
            <summary>
            프리 맨 체인(Freeman chain)을 polyline로 근사 한다
            </summary>
            <param name="storage">계산 결과 보존용의 스토리지.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvChain.ApproxChains(OpenCvSharp.CvMemStorage,OpenCvSharp.ContourChain)">
            <summary>
            프리 맨 체인(Freeman chain)을 polyline로 근사 한다
            </summary>
            <param name="storage">계산 결과 보존용의 스토리지.</param>
            <param name="method">추정 방법.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvChain.ApproxChains(OpenCvSharp.CvMemStorage,OpenCvSharp.ContourChain,System.Double)">
            <summary>
            프리 맨 체인(Freeman chain)을 polyline로 근사 한다
            </summary>
            <param name="storage">계산 결과 보존용의 스토리지.</param>
            <param name="method">추정 방법.</param>
            <param name="parameter">메소드 파라미터(현재는 사용되지 않았다).</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvChain.ApproxChains(OpenCvSharp.CvMemStorage,OpenCvSharp.ContourChain,System.Double,System.Int32)">
            <summary>
            프리 맨 체인(Freeman chain)을 polyline로 근사 한다
            </summary>
            <param name="storage">계산 결과 보존용의 스토리지.</param>
            <param name="method">추정 방법.</param>
            <param name="parameter">메소드 파라미터(현재는 사용되지 않았다).</param>
            <param name="minimal_perimeter">minimal_perimeter 이상의 주위장을 가지는 윤곽만을 계산한다.그 외의 체인은 결과의 구조체로부터 삭제된다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvChain.ApproxChains(OpenCvSharp.CvMemStorage,OpenCvSharp.ContourChain,System.Double,System.Int32,System.Boolean)">
            <summary>
            프리 맨 체인(Freeman chain)을 polyline로 근사 한다
            </summary>
            <param name="storage">계산 결과 보존용의 스토리지.</param>
            <param name="method">추정 방법.</param>
            <param name="parameter">메소드 파라미터(현재는 사용되지 않았다).</param>
            <param name="minimal_perimeter">minimal_perimeter 이상의 주위장을 가지는 윤곽만을 계산한다.그 외의 체인은 결과의 구조체로부터 삭제된다.</param>
            <param name="recursive">true의 경우, src_seq로부터 h_next 혹은 v_next에 의해서 더듬을 수 있는 모든 체인을 근사 한다.false의 경우, 단일의 체인을 근사 한다. </param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvChain.Origin">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSeqWriter">
            <summary>
            CvSeq에 데이터를 쓰기 위한 클래스
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSeqWriter.SizeOf">
            <summary>
            sizeof(CvSeqWriter) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSeqWriter._data">
            <summary>
            C++/CLI wrapper of data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter.#ctor">
            <summary>
            초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter.#ctor(OpenCvSharp.CvSeq)">
            <summary>
            시퀸스의 데이터 쓰기 처리를 초기화한다 (cvStartAppendToSeq).
            </summary>
            <param name="seq">시퀸스 포인터</param>
            <returns>Writer 상태. 이 함수로 초기화된다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter.#ctor(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            새로운 시퀸스를 작성해, writer를 초기화한다 (cvStartWriteSeq).
            </summary>
            <param name="seq_flags">작성된 시퀸스의 플래그. 생성된 시퀸스가 특정의 시퀸스 타입을 인수로 취하는 함수에 일절 건네받지 않는 경우는, 이 값에 0을 지정해도 상관없다. 그렇지 않은 경우는, 정의 끝난 시퀸스 타입의 리스트로부터 적절한 타입이 선택되지 않으면 안 된다. </param>
            <param name="header_size">시퀸스 헤더의 사이즈.sizeof(CvSeq) 이상이 아니면 안된다. 또, 특별한 타입이나 확장이 지시받고 있는 경우, 그 타입은 기본 타입의 헤드 사이즈와 일치하여야 한다. </param>
            <param name="elem_size">시퀸스의 요소 사이즈(아르바이트 단위).사이즈는 시퀸스 타입과 합치해야 한다. 예를 들면, 점군의 시퀸스(요소 타입은 CV_SEQ_ELTYPE_POINT)를 작성하는 경우, 파라미터 elem_size 는 sizeof(CvPoint)와 동일하지 않으면 안 된다. </param>
            <param name="storage">시퀸스의 위치. </param>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">CvSeqWriter*</param>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter.Dispose">
            <summary>
            시퀸스 쓰기 처리를 종료한다 (cvEndWriteSeq).
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter.EndWriteSeq">
            <summary>
            시퀀스 쓰기를 종료한다
            </summary>
            <returns>써진 시퀀스의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter.Flush">
            <summary>
            writer 상태로부터 시퀸스 헤더를 갱신한다 (cvFlushSeqWriter).
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter.WRITE_SEQ_ELEM_VAR(System.IntPtr)">
            <summary>
            (CV_WRITE_SEQ_ELEM_VAR)
            </summary>
            <param name="elem_ptr"></param>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter.WriteSeqElem``1(``0)">
            <summary>
            (CV_WRITE_SEQ_ELEM)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="elem"></param>
        </member>
        <member name="P:OpenCvSharp.CvSeqWriter.HeaderSize">
            <summary>
            시퀸스 헤더의 사이즈
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqWriter.Seq">
            <summary>
            Sequence, beign read
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqWriter.Block">
            <summary>
            current block
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqWriter.Ptr">
            <summary>
            pointer to element be read next
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqWriter.BlockMin">
            <summary>
            pointer to the beginning of block
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqWriter.BlockMax">
            <summary>
            pointer to the End of block
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvMoments">
            <summary>
            Moment state structure 
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMoments.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMoments.#ctor(OpenCvSharp.CvArr,System.Boolean)">
            <summary>
            cvMoments에 의해 초기화
            </summary>
            <param name="arr">화상(1 채널, 혹은 COI를 가지는 3 채널 화상) 혹은 다각형 (CvSeq로 나타내지는 점군, 또는 점의 벡터).</param>
            <param name="binary">(화상의 경우만) 이 플래그가 true의 경우, 값 0의 피크셀은 0으로서 그 외의 피크셀치는 1으로서 다루어진다. </param>
        </member>
        <member name="M:OpenCvSharp.CvMoments.GetCentralMoment(System.Int32,System.Int32)">
            <summary>
            화상 모멘트 구조체로부터 중심 모멘트를 계산한다
            </summary>
            <param name="x_order">꺼내는 모멘트의 x방향의 차수, x_order >= 0. </param>
            <param name="y_order">꺼내는 모멘트의 y방향의 차수, y_order >= 0 한편 x_order + y_order &lt;= 3. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMoments.GetHuMoments(OpenCvSharp.CvHuMoments@)">
            <summary>
            7개의 Hu모멘트 불변량을 계산한다
            </summary>
            <param name="humoments">Hu모멘트 구조체에의 참조</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMoments.GetNormalizedCentralMoment(System.Int32,System.Int32)">
            <summary>
            화상 모멘트 구조체로부터 정규화된 중심 모멘트를 계산한다
            </summary>
            <param name="x_order">꺼내는 모멘트의 x방향의 차수, x_order >= 0. </param>
            <param name="y_order">꺼내는 모멘트의 y방향의 차수, y_order >= 0 한편 x_order + y_order &lt;= 3. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMoments.GetSpatialMoment(System.Int32,System.Int32)">
            <summary>
            화상 모멘트 구조체로부터 공간 모멘트를 계산한다
            </summary>
            <param name="x_order">꺼내는 모멘트의 x방향의 차수, x_order >= 0. </param>
            <param name="y_order">꺼내는 모멘트의 y방향의 차수, y_order >= 0 한편 x_order + y_order &lt;= 3. </param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CvGraphVtx">
            <summary>
            그래프의 정점
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvGraphVtx.SizeOf">
            <summary>
            sizeof(CvGraphVtx) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvGraphVtx._data">
            <summary>
            C++/CLI wrapper of native data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvGraphVtx.#ctor">
            <summary>
            메모리를 확보해 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvGraphVtx.#ctor(System.IntPtr)">
            <summary>
            네이티브의 데이터 포인터로부터 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="P:OpenCvSharp.CvGraphVtx.Flags">
            <summary>
            정점 플래그
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvGraphVtx.First">
            <summary>
            최초의 엣지
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvChainPtReader">
            <summary>
            Chain Reader
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSeqReader`1">
            <summary>
            CvSeq로부터 데이터를 읽어내기 위한 클래스
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqReader`1.#ctor">
            <summary>
            초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqReader`1.ReadSeqElem">
            <summary>
            시퀸스의 요소를 하나 읽어내고 읽기 포인터를 다음으로 1칸 이동시킨다 (CV_READ_SEQ_ELEM 해)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqReader`1.RevReadSeqElem">
            <summary>
            시퀸스의 전의 요소를 하나 읽어내고 읽기 포인터를 전에 1칸 이동시킨다 (CV_REV_READ_SEQ_ELEM 해당)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqReader`1.Seq">
            <summary>
            Sequence, beign read
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvChainPtReader.SizeOf">
            <summary>
            sizeof(CvChainPtReader)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvChainPtReader._data">
            <summary>
            C++/CLI access to object`s pointer
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvChainPtReader._chain">
            <summary>
            Target chain
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvChainPtReader.#ctor">
            <summary>
            디폴트 constructor　 　
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvChainPtReader.#ctor(OpenCvSharp.CvChain)">
            <summary>
            cvStartReadChainPoints의 초기화
            </summary>
            <param name="chain">체인의 포인터</param>
        </member>
        <member name="M:OpenCvSharp.CvChainPtReader.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvChainPtReader.StartReadChainPoints(OpenCvSharp.CvChain)">
            <summary>
            체인 리더를 초기화한다
            </summary>
            <param name="chain">체인의 포인터</param>
        </member>
        <member name="M:OpenCvSharp.CvChainPtReader.ReadChainPoint">
            <summary>
            체인상의 다음의 점을 얻는다
            </summary>
            <returns>현재의 체인상의 점</returns>
        </member>
        <member name="M:OpenCvSharp.CvChainPtReader.GetEnumerator">
            <summary>
            GetEnumerator
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvChainPtReader.CvPtr">
            <summary>
            Data pointer (CvChainPtReader*)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvChainPtReader.Code">
            <summary>
             코드
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvChainPtReader.Pt">
            <summary>
            포인트
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvChainPtReader.Deltas">
            <summary>
            schar deltas[8][2]
            </summary>
        </member>
        <member name="T:OpenCvSharp.PointerAccessor1D`1">
            <summary>
            구조체의 포인터에 대해서 배열과 같이 액세스하기 위한 클래스
            </summary>
        </member>
        <member name="F:OpenCvSharp.PointerAccessor1D`1._ptr">
            <summary>
            pointer
            </summary>
        </member>
        <member name="F:OpenCvSharp.PointerAccessor1D`1._size">
            <summary>
            sizeof(T)
            </summary>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D`1.#ctor(System.IntPtr)">
            <summary>
            IntPtr초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D`1.Get(System.Int32)">
            <summary>
            지정한 인덱스의 배열의 요소를 취득한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D`1.Set(System.Int32,`0)">
            <summary>
            지정한 인덱스의 배열의 요소를 설정한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D`1.Ptr">
            <summary>
            내부에서 보관 유지하고 있는 포인터 (T*)
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D`1.Item(System.Int32)">
            <summary>
            배열의 요소에 액세스 하는 인덱스
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="T:OpenCvSharp.OpenCvSharpException">
            <summary>
            OpenCvSharp의 예외 클래스
            </summary>
        </member>
        <member name="M:OpenCvSharp.OpenCvSharpException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.OpenCvSharpException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:OpenCvSharp.OpenCvSharpException.#ctor(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:OpenCvSharp.OpenCvSharpException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:OpenCvSharp.CvDll">
            <summary>
            DllImport에 의한 OpenCV의 함수를 정리한 클래스
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvDll.#cctor">
            <summary>
            이 클래스를 최초로 참조했을 때에 1번만 Unmanaged 권한 체크를 실시한다
            </summary>
        </member>
        <member name="T:OpenCvSharp.LoadMode">
            <summary>
            cvLoadImage로 이용하는 읽기 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.LoadMode.Unchanged">
            <summary>
            8 비트, 칼라 또는 그레이 스케일 [CV_LOAD_IMAGE_UNCHANGED]
            </summary>
        </member>
        <member name="F:OpenCvSharp.LoadMode.GrayScale">
            <summary>
            8 비트, 그레이 스케일 [CV_LOAD_IMAGE_GRAYSCALE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.LoadMode.Color">
            <summary>
            AnyDepth 와 병용 되지 않는 한 8 비트, 칼라 [CV_LOAD_IMAGE_COLOR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.LoadMode.AnyDepth">
             <summary>
            임의의 DEPTH 그레이 [CV_LOAD_IMAGE_ANYDEPTH]
             </summary>
        </member>
        <member name="F:OpenCvSharp.LoadMode.AnyColor">
            <summary>
            8 비트, 칼라 또는 그레이 스케일 [CV_LOAD_IMAGE_ANYCOLOR]. 
            AnyDepth 와 병용 가능.
            </summary>
        </member>
        <member name="T:OpenCvSharp.HistogramFormat">
            <summary>
            히스토그램 표현 포맷
            </summary>
        </member>
        <member name="F:OpenCvSharp.HistogramFormat.Array">
            <summary>
            히스토그램 데이터가 다차원으로 조밀한 배열 CvMatND로 표현되고 있는 [CV_HIST_ARRAY]
            </summary>
        </member>
        <member name="F:OpenCvSharp.HistogramFormat.Sparse">
            <summary>
            히스토그램 데이터가 다차원으로 희소 배열 CvSparseMat 로 표현되고 있는 [CV_HIST_SPARSE]
            </summary>
        </member>
        <member name="T:OpenCvSharp.GemmOperation">
            <summary>
            cvGEMM 메소드의 조작 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.GemmOperation.Zero">
            <summary>
            = 0
            </summary>
        </member>
        <member name="F:OpenCvSharp.GemmOperation.A_T">
            <summary>
            src1를 전치 
            [CV_GEMM_A_T]
            </summary>
        </member>
        <member name="F:OpenCvSharp.GemmOperation.B_T">
            <summary>
            src2를 전치 
            [CV_GEMM_B_T]
            </summary>
        </member>
        <member name="F:OpenCvSharp.GemmOperation.C_T">
            <summary>
            src3를 전치 
            [CV_GEMM_C_T]
            </summary>
        </member>
        <member name="T:OpenCvSharp.FundamentalMatMethod">
            <summary>
            기초 행렬의 계산 방법
            </summary>
        </member>
        <member name="F:OpenCvSharp.FundamentalMatMethod.Point7">
            <summary>
            7-point 알고리즘. N == 7 
            [CV_FM_7POINT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FundamentalMatMethod.Point8">
            <summary>
            8-point 알고리즘. N > 8 
            [CV_FM_8POINT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FundamentalMatMethod.LMedSOnly">
            <summary>
            LMedS 알고리즘. N >= 8 
            [CV_FM_LMEDS_ONLY]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FundamentalMatMethod.RansacOnly">
            <summary>
            RANSAC 알고리즘. N > 8 
            [CV_FM_RANSAC_ONLY]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FundamentalMatMethod.LMedS">
            <summary>
            LMedS 알고리즘. N >= 8 
            [CV_FM_LMEDS]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FundamentalMatMethod.Ransac">
            <summary>
            RANSAC 알고리즘. N > 8 
            [CV_FM_RANSAC]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CheckArrFlag">
            <summary>
            cvCheckArr의 처리 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.CheckArrFlag.NanOrInfinity">
            <summary>
            모든 요소가 NaN 인가 ±(Infinity) 나오지 않는가만을 체크한다
            [= 0]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CheckArrFlag.Range">
            <summary>
            배열의 모든 요소에 대해 [minVal,maxVal)의 범위내인지를 체크한다
            [CV_CHECK_RANGE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CheckArrFlag.Quiet">
            <summary>
            요소에 무효인 값이나 범위외의 것이 있어도 에러를 발생시키지 않는다
            [CV_CHECK_QUIET]
            </summary>
        </member>
        <member name="T:OpenCvSharp.BitDepth">
            <summary>
            화상 요소의 Bit Depth.
            </summary>
        </member>
        <member name="F:OpenCvSharp.BitDepth.U1">
            <summary>
            부호 없는 1 비트 정수 [IPL_DEPTH_1U]
            </summary>
        </member>
        <member name="F:OpenCvSharp.BitDepth.U8">
            <summary>
            부호 없는 8 비트 정수 [IPL_DEPTH_8U]
            </summary>
        </member>
        <member name="F:OpenCvSharp.BitDepth.S8">
            <summary>
            부호 있는 8 비트 정수 [IPL_DEPTH_8S]
            </summary>
        </member>
        <member name="F:OpenCvSharp.BitDepth.U16">
            <summary>
            부호 없는 16 비트 정수 [IPL_DEPTH_16U]
            </summary>
        </member>
        <member name="F:OpenCvSharp.BitDepth.S16">
            <summary>
            부호 있는 16 비트 정수 [IPL_DEPTH_16S]
            </summary>
        </member>
        <member name="F:OpenCvSharp.BitDepth.S32">
            <summary>
            부호 있는 32 비트 정수 [IPL_DEPTH_32S]
            </summary>
        </member>
        <member name="F:OpenCvSharp.BitDepth.F32">
            <summary>
            단정도 부동 소수점수(실수) [IPL_DEPTH_32F]
            </summary>
        </member>
        <member name="F:OpenCvSharp.BitDepth.F64">
            <summary>
            배정도 부동 소수점수(실수) [IPL_DEPTH_64F]
            </summary>
        </member>
        <member name="T:OpenCvSharp.DynamicInvoker`1">
            <summary>
            동적으로 언매니지의 어셈블리에 있는 함수를 호출하기 위한 클래스
            </summary>
            <typeparam name="T">실행시키고 싶은 함수의 정의에 맞춘 Delegate</typeparam>
        </member>
        <member name="M:OpenCvSharp.DynamicInvoker`1.#ctor(System.String,System.String)">
            <summary>
            초기화
            </summary>
            <param name="dllName">라이브러리의 이름</param>
            <param name="functionName">함수의 이름</param>
        </member>
        <member name="M:OpenCvSharp.DynamicInvoker`1.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="P:OpenCvSharp.DynamicInvoker`1.IsDisposed">
            <summary>
            해제가 끝난 상태인지 어떤지
            </summary>
        </member>
        <member name="P:OpenCvSharp.DynamicInvoker`1.DllName">
            <summary>
            읽어들이는 라이브러리의 이름
            </summary>
        </member>
        <member name="P:OpenCvSharp.DynamicInvoker`1.FunctionName">
            <summary>
            호출하는 함수의 이름
            </summary>
        </member>
        <member name="P:OpenCvSharp.DynamicInvoker`1.PtrLib">
            <summary>
            LoadLibrary로 얻을 수 있던 포인터
            </summary>
        </member>
        <member name="P:OpenCvSharp.DynamicInvoker`1.PtrProc">
            <summary>
            GetProcAddress로 얻을 수 있던 포인터
            </summary>
        </member>
        <member name="P:OpenCvSharp.DynamicInvoker`1.Call">
            <summary>
            호출하는 함수 포인터를 Delegate로 변환한 것을 취득한다
            </summary>
        </member>
        <member name="T:OpenCvSharp.GraphScannerMask">
            <summary>
            Event mask indicating which events are interesting to the user
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphScannerMask.Vertex">
            <summary>
            Stop at the graph vertices visited for the first time
            [CV_GRAPH_VERTEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphScannerMask.TreeEdge">
            <summary>
            Stop at tree edges (tree edge is the edge connecting the last visited vertex and the vertex to be visited next)
            [CV_GRAPH_TREE_EDGE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphScannerMask.BackEdge">
            <summary>
            Stop at back edges (back edge is an edge connecting the last visited vertex with some of its ancestors in the search tree)
            [CV_GRAPH_BACK_EDGE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphScannerMask.ForwardEdge">
            <summary>
            Stop at forward edges (forward edge is an edge conecting the last visited vertex with some of its descendants in the search tree). The forward edges are only possible during oriented graph traversal)
            [CV_GRAPH_FORWARD_EDGE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphScannerMask.CrossEdge">
            <summary>
            Stop at cross edges (cross edge is an edge connecting different search trees or branches of the same tree. The cross edges are only possible during oriented graphs traversal)
            [CV_GRAPH_CROSS_EDGE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphScannerMask.AnyEdge">
            <summary>
            Stop and any edge (tree, back, forward and cross edges) 
            [CV_GRAPH_ANY_EDGE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphScannerMask.NewTree">
            <summary>
            Stop in the beginning of every new search tree. When the traversal procedure visits all vertices and edges reachible from the initial vertex (the visited vertices together with tree edges make up a tree), it searches for some unvisited vertex in the graph and resumes the traversal process from that vertex. Before starting a new tree (including the very first tree when cvNextGraphItem is called for the first time) it generates CV_GRAPH_NEW_TREE event.
            For unoriented graphs each search tree corresponds to a connected component of the graph.
            [CV_GRAPH_NEW_TREE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphScannerMask.BackTracking">
            <summary>
            Stop at every already visited vertex during backtracking - returning to already visited vertexes of the traversal tree.
            [CV_GRAPH_BACKTRACKING]
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphScannerMask.Over">
            <summary>
            All events are interesting
            [CV_GRAPH_OVER]
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphScannerMask.AllItems">
            <summary>
            All events are interesting
            [CV_GRAPH_ALL_ITEMS]
            </summary>
        </member>
        <member name="T:OpenCvSharp.GraphEdgeVtxFlag">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphEdgeVtxFlag.GraphItemVisited">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphEdgeVtxFlag.GraphSearchTreeNode">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.GraphEdgeVtxFlag.GraphForwardEdgeFlag">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvTrackbarCallback">
            <summary>
            CvTrackbar가 조작되었을 때의 이벤트 처리를 실시하는 Delegate
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvHaarFeature">
            <summary>
            haar 특징. 적절한 중량감을 가지는 2 개, 혹은 3 개의 사각형으로 구성된다.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvHaarFeature.SizeOf">
            <summary>
            sizeof(CvHaarClassifier) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvHaarFeature._data">
            <summary>
            C++/CLI wrapper of data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHaarFeature.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvHaarFeature*</param>
        </member>
        <member name="P:OpenCvSharp.CvHaarFeature.Tilted">
            <summary>
            0은 수직인 특징, 1 은 45도 회전한 특징을 의미한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarFeature.rect">
            <summary>
            haar 특징을 구성하는 사각형
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvHaarFeature.Rect">
            <summary>
            haar 특징을 구성하는 사각형
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvReadFunc">
            <summary>
            
            </summary>
            <param name="storage"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CvPoint3D64f">
            <summary>
            부동 소수점형(배정도) 좌표계에 의한 3 차원의 점
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint3D64f.SizeOf">
            <summary>
            sizeof(CvPoint3D64f)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint3D64f.X">
            <summary>
            x좌표
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint3D64f.Y">
            <summary>
            y좌표
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint3D64f.Z">
            <summary>
            z좌표
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D64f.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            초기화 
            </summary>
            <param name="x">x좌표</param>
            <param name="y">y좌표</param>
            <param name="z">z좌표</param>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D64f.op_Implicit(OpenCvSharp.CvPoint3D64f)~OpenCvSharp.CvPoint3D32f">
            <summary>
            CvPoint3D32f의 묵시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D64f.op_Explicit(OpenCvSharp.CvPoint3D32f)~OpenCvSharp.CvPoint3D64f">
            <summary>
            CvPoint3D32f의 명시적 캐스트
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D64f.Equals(OpenCvSharp.CvPoint3D64f)">
            <summary>
            지정한 CvPoint3D64f의 좌표와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D64f.op_Equality(OpenCvSharp.CvPoint3D64f,OpenCvSharp.CvPoint3D64f)">
            <summary>
            == 연산자의 overload.x,y좌표치가 동일하면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D64f.op_Inequality(OpenCvSharp.CvPoint3D64f,OpenCvSharp.CvPoint3D64f)">
            <summary>
            != 연산자의 overload.x,y좌표치가 동일하지 않으면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D64f.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D64f.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D64f.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.InsertPosition">
            <summary>
            cvSeqPushMulti / cvSeqPopMulti로 요소를 추가하는 위치
            </summary>
        </member>
        <member name="F:OpenCvSharp.InsertPosition.Back">
            <summary>
            요소를 시퀸스의 말미에 추가/삭제한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.InsertPosition.Front">
            <summary>
            요소를 시퀸스의 선두에 추가/삭제한다
            </summary>
        </member>
        <member name="T:OpenCvSharp.CriteriaType">
            <summary>
            종료 조건의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.CriteriaType.Iteration">
            <summary>
            반복 회수에 의한 조건
            [CV_TERMCRIT_ITER]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CriteriaType.Number">
            <summary>
            반복 회수에 의한 조건
            [CV_TERMCRIT_NUMBER]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CriteriaType.Epsilon">
            <summary>
            목표 정도(ε)에 의한 조건
            [CV_TERMCRIT_EPS]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CovarMatrixFlag">
            <summary>
            cvCovarMatrix의 처리 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.CovarMatrixFlag.Scrambled">
            <summary>
            scale * [vects[0]-avg,vects[1]-avg,...]^T * [vects[0]-avg,vects[1]-avg,...]   
            즉, 공변동 행렬은 count×count이다. 그러한 일반적이지 않은 공변동 행렬은,
            매우 큰 벡터 집합에 대한 고속의 주성분 분석을 위해서 사용된다(예를 들면, 얼굴 인식을 위한 고유얼굴).
            이 「스크럼블 되었다」행렬의 고유치는, 진공변동 행렬의 고유치와 일치해, 
            그리고 「진정한」고유 벡터는 「스크럼블 되었다」공변동 행렬의 고유 벡터로부터 용이하게 계산할 수 있다.
            [CV_COVAR_SCRAMBLED]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CovarMatrixFlag.Normal">
            <summary>
            scale * [vects[0]-avg,vects[1]-avg,...]*[vects[0]-avg,vects[1]-avg,...]^T   
            즉, cov_mat는 모든 입력 벡터의 요소의 합계와 같은 사이즈의 일반적인 공변동 행렬이 된다. 
            CV_COVAR_SCRAMBLED와 CV_COVAR_NORMAL의 어느 쪽인지 하나는 반드시 지정되지 않으면 안 된다.
            [CV_COVAR_NORMAL]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CovarMatrixFlag.UseAvg">
            <summary>
            이 플래그가 지정되었을 경우, 함수는 입력 벡터로부터 평균을 계산하지 않고, 인수로 지정된 평균 벡터를 사용한다. 
            평균이 어떠한 방법으로 이미 계산되고 있는 경우, 또는 공변동 행렬이 부분적으로 계산되고 있는 경우 (이 경우, avg는 입력 벡터의 일부의 평균이 아니고, 모든 평균 벡터이다)에 유용하다. 
            [CV_COVAR_USE_AVG]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CovarMatrixFlag.Scale">
            <summary>
            이 플래그가 지정되었을 경우, 공변동 행렬은 입력 벡터의 수에 의해서 슬캘링 된다.
            [CV_COVAR_SCALE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CovarMatrixFlag.Rows">
            <summary>
            모든 입력 벡터는 단일의 행렬(vects[0])의 행으로서 보존되는 것을 의미한다.
            그리고 avg는 적절한 크기의 1행의 벡터가 아니면 안된다. 
            [CV_COVAR_ROWS]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CovarMatrixFlag.Cols">
            <summary>
            모든 입력 벡터는 단일의 행렬(vects[0])의 열로서 보존되는 것을 의미한다.그리고 avg는 적절한 크기의 1열의 벡터가 아니면 안된다. 
            [CV_COVAR_COLS]
            </summary>
        </member>
        <member name="T:OpenCvSharp.ApproxPolyMethod">
            <summary>
            polyline의 근사 방법
            </summary>
        </member>
        <member name="F:OpenCvSharp.ApproxPolyMethod.DP">
            <summary>
            Douglas-Peucker 알고리즘
            [CV_POLY_APPROX_DP]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvKalman">
            <summary>
            칼만 필터 상태
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvKalman.SizeOf">
            <summary>
            sizeof(CvKalman)를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvKalman._data">
            <summary>
            C++/CLI wrapper of native structure's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvKalman.#ctor(System.Int32,System.Int32)">
            <summary>
            칼만 필터 구조체의 파티션을 실시한다.
            </summary>
            <param name="dynam_params">상태 벡터의 차원수</param>
            <param name="measure_params">관측 벡터의 차원</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvKalman.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            칼만 필터 구조체의 파티션을 실시한다.
            </summary>
            <param name="dynam_params">상태 벡터의 차원수</param>
            <param name="measure_params">관측 벡터의 차원</param>
            <param name="control_params">컨트롤 벡터의 차원</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvKalman.#ctor(System.IntPtr)">
            <summary>
            포인터로 초기화
            </summary>
            <param name="ptr">struct CvMemStorage*</param>
        </member>
        <member name="M:OpenCvSharp.CvKalman.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            포인터와 자동 해제의 가부를 지정해 초기화
            </summary>
            <param name="ptr">struct CvMemStorage*</param>
            <param name="isEnabledDispose">자동적으로 GC로 해제해도 좋은지 어떤지</param>
        </member>
        <member name="M:OpenCvSharp.CvKalman.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvKalman.Correct(OpenCvSharp.CvMat)">
            <summary>
            모델 상태를 수정한다 (cvKalmanCorrect 상당). 수정된 상태를 kalman->state_post 에 보존해, 이것을 출력으로서 돌려준다.
            </summary>
            <param name="measurement">관측 벡터를 포함한 CvMat</param>
            <returns>수정된 상태를 kalman->state_post에 보존해, 이것을 출력으로서 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvKalman.UpdateByMeasurement(OpenCvSharp.CvMat)">
            <summary>
            모델 상태를 수정한다. 수정된 상태를 kalman->state_post 에 보존해 이것을 출력으로서 돌려준다.KalmanCorrect의 앨리어스(alias).
            </summary>
            <param name="measurement">관측 벡터를 포함한 CvMat</param>
            <returns>수정된 상태를 kalman->state_post 에 보존해, 이것을 출력으로서 돌려준다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvKalman.Predict">
            <summary>
            다음의 모델 상태를 추정한다 (cvKalmanPredict 해당)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvKalman.Predict(OpenCvSharp.CvMat)">
            <summary>
            다음의 모델 상태를 추정한다 (cvKalmanPredict 해당)
            </summary>
            <param name="control">컨트롤 벡터 (uk).외부 컨트롤이 존재하지 않는 경우(control_params=0)에 한정해, null 이다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvKalman.UpdateByTime">
            <summary>
            다음의 모델 상태를 추정한다. KalmanPredict의 앨리어스(alias).
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvKalman.UpdateByTime(OpenCvSharp.CvMat)">
            <summary>
            다음의 모델 상태를 추정한다. KalmanPredict의 앨리어스(alias).
            </summary>
            <param name="control">컨트롤 벡터 (uk).외부 컨트롤이 존재하지 않는 경우(control_params=0)에 한정해, null 이다.</param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvKalman.MP">
            <summary>
            관측 벡터의 차원수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.DP">
            <summary>
            상태 벡터의 차원수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.CP">
            <summary>
            컨트롤 벡터의 차원수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.StatePre">
            <summary>
            예측 상태 (x'(k)): x(k) =A*x(k-1) +B*u(k)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.StatePost">
            <summary>
            수정 후 상태 (x(k)): x(k) =x'(k) +K(k)*(z(k) -H*x'(k)) 
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.TransitionMatrix">
            <summary>
            상태 천이 행렬 (A)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.ControlMatrix">
            <summary>
            컨트롤 행렬 (B) (컨트롤 되지 않는 경우는, 이용되지 않는다)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.MeasurementMatrix">
            <summary>
            관측 행렬 (H)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.ProcessNoiseCov">
            <summary>
            프로세스 노이즈모드 분산 행렬 (Q)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.MeasurementNoiseCov">
            <summary>
            관측 노이즈모드 분산 행렬 (R)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.ErrorCovPre">
            <summary>
            사전 오차 추정모두 분산 행렬 (P'(k)): P'(k) =A*P(k-1) *At + Q)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.Gain">
            <summary>
            칼만게인 행렬 (K(k)): K(k) =P'(k) *Ht*inv(H*P'(k) *Ht+R)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.ErrorCovPost">
            <summary>
            사후 오차 추정모두 분산 행렬 (P(k)): P(k)=(I-K(k) *H) *P'(k)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.Temp1">
            <summary>
            템포라리 행렬 1
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.Temp2">
            <summary>
            템포라리 행렬 2
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.Temp3">
            <summary>
            템포라리 행렬 3
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.Temp4">
            <summary>
            템포라리 행렬 4
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.Temp5">
            <summary>
            템라리 행렬 5
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.PosterState">
            <summary>
            state_pre->data.fl
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.PriorState">
            <summary>
            state_post->data.fl
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.DynamMatr">
            <summary>
            transition_matrix->data.fl
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.MeasurementMatr">
            <summary>
            measurement_matrix->data.fl
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.MNCovariance">
            <summary>
            measurement_noise_cov->data.fl
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.PNCovariance">
            <summary>
            process_noise_cov->data.fl
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.KalmGainMatr">
            <summary>
            gain->data.fl
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.PriorErrorCovariance">
            <summary>
            error_cov_pre->data.fl
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.PosterErrorCovariance">
            <summary>
            error_cov_post->data.fl
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.Temp1Data">
            <summary>
            temp1->data.fl
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvKalman.Temp2Data">
            <summary>
            temp2->data.fl
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvCircleSegment">
            <summary>
            cvHoughCircles로 얻을 수 있는, 원의 데이터(중심과 반경)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvCircleSegment.Center">
            <summary>
            원의 중심
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvCircleSegment.Radius">
            <summary>
            반경
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvCircleSegment.#ctor(OpenCvSharp.CvPoint2D32f,System.Single)">
            <summary>
            초기화
            </summary>
            <param name="center">원의 중심</param>
            <param name="radius">반경</param>
        </member>
        <member name="M:OpenCvSharp.CvCircleSegment.Equals(OpenCvSharp.CvCircleSegment)">
            <summary>
            지정한 CvLineSegmentPoint와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvCircleSegment.op_Equality(OpenCvSharp.CvCircleSegment,OpenCvSharp.CvCircleSegment)">
            <summary>
            == 연산자의 overload
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvCircleSegment.op_Inequality(OpenCvSharp.CvCircleSegment,OpenCvSharp.CvCircleSegment)">
            <summary>
            != 연산자의 overload 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvCircleSegment.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvCircleSegment.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvCircleSegment.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.CvAvgComp">
            <summary>
            cvHaarDetectObjects로 얻을 수 있는 사각형 데이터
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvAvgComp.Rect">
            <summary>
            오브젝트를 내포 하는 사각형(그룹의 평균 사각형)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvAvgComp.Neighbors">
            <summary>
            그룹내에 존재하는 인접 사각형의 수
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvAvgComp.#ctor(OpenCvSharp.CvRect,System.Int32)">
            <summary>
            초기화
            </summary>
            <param name="rect">오브젝트를 내포 하는 사각형(그룹의 평균 사각형)</param>
            <param name="neighbors">그룹내에 존재하는 인접 사각형의 수</param>
        </member>
        <member name="M:OpenCvSharp.CvAvgComp.Equals(OpenCvSharp.CvAvgComp)">
            <summary>
            지정한 CvLineSegmentPoint와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvAvgComp.op_Equality(OpenCvSharp.CvAvgComp,OpenCvSharp.CvAvgComp)">
            <summary>
            == 연산자의 overload
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvAvgComp.op_Inequality(OpenCvSharp.CvAvgComp,OpenCvSharp.CvAvgComp)">
            <summary>
            != 연산자의 overload 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvAvgComp.op_Implicit(OpenCvSharp.CvAvgComp)~OpenCvSharp.CvRect">
            <summary>
            implicit cast to CvRect (for backward compatibility)
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvAvgComp.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvAvgComp.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvAvgComp.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.StereoRectificationFlag">
            <summary>
            윤곽의 근사 방법
            </summary>
        </member>
        <member name="F:OpenCvSharp.StereoRectificationFlag.Zero">
            <summary>
            플래그 없음 (=0).
            이용할 수 있는 화상 영역이 최대가 되도록(epipolar 선의 기울기에 따라서) 다른 한쪽의 화상을 수평·수직 방향으로 이동한다.
            </summary>
        </member>
        <member name="F:OpenCvSharp.StereoRectificationFlag.ZeroDisparity">
            <summary>
             평행화 후의 뷰에 대해 각 카메라의 principal points(광학 중심)가 같은 좌표가 되도록 한다. 
            [CV_CALIB_ZERO_DISPARITY]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvWin32WindowCallback">
            <summary>
            WndProc
            </summary>
            <param name="hwnd">메세지의 윈도우 핸들</param>
            <param name="msg">메세지의 ID 번호</param>
            <param name="wParam">메세지의 WParam 필드</param>
            <param name="lParam">메세지의 LParam 필드</param>
            <param name="result">메세지의 처리에 응답하고 Windows 에 돌려주어지는 값</param>
        </member>
        <member name="T:OpenCvSharp.CvHaarStageClassifier">
            <summary>
            부스트 된 만큼 분류기의 battery(= 단계 분류기(stage classifiers))： 
            분류기의 응답의 합계가 threshold보다 큰 경우에는
            단계 분류기는 1를 돌려주고 그렇지 않은 경우에는 0 을 돌려준다.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvHaarStageClassifier.SizeOf">
            <summary>
            sizeof(CvHaarStageClassifier) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvHaarStageClassifier._data">
            <summary>
            C++/CLI wrapper of data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHaarStageClassifier.#ctor(System.IntPtr)">
            <summary>
            포인터의 초기화
            </summary>
            <param name="ptr">struct CvHaarStageClassifier*</param>
        </member>
        <member name="P:OpenCvSharp.CvHaarStageClassifier.Count">
            <summary>
            battery에 포함되는 분류기의 개수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarStageClassifier.Threshold">
            <summary>
            부스트 된 만큼 류기로 이용하는 임계값
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarStageClassifier.Classifier">
            <summary>
            분류기의 배열
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarStageClassifier.Next">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarStageClassifier.Child">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarStageClassifier.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvAttrList">
            <summary>
            속성의 리스트
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvAttrList._attr">
            <summary>
            const char** attr;
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvAttrList._next">
            <summary>
            struct CvAttrList* next;
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvAttrList.SizeOf">
            <summary>
            sizeof(CvAttrList)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvAttrList.#ctor(System.String[])">
            <summary>
            구조체 CvAttrList의 초기화
            </summary>
            <param name="attr">(attribute_name,attribute_value)의 페어로부터 되는 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvAttrList.#ctor(System.String[],OpenCvSharp.Pointer{OpenCvSharp.CvAttrList})">
            <summary>
            구조체 CvAttrList의 초기화
            </summary>
            <param name="attr">(attribute_name,attribute_value)의 페어로부터 되는 배열</param>
            <param name="next">속성 리스트의 다음의 덩어리에의 포인터</param>
        </member>
        <member name="M:OpenCvSharp.CvAttrList.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvAttrList.Attr">
            <summary>
            (attribute_name,attribute_value)의 페어로부터 되는 NULL로 끝나는 배열
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvAttrList.Next">
            <summary>
            속성 리스트의 다음의 chunk에의 포인터
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvTypeInfo">
            <summary>
            型情報
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvTypeInfo.SizeOf">
            <summary>
            sizeof(CvTypeInfo) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvTypeInfo._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvTypeInfo.#ctor">
            <summary>
            メモリを確保して初期化
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvTypeInfo.#ctor(System.IntPtr)">
            <summary>
            ネイティブのデータポインタから初期化
            </summary>
            <param name="ptr">struct CvTypeInfo*</param>
        </member>
        <member name="M:OpenCvSharp.CvTypeInfo.RegisterType">
            <summary>
            새로운 형태를 등록한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTypeInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTypeInfo.HeaderSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTypeInfo.Prev">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTypeInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTypeInfo.TypeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTypeInfo.IsInstance">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTypeInfo.Release">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTypeInfo.Read">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTypeInfo.Write">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTypeInfo.Clone">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.StructurePointer">
            <summary>
            구조체와 포인터의 변환이나 메모리의 해제을 자동적으로 해 주는 클래스
            </summary>
        </member>
        <member name="M:OpenCvSharp.StructurePointer.#ctor(System.Object)">
            <summary>
            구조체로부터 포인터를 만들어 초기화
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:OpenCvSharp.StructurePointer.#ctor">
            <summary>
            디폴트의 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.StructurePointer.op_Implicit(OpenCvSharp.StructurePointer)~System.IntPtr">
            <summary>
            IntPtr의 묵시적 변환
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.StructurePointer.ToStructure">
            <summary>
            포인터로부터 구조체로 변환해 돌려준다
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.StructurePointer.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="P:OpenCvSharp.StructurePointer.Ptr">
            <summary>
            실체 포인터
            </summary>
        </member>
        <member name="P:OpenCvSharp.StructurePointer.SrcObj">
            <summary>
            초기화시에 건네받은 구조체 오브젝트
            </summary>
        </member>
        <member name="P:OpenCvSharp.StructurePointer.Size">
            <summary>
            확보한 메모리의 바이트 사이즈
            </summary>
        </member>
        <member name="T:OpenCvSharp.StructurePointer`1">
            <summary>
            구조체와 포인터의 변환이나 메모리의 해제을 자동적으로 해 주는 클래스 (제네릭판)
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:OpenCvSharp.StructurePointer`1.#ctor(`0)">
            <summary>
            지정한 구조체 오브젝트를 포인터로 변환해 초기화
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:OpenCvSharp.StructurePointer`1.#ctor">
            <summary>
            T형의 바이트 사이즈의 포인터를 생성해 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.StructurePointer`1.op_Implicit(OpenCvSharp.StructurePointer{`0})~System.IntPtr">
            <summary>
            IntPtr의 묵시적 변환
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.StructurePointer`1.ToStructure">
            <summary>
            포인터로부터 구조체로 변환해 돌려준다
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CvPoint">
            <summary>
            정수 좌표계에 의한 2 차원의 점
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint.SizeOf">
            <summary>
            sizeof(CvPoint)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint.X">
            <summary>
            x좌표
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint.Y">
            <summary>
            y좌표
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            초기화 
            </summary>
            <param name="x">x좌표</param>
            <param name="y">y좌표</param>
        </member>
        <member name="M:OpenCvSharp.CvPoint.op_Implicit(System.Drawing.Point)~OpenCvSharp.CvPoint">
            <summary>
            System.Drawing.Rectangle의 묵시적 캐스트
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint.op_Implicit(OpenCvSharp.CvPoint)~System.Drawing.Point">
            <summary>
            System.Drawing.Rectangle의 묵시적 캐스트
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint.Equals(OpenCvSharp.CvPoint)">
            <summary>
            지정한 CvPoint의 좌표와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint.op_Equality(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint)">
            <summary>
            == 연산자의 overload.x,y좌표치가 동일하면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint.op_Inequality(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint)">
            <summary>
            != 연산자의 overload.x,y좌표치가 동일하지 않으면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.CvPoint3D32f">
            <summary>
            부동 소수점형(단정도) 좌표계에 의한 3 차원의 점
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint3D32f.SizeOf">
            <summary>
            sizeof(CvPoint3D32f)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint3D32f.X">
            <summary>
            x좌표
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint3D32f.Y">
            <summary>
            y좌표
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint3D32f.Z">
            <summary>
            z좌표
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D32f.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            初期化 
            </summary>
            <param name="x">x좌표</param>
            <param name="y">y좌표</param>
            <param name="z">z좌표</param>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D32f.Equals(OpenCvSharp.CvPoint3D32f)">
            <summary>
            지정한 CvPoint3D32f의 좌표와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D32f.op_Equality(OpenCvSharp.CvPoint3D32f,OpenCvSharp.CvPoint3D32f)">
            <summary>
            == 연산자의 overload.x,y좌표치가 동일하면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D32f.op_Inequality(OpenCvSharp.CvPoint3D32f,OpenCvSharp.CvPoint3D32f)">
            <summary>
            != 연산자의 overload.x,y좌표치가 동일하지 않으면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D32f.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D32f.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint3D32f.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.CvLineSegmentPolar">
            <summary>
            cvHoughLines2로 얻을 수 있는, 극좌표계로 표현되는 선분
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvLineSegmentPolar.Rho">
            <summary>
            선분의 길이
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvLineSegmentPolar.Theta">
            <summary>
            선분의 각도(라디안)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPolar.#ctor(System.Single,System.Single)">
            <summary>
            초기화
            </summary>
            <param name="rho">선분의 길이</param>
            <param name="theta">선분의 각도(라디안)</param>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPolar.Equals(OpenCvSharp.CvLineSegmentPolar)">
            <summary>
            지정한 CvLineSegmentPolar와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPolar.op_Equality(OpenCvSharp.CvLineSegmentPolar,OpenCvSharp.CvLineSegmentPolar)">
            <summary>
            == 연산자의 overload
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPolar.op_Inequality(OpenCvSharp.CvLineSegmentPolar,OpenCvSharp.CvLineSegmentPolar)">
            <summary>
            != 연산자의 overload 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPolar.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPolar.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvLineSegmentPolar.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.DFTFlag">
            <summary>
            cvDFT의 변환 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.DFTFlag.Forward">
            <summary>
            1 차원 또는 2 차원의 순서 변환을 실시한다.결과의 스케일링은 실시하지 않는다. 
            [CV_DXT_FORWARD]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DFTFlag.Inverse">
            <summary>
            1 차원 또는 2 차원의 역변환을 실시한다.결과의 스케일링은 실시하지 않는다. 
            Forward 와 Inverse 는, 물론 동시에는 지정할 수 없다.
            [CV_DXT_INVERSE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DFTFlag.Scale">
            <summary>
            결과를 배열 요소수로 나누어, 스케일링 한다.통상은 Inverse 와 동시에 이용한다.
            쇼트 컷으로서 InvScale 를 이용해도 좋다.
            [CV_DXT_SCALE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DFTFlag.InverseScale">
            <summary>
            Inverse | Scale 의 쇼트 컷. 
            [CV_DXT_INVERSE_SCALE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DFTFlag.Rows">
            <summary>
            입력 배열의 각각의 행에 대해서 독립에, 순서 변환 혹은 역변환을 실시한다. 
            이 플래그는 복수의 벡터의 동시 변환을 허가해,
            오버헤드(하나의 계산의 몇배도 커지기도 한다)를 줄이기 위해나,
            3 차원 이상의 고차원에 대해서 변환을 실시하기 위해서 사용된다.
            [CV_DXT_ROWS]
            </summary>
        </member>
        <member name="T:OpenCvSharp.ContourChain">
            <summary>
            윤곽의 근사 알고리즘
            </summary>
        </member>
        <member name="F:OpenCvSharp.ContourChain.Code">
            <summary>
            가장 외측의 윤곽만 추출 [CV_CHAIN_CODE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ContourChain.ApproxNone">
            <summary>
            가장 외측의 윤곽만 추출 [CV_CHAIN_APPROX_NONE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ContourChain.ApproxSimple">
            <summary>
            가장 외측의 윤곽만 추출 [CV_CHAIN_APPROX_SIMPLE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ContourChain.ApproxTC89L1">
            <summary>
            가장 외측의 윤곽만 추출 [CV_CHAIN_APPROX_TC89_L1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ContourChain.ApproxTC89KCOS">
            <summary>
            가장 외측의 윤곽만 추출 [CV_CHAIN_APPROX_TC89_KCOS]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ContourChain.LinkRuns">
            <summary>
            가장 외측의 윤곽만 추출 [CV_LINK_RUN_]
            </summary>
        </member>
        <member name="T:OpenCvSharp.ChessboardFlag">
            <summary>
            cvFindChessboardCorners의 처리 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.ChessboardFlag.Zero">
            <summary>
            옵션 없음
            [= 0]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ChessboardFlag.AdaptiveThresh">
            <summary>
            화상을 2진할 때에 고정 임계치를 사용하는 것이 아니라, (화상의 평균 휘도치로부터 계산된다) 적응적 임계치를 이용한다 
            [CV_CALIB_CB_ADAPTIVE_THRESH]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ChessboardFlag.NormalizeImage">
            <summary>
            고정 임계치 처리 또는 적응적 임계치 처리를 실시하기 전에 cvNormalizeHist를 이용해 화상을 정규화한다 
            [CV_CALIB_CB_NORMALIZE_IMAGE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ChessboardFlag.FilterQuads">
            <summary>
            윤곽의 탐색 단계에서 추출되는 잘못된 사각형을 무시하기 위해서 추가 기준(윤곽 면적, 주위장, 형태는 정방형등)을 사용한다 
            [CV_CALIB_CB_FILTER_QUADS]
            </summary>
        </member>
        <member name="T:OpenCvSharp.ContourTreesMatchMethod">
            <summary>
            Similarity measure (cvMatchContourTrees)
            </summary>
        </member>
        <member name="F:OpenCvSharp.ContourTreesMatchMethod.I1">
            <summary>
            [CV_CONTOUR_TREES_MATCH_I1]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSparseMatIterator">
            <summary>
            희소 배열 요소의 iterator
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSparseMatIterator.SizeOf">
            <summary>
            sizeof(CvSparseMatIterator)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSparseMatIterator._data">
            <summary>
            C++/CLI access to object`s pointer
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSparseMatIterator._mat">
            <summary>
            Target sparse mat
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSparseMatIterator.#ctor">
            <summary>
            디폴트 constructor　 　
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSparseMatIterator.#ctor(OpenCvSharp.CvSparseMat)">
            <summary>
            대상의 CvSparseMat를 지정해 초기화
            </summary>
            <param name="mat">입력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvSparseMatIterator.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSparseMatIterator.GetNextSparseNode">
            <summary>
            희소 배열에 대해 다음 요소의 포인터를 돌려준다
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSparseMatIterator.Init(OpenCvSharp.CvSparseMat)">
            <summary>
            희소 배열 요소의 iterator를 초기화한다 (cvInitSparseMatIterator)
            </summary>
            <param name="mat">입력 배열</param>
            <returns>희소 배열의 선두 요소</returns>
        </member>
        <member name="M:OpenCvSharp.CvSparseMatIterator.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSparseMatIterator.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvSparseMatIterator.Mat">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSparseMatIterator.Node">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSparseMatIterator.CurIdx">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvMemBlock">
            <summary>
            메모리 스토레이지 블록
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMemBlock.SizeOf">
            <summary>
            sizeof(CvMemBlock) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMemBlock._data">
            <summary>
            C++/CLI wrapper of native pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMemBlock.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvMemBlock*</param>
        </member>
        <member name="P:OpenCvSharp.CvMemBlock.Prev">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMemBlock.Next">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvGraphEdge">
            <summary>
            Edge of graph
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvGraphEdge.SizeOf">
            <summary>
            sizeof(CvGraphEdge) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvGraphEdge._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvGraphEdge.#ctor(System.IntPtr)">
            <summary>
            네이티브의 데이터 포인터로부터 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.CvGraphEdge.IsGraphEdgeVisited">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvGraphEdge.Flags">
            <summary>
            Edge flags
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvGraphEdge.Weight">
            <summary>
            Edge weight
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvGraphEdge.Next">
            <summary>
            엣지 리스트에 있어서 다음의 엣지의 시점(0), 종점(1)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvGraphEdge.Vtx">
            <summary>
            The starting (0) and ending (1) vertices
            </summary>
        </member>
        <member name="T:OpenCvSharp.CapturePosAviRatio">
            <summary>
            비디오 파일내의 상대적인 위치
            </summary>
        </member>
        <member name="F:OpenCvSharp.CapturePosAviRatio.Start">
            <summary>
            파일의 시작점
            </summary>
        </member>
        <member name="F:OpenCvSharp.CapturePosAviRatio.End">
            <summary>
            파일의 종점
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvWindow">
            <summary>
            cvNamedWindow 함수에 의한 HighGUI 윈도우의 랩
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvWindow.#ctor">
            <summary>
            적당한 윈도우명으로 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvWindow.#ctor(OpenCvSharp.CvArr)">
            <summary>
            적당한 윈도우명으로, 처음부터 표시해 두는 화상을 지정해 초기화
            </summary>
            <param name="image">윈도우에 표시하는 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.#ctor(OpenCvSharp.WindowMode,OpenCvSharp.CvArr)">
            <summary>
            적당한 윈도우명으로, 화상의 표시 모드를 지정해 초기화
            </summary>
            <param name="flags">윈도우의 플래그</param>
            <param name="image">윈도우에 표시하는 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.#ctor(System.String)">
            <summary>
            윈도우명을 지정해 초기화
            </summary>
            <param name="name">윈도우의 식별로 이용되는 윈도우명으로, 윈도우의 타이틀 바에 표시된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.#ctor(System.String,OpenCvSharp.WindowMode)">
            <summary>
            윈도우명과 화상의 표시 모드를 지정해 초기화
            </summary>
            <param name="name">윈도우의 식별로 이용되는 윈도우명으로, 윈도우의 타이틀 바에 표시된다.</param>
            <param name="flags">윈도우의 플래그</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.#ctor(System.String,OpenCvSharp.CvArr)">
            <summary>
            윈도우명과 처음부터 표시해 두는 화상을 지정해 초기화
            </summary>
            <param name="name">윈도우의 식별로 이용되는 윈도우명으로, 윈도우의 타이틀 바에 표시된다.</param>
            <param name="image">윈도우에 표시하는 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.#ctor(System.String,OpenCvSharp.WindowMode,OpenCvSharp.CvArr)">
            <summary>
            윈도우명과 화상의 표시 모드와 처음부터 표시해 두는 화상을 지정해 초기화
            </summary>
            <param name="name">윈도우의 식별로 이용되는 윈도우명으로, 윈도우의 타이틀 바에 표시된다.</param>
            <param name="flags">윈도우의 플래그</param>
            <param name="image">윈도우에 표시하는 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.DefaultName">
            <summary>
            윈도우명이 지정되지 않았을 때에, 적당한 이름을 작성해 돌려준다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvWindow.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvWindow.Close">
            <summary>
            윈도우를 닫는다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvWindow.DestroyAllWindows">
            <summary>
            모든 HighGUI 윈도우를 파기한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvWindow.CreateTrackbar(System.String)">
            <summary>
            윈도우에 트랙바를 작성해, 작성한 트랙바를 돌려준다
            </summary>
            <param name="name">트랙바의 이름</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.CreateTrackbar(System.String,OpenCvSharp.CvTrackbarCallback)">
            <summary>
            윈도우에 트랙바를 작성해, 작성한 트랙바를 돌려준다
            </summary>
            <param name="name">트랙바의 이름</param>
            <param name="callback">슬라이더의 위치가 변경될 때마다 불려 가는 Delegate</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.CreateTrackbar(System.String,System.Int32,System.Int32)">
            <summary>
            윈도우에 트랙바를 작성해, 작성한 트랙바를 돌려준다
            </summary>
            <param name="name">트랙바의 이름</param>
            <param name="value">슬라이더의 위치.</param>
            <param name="max">슬라이더의 최대치.최소치는 항상 0.</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.CreateTrackbar(System.String,System.Int32,System.Int32,OpenCvSharp.CvTrackbarCallback)">
            <summary>
            윈도우에 트랙바를 작성해, 작성한 트럭 바를 돌려준다
            </summary>
            <param name="name">트랙바의 이름</param>
            <param name="value">슬라이더의 초기 위치</param>
            <param name="max">슬라이더의 최대치.최소치는 항상 0.</param>
            <param name="callback">슬라이더의 위치가 변경될 때마다 불려 가는 Delegate</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.ShowImage(OpenCvSharp.CvArr)">
            <summary>
            지정한 윈도우내에 화상을 표시한다(cvShowImage 상당).
            이 윈도우의 플래그에 AutoSize 가 지정되어 있었을 경우는, 화상은 오리지날 사이즈로 표시된다.
            그 이외의 경우, 윈도우사이즈에 맞추어 표시 화상 사이즈가 변경된다. 
            </summary>
            <param name="img">화상 헤더</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.Move(System.Int32,System.Int32)">
            <summary>
            윈도우의 위치를 변경한다
            </summary>
            <param name="x">좌상의 코너가 새로운 x 좌표</param>
            <param name="y">좌상의 코너가 새로운 y 좌표</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.Resize(System.Int32,System.Int32)">
            <summary>
            윈도우 사이즈를 변경한다
            </summary>
            <param name="width">새로운 폭</param>
            <param name="height">새로운 높이</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.WaitKey">
            <summary>
            아무키나 입력 될 때까지 대기한다.
            </summary>
            <returns>입력된 키의 키코드</returns>
        </member>
        <member name="M:OpenCvSharp.CvWindow.WaitKey(System.Int32)">
            <summary>
            아무키나 눌리는지, 혹은 delay로 지정한 시간(밀리 세컨드)까지 대기한다.
            </summary>
            <param name="delay">지연 시간(밀리 세컨드)</param>
            <returns>키가 눌렸을 경우는 그 키코드를, 키가 눌리지 않은 채 지정된 타임 아웃 시간이 지나 버렸을 경우는 -1</returns>
        </member>
        <member name="M:OpenCvSharp.CvWindow.ShowImages(OpenCvSharp.CvArr[])">
            <summary>
            인수로 지정한 화상을 각각 다른 윈도우로 표시해, 키 입력 대기 상태로 한다.
            </summary>
            <param name="images">표시시키는 화상.임의의 개수를 지정할 수 있다.</param>
        </member>
        <member name="M:OpenCvSharp.CvWindow.GetWindowByName(System.String)">
            <summary>
            지정한 이름에 대응하는 윈도우를 얻는다
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:OpenCvSharp.CvWindow.Image">
            <summary>
            표시하는 화상을 취득·설정한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvWindow.Name">
            <summary>
            윈도우의 이름을 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvWindow.Handle">
            <summary>
            윈도우 핸들을 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvWindow.MouseCallback">
            <summary>
            마우스 이벤트가 발생했을 때의 이벤트 핸들러
            </summary>
        </member>
        <member name="E:OpenCvSharp.CvWindow.OnMouseCallback">
            <summary>
            마우스 이벤트가 발생했을 때의 이벤트 핸들러
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvTermCriteria">
            <summary>
            반복 알고리즘을 위한 종료 조건
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvTermCriteria.SizeOf">
            <summary>
            sizeof(CvTermCriteria)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvTermCriteria.Type">
            <summary>
            종료조건의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvTermCriteria.MaxIter">
            <summary>
            반복횟수
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvTermCriteria.Epsilon">
            <summary>
            목표정도
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvTermCriteria.#ctor(System.Int32)">
            <summary>
            반복 회수에 의한 종료 조건을 설정해 초기화
            </summary>
            <param name="max_iter">반복수의 최대치</param>
        </member>
        <member name="M:OpenCvSharp.CvTermCriteria.#ctor(System.Double)">
            <summary>
            목표 정도에 의한 종료 조건을 설정해 초기화
            </summary>
            <param name="epsilon">목표 정도</param>
        </member>
        <member name="M:OpenCvSharp.CvTermCriteria.#ctor(System.Int32,System.Double)">
            <summary>
            반복 회수와 목표 정도에 의한 종료 조건을 설정해 초기화
            </summary>yy
            <param name="max_iter">반복수의 최대치</param>
            <param name="epsilon">목표 정도</param>
        </member>
        <member name="M:OpenCvSharp.CvTermCriteria.#ctor(OpenCvSharp.CriteriaType,System.Int32,System.Double)">
            <summary>
            모두 지정해 초기화
            </summary>
            <param name="type">종료 조건</param>
            <param name="max_iter">반복수의 최대치</param>
            <param name="epsilon">목표 정도</param>
        </member>
        <member name="M:OpenCvSharp.CvTermCriteria.Check(System.Double,System.Int32)">
            <summary>
            종료 조건을 체크해, type= Iteration|Epsilon 로 설정해, 반복수의 max_iter와 eprilon 의 양쪽 모두가 유효하게 되도록 변환한다
            </summary>
            <param name="default_eps"></param>
            <param name="default_max_iters"></param>
            <returns>변환 결과</returns>
        </member>
        <member name="T:OpenCvSharp.CvSubdiv2DPoint">
            <summary>
            오리지날 포인트 또는 dual subdivision
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSubdiv2DPoint.SizeOf">
            <summary>
            sizeof(CvSubdiv2DPoint) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSubdiv2DPoint._data">
            <summary>
            C++/CLI wrapper of native structure's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2DPoint.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2DPoint.FromPtr(System.IntPtr)">
            <summary>
            포인터로부터 CvSubdiv2DPoint instance를 생성해 돌려준다
            </summary>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2DPoint.op_Explicit(System.IntPtr)~OpenCvSharp.CvSubdiv2DPoint">
            <summary>
            포인터로부터의 명시적인 캐스트
            </summary>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvSubdiv2DPoint.Flags">
            <summary>
            여러가지 플래그
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSubdiv2DPoint.First">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSubdiv2DPoint.Pt">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.LKFlowFlag">
            <summary>
            CalcOpticalFlowPyrLK의 처리 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.LKFlowFlag.PyrAReady">
            <summary>
            1번째의 프레임에 대한 피라미드가 사전에 계산된다
            </summary>
        </member>
        <member name="F:OpenCvSharp.LKFlowFlag.PyrBReady">
            <summary>
            2번째의 프레임에 대한 피라미드가 사전에 계산된다
            </summary>
        </member>
        <member name="F:OpenCvSharp.LKFlowFlag.InitialGuesses">
            <summary>
            이 함수 호출 이전에, 배열 curr_features는 특징의 초기 좌표를 가진다
            </summary>
        </member>
        <member name="T:OpenCvSharp.HistogramComparison">
            <summary>
            cvCompareHist로 이용하는, CvHistogram의 비교 방법
            </summary>
        </member>
        <member name="F:OpenCvSharp.HistogramComparison.Correl">
            <summary>
            상관 [CV_COMP_CORREL]
            </summary>
        </member>
        <member name="F:OpenCvSharp.HistogramComparison.Chisqr">
            <summary>
            카이 제곱 [CV_COMP_CHISQR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.HistogramComparison.Intersect">
            <summary>
            교차 [CV_COMP_INTERSECT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.HistogramComparison.Bhattacharyya">
            <summary>
            Bhattacharyya 거리 [CV_COMP_BHATTACHARYYA]. 정규화된 히스토그램에서만 실행 가능하다.
            </summary>
        </member>
        <member name="T:OpenCvSharp.ColorConversion">
            <summary>
            색공간(color space)의 변환의 방법
            </summary>
        </member>
        <member name="T:OpenCvSharp.ApertureSize">
            <summary>
            확장 Sobel 커넬의 사이즈
            </summary>
        </member>
        <member name="F:OpenCvSharp.ApertureSize.Size1">
            <summary>
            사이즈 1
            </summary>
        </member>
        <member name="F:OpenCvSharp.ApertureSize.Size3">
            <summary>
            사이즈 3
            </summary>
        </member>
        <member name="F:OpenCvSharp.ApertureSize.Size5">
            <summary>
            사이즈 5
            </summary>
        </member>
        <member name="F:OpenCvSharp.ApertureSize.Size7">
            <summary>
            사이즈 7
            </summary>
        </member>
        <member name="F:OpenCvSharp.ApertureSize.Scharr">
            <summary>
            3x3 Sobel보다 정도의 좋은 결과를 얻을 수 있는 3x3 의 Sharr 의 필터.
            [CV_SCHARR]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvFileStorage">
            <summary>
            파일 스토리지.
            CXCore는, XML(http://www.w3c.org/XML)나 YAML (http://www.yaml.org) 형식의 데이터의 읽고 쓰기가 가능하다.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.#ctor(System.String,OpenCvSharp.CvMemStorage,OpenCvSharp.FileStorageMode)">
            <summary>
            데이터 읽고 쓰기를 위한 파일을 오픈한다 (cvOpenFileStorage 상당)
            </summary>
            <param name="filename">스토리지에 관련 지을 수 있었던 파일의 이름</param>
            <param name="memstorage">일시적인 데이터나, CvSeq나 CvGraph등의 동적 구조체의 보존에 사용되는 메모리스트레이지.null의 경우, 일시적인 메모리가 확보되어 사용된다.</param>
            <param name="flags">파일을 여는 방법 또는 작성하는 방법</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr">struct CvFileStorage*</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.Dispose">
            <summary>
            파일을 닫고, 일시적인 구조체를 모두 해제한다.
            이 함수는, 모든 입출력 조작이 종료한 후에 실행되지 않으면 안 된다. 
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.EndWriteStruct">
            <summary>
            파일 스토리지에의 구조체의 기입을 종료한다.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.GetFileNode(OpenCvSharp.CvFileNode,OpenCvSharp.CvStringHashNode)">
            <summary>
            맵 또는 파일 스토리지내의 노드를 찾아낸다
            </summary>
            <param name="map">친맵.null의 경우, 이 함수는 톱 레벨 노드를 찾는다.만약 map와 key의 양쪽 모두가 null의 경우에는, 이 함수는 톱 레벨 노드를 가지는 맵인 루트 파일 노드를 돌려준다.</param>
            <param name="key">cvGetHashedKey로 취득되는 노드명헤의 유일한 포인터</param>
            <returns>준 map,key에 대한 파일 노드</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.GetFileNode(OpenCvSharp.CvFileNode,OpenCvSharp.CvStringHashNode,System.Boolean)">
            <summary>
            맵 또는 파일 스토리지내의 노드를 찾아낸다
            </summary>
            <param name="map">친맵.null의 경우, 이 함수는 톱 레벨 노드를 찾는다.만약 map와 key의 양쪽 모두가 null의 경우에는, 이 함수는 톱 레벨 노드를 가지는 맵인 루트 파일 노드를 돌려준다.</param>
            <param name="key">cvGetHashedKey로 취득되는 노드명헤의 유일한 포인터</param>
            <param name="create_missing">absent key를 해시 테이블에 추가할지를 지정하는 플래그</param>
            <returns>준 map,key에 대한 파일 노드</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.GetFileNodeByName(OpenCvSharp.CvFileNode,System.String)">
            <summary>
            맵내 또는 파일 스토리지내로부터 노드를 탐색한다
            </summary>
            <param name="map">친맵.null의 경우, 이 함수는 제일 최초의 것으로부터 개시하고, 모든 톱 레벨 노드(스트림) 내를 탐색한다.</param>
            <param name="name">파일 노드명</param>
            <returns>이름이 name의 파일 노드</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.GetRootFileNode">
            <summary>
            톱 레벨 파일 노드의 하나를 돌려준다.
            </summary>
            <returns>톱 레벨 파일 노드의 하나</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.GetRootFileNode(System.Int32)">
            <summary>
            톱 레벨 파일 노드의 하나를 돌려준다.
            </summary>
            <param name="stream_index">0으로부터 시작되는 스트림의 인덱스.많은 경우, 파일중에 존재하는 것은 하나의 스톰이지만, 복수로도 될 수 있다.</param>
            <returns>톱 레벨 파일 노드의 하나</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.GetHashedKey(System.String)">
            <summary>
            준 이름에 대한 독특한 포인터를 돌려준다 
            </summary>
            <param name="name">파일 노드명</param>
            <returns>준 이름에 대한 독특한 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.GetHashedKey(System.String,System.Boolean)">
            <summary>
            준 이름에 대한 독특한 포인터를 돌려준다 
            </summary>
            <param name="name">파일 노드명</param>
            <param name="create_missing">absent key를 해시 테이블에 추가할지를 지정하는 플래그</param>
            <returns>준 이름에 대한 독특한 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.Read``1(OpenCvSharp.CvFileNode)">
            <summary>
            오브젝트를 디코드해, 그 참조를 돌려준다.
            </summary>
            <typeparam name="T">반환치의 형태(CvArr 파생형)</typeparam>
            <param name="node">루트 오브젝트 노드</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.ReadByName``1(OpenCvSharp.CvFileNode,System.String)">
            <summary>
            오브젝트를 디코드해, 디코드한다.
            cvGetFileNodeByName 와 cvRead의 단순한 합성이다.
            </summary>
            <typeparam name="T">반환치의 형태(CvArr 파생형)</typeparam>
            <param name="map">친맵.null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.ReadIntByName(OpenCvSharp.CvFileNode,System.String)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadInt의 단순한 합성이다.
            </summary>
            <param name="map">친맵.null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <returns>파일 노드로 표현된 정수치</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.ReadIntByName(OpenCvSharp.CvFileNode,System.String,System.Int32)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadInt의 단순한 합성이다.
            </summary>
            <param name="map">친맵.null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <param name="default_value">파일 노드가 발견되지 않는 경우의 반환값</param>
            <returns>파일 노드로 표현된 정수치</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.ReadRawData``1(OpenCvSharp.CvFileNode,``0[]@,System.String)">
            <summary>
            복수의 수치를 읽어들인다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">수치를 읽어들이는 파일 노드(순서)</param>
            <param name="dst">기입처의 배열에의 포인터.</param>
            <param name="dt">배열의 개개의 요소의 사양.</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.ReadRawDataSlice``1(OpenCvSharp.CvSeqReader,System.Int32,``0[]@,System.String)">
            <summary>
            복수의 수치의 순서를 읽어들인다
            </summary>
            <typeparam name="T"></typeparam>
            <param name="reader">순서 리더</param>
            <param name="count">읽어들이는 요소수</param>
            <param name="dst">출력 배열</param>
            <param name="dt">각 배열 요소의 사양</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.ReadRealByName(OpenCvSharp.CvFileNode,System.String)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadReal의 단순한 합성이다.
            </summary>
            <param name="map">친맵.null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <returns>파일 노드로 표현된 부동 소수점형의 값</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.ReadRealByName(OpenCvSharp.CvFileNode,System.String,System.Double)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadReal의 단순한 합성이다.
            </summary>
            <param name="map">친맵.null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <param name="default_value">파일 노드가 발견되지 않는 경우의 반환값</param>
            <returns>파일 노드로 표현된 부동 소수점형의 값</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.ReadStringByName(OpenCvSharp.CvFileNode,System.String)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadString의 단순한 합성이다.
            </summary>
            <param name="map">친맵.null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <returns>파일 노드로 표현된 문자열</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.ReadStringByName(OpenCvSharp.CvFileNode,System.String,System.String)">
            <summary>
            파일 노드를 탐색해, 그 값을 돌려준다.
            cvGetFileNodeByName 와 cvReadString의 단순한 합성이다.
            </summary>
            <param name="map">친맵.null의 경우, 이 함수는 톱 레벨 노드를 탐색한다.</param>
            <param name="name">노드명</param>
            <param name="default_value">파일 노드가 발견되지 않는 경우의 반환값</param>
            <returns>파일 노드로 표현된 문자열</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.StartNextStream">
            <summary>
            파일 스토리지내의 다음의 스트림을 개시한다.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.StartReadRawData(OpenCvSharp.CvFileNode,OpenCvSharp.CvSeqReader@)">
            <summary>
            파일 노드의 순서 리더의 초기화
            </summary>
            <param name="src">읽어들이는 파일 노드(순서).</param>
            <param name="reader">순서 리더에게의 포인터.</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.StartWriteStruct(System.String,OpenCvSharp.NodeType)">
            <summary>
            새로운 구조체의 기입을 개시한다
            </summary>
            <param name="name">쓰는 구조체의 이름.읽어들이는 경우는, 이 이름으로 구조체에 액세스 할 수 있다.</param>
            <param name="struct_flags">Seq, Map, Flow의 플래그의 편성. Seq와 Map는 어느 쪽인지 1개를 지정해야 한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.StartWriteStruct(System.String,OpenCvSharp.NodeType,System.String)">
            <summary>
            새로운 구조체의 기입을 개시한다
            </summary>
            <param name="name">쓰는 구조체의 이름.읽어들이는 경우는, 이 이름으로 구조체에 액세스 할 수 있다.</param>
            <param name="struct_flags">Seq, Map, Flow의 플래그의 편성. Seq와 Map는 어느 쪽인지 1개를 지정해야 한다.</param>
            <param name="type_name">옵션 파라미터 - 오브젝트의 형태의 이름. 
            XML의 경우, 구조체 개시 태그의 type_id속성으로서 쓰여진다. YAML의 경우, 구조체명에 계속 되는 코론의 뒤에 쓰여진다. 
            주로 유저 오브젝트와 함께 사용된다.스토리지가 읽혀졌을 때, encode 된 형명이 오브젝트의 형태를 결정한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.Write(System.String,OpenCvSharp.CvArr)">
            <summary>
            오브젝트를 파일 스토리지에 쓴다.
            </summary>
            <param name="name">써지는 오브젝트의 이름.부모의 구조체가 순서의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="ptr">오브젝트에의 참조</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.Write(System.String,OpenCvSharp.CvArr,OpenCvSharp.CvAttrList)">
            <summary>
            오브젝트를 파일 스토리지에 쓴다.
            </summary>
            <param name="name">써지는 오브젝트의 이름.부모의 구조체가 순서의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="ptr">오브젝트에의 참조.</param>
            <param name="attributes">오브젝트의 속성.이것은 특정의 형태에 대해서 고유하다.</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.WriteComment(System.String)">
            <summary>
            파일 스토리지에 코멘트를 쓴다 (eol_comment = false).
            이 코멘트는 디버그나 설명을 기술하기 위해서 사용되는 것으로, 읽기시에는 읽어 날아간다.
            </summary>
            <param name="comment">일행 또는 복수행의, 써지는 쌀 문자열</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.WriteComment(System.String,System.Boolean)">
            <summary>
            파일 스토리지에 코멘트를 쓴다.
            이 코멘트는 디버그나 설명을 기술하기 위해서 사용되는 것으로, 읽기시에는 읽어 날아간다.
            </summary>
            <param name="comment">일행 또는 복수행의, 써지는 쌀 문자열</param>
            <param name="eol_comment">true의 경우, 이 함수는 현재의 행의 마지막에 코멘트를 넣으려고 시도한다.
            false로, 코멘트가 복수, 또는 현재의 행의 마지막에 들어가지 않는 경우는, 코멘트는 새로운 행으로부터 시작할 수 있다.</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.WriteFileNode(System.String,OpenCvSharp.CvFileNode,System.Boolean)">
            <summary>
            파일 노드를 다른 파일 스토리지에 쓴다
            </summary>
            <param name="new_node_name">기입처 파일 스토리지내의 파일 노드가 새로운 이름.전의 이름을 유지하기 위해서는, cvGetFileNodeName(node)를 이용한다.</param>
            <param name="node">써지는 노드.</param>
            <param name="embed">써지는 노드가 콜렉션으로, 이 파라미터가 true의 경우, 계층의 여분의 레벨은 생성되지 않는다.
            그 대신에, node의 모든 요소는 현재 써지고 있는 구조체에 써진다.
            당연, 맵 요소는 맵에게만 써져 순서 요소는 순서에게만 써진다.</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.WriteInt(System.String,System.Int32)">
            <summary>
            1개의 정수치(이름 있어, 또는 없음)를 파일에 쓴다.
            </summary>
            <param name="name">써지는 문자열의 이름.부모의 구조체가 순서의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="value">써지는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.WriteRawData``1(``0[],System.String)">
            <summary>
            복수의 수치를 쓴다
            </summary>
            <typeparam name="T">src의 요소의 형태</typeparam>
            <param name="src">쓰는 배열</param>
            <param name="dt">포맷</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.WriteReal(System.String,System.Double)">
            <summary>
            단정도 부동 소수점형의 값(이름 있어, 또는 없음)을 파일에 쓴다.
            특별한 값은 encode 되는：Not A Number는 NaN 에,±Infinity는 +.Inf (-.Inf)가 된다.
            </summary>
            <param name="name">써지는 문자열의 이름.부모의 구조체가 순서의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="value">써지는 값</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.WriteString(System.String,System.String)">
            <summary>
            문자열을 파일 스토리지에 쓴다.
            </summary>
            <param name="name">써지는 문자열의 이름.부모의 구조체가 순서의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="str">써지는 문자열</param>
        </member>
        <member name="M:OpenCvSharp.CvFileStorage.WriteString(System.String,System.String,System.Boolean)">
            <summary>
            문자열을 파일 스토리지에 쓴다.
            </summary>
            <param name="name">써지는 문자열의 이름.부모의 구조체가 순서의 경우는, null로 하지 않으면 안 된다.</param>
            <param name="str">써지는 문자열</param>
            <param name="quote">true의 경우, 써지는 문자열은 필요할지에 관련되지 않고 인용부호로 낀다.
            false의 경우, 필요한 경우에게만 인용부호가 사용된다(예를 들면, 문자열이 숫자로 시작되어 있거나, 스페이스를 포함한 경우).</param>
        </member>
        <member name="T:OpenCvSharp.CvString">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvString.Len">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvString.Ptr">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvString.#ctor(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
            <param name="len"></param>
        </member>
        <member name="M:OpenCvSharp.CvString.op_Implicit(OpenCvSharp.CvString)~System.String">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvString.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.PixelConnectivity">
            <summary>
            CvLineIterator에 있어서의, 주사 한 선분의 접속성
            </summary>
        </member>
        <member name="F:OpenCvSharp.PixelConnectivity.Connectivity_4">
            <summary>
            주위 4 방향(상하 좌우)
            </summary>
        </member>
        <member name="F:OpenCvSharp.PixelConnectivity.Connectivity_8">
            <summary>
            주위 8 방향
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvWriteFunc">
            <summary>
            
            </summary>
            <param name="storage"></param>
            <param name="name"></param>
            <param name="struct_ptr"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.ScopedGCHandle">
            <summary>
            IDisposable를 실장한 GCHandle
            </summary>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.#ctor(System.Object)">
            <summary>
            지정한 오브젝트에 System.Runtime.InteropServices.GCHandleType.Normal 핸들을 할당합니다
            </summary>
            <param name="value">GC의 대상으로부터 떼어내는 오브젝트</param>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.#ctor(System.Object,System.Runtime.InteropServices.GCHandleType)">
            <summary>
            지정한 오브젝트로 지정한 형태의 핸들을 할당합니다
            </summary>
            <param name="value">GC의 대상으로부터 떼어내는 오브젝트</param>
            <param name="type">작성하는 System.Runtime.InteropServices.GCHandle 의 형태를 나타내는, System.Runtime.InteropServices.GCHandleType 값의 1 개</param>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.#ctor(System.Runtime.InteropServices.GCHandle)">
            <summary>
            GCHandle로부터 초기화
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.Alloc(System.Object)">
            <summary>
            지정한 오브젝트에 System.Runtime.InteropServices.GCHandleType.Normal 핸들을 할당합니다
            </summary>
            <param name="value">System.Runtime.InteropServices.GCHandle 를 사용하는 오브젝트</param>
            <returns>오브젝트를 GC로부터 보호하는 새로운 System.Runtime.InteropServices.GCHandle.
            System.Runtime.InteropServices.GCHandle는, 불필요하게 되었을 때에 System.Runtime.InteropServices.GCHandle.Free()로 해제할 필요가 있습니다.</returns>
            <exception cref="T:System.ArgumentException">비원시적 (blittable 가 아니다) 멤버를 가지는 인스턴스는 고정할 수 없습니다</exception>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)">
            <summary>
            지정한 오브젝트로 지정한 형태의 핸들을 할당합니다
            </summary>
            <param name="value">System.Runtime.InteropServices.GCHandle 를 사용하는 오브젝트</param>
            <param name="type">작성하는 System.Runtime.InteropServices.GCHandle 의 형태를 나타내는, System.Runtime.InteropServices.GCHandleType 치의 1 개</param>
            <returns>오브젝트를 GC로부터 보호하는 새로운 System.Runtime.InteropServices.GCHandle.
            System.Runtime.InteropServices.GCHandle 는, 불필요하게 되었을 때에 System.Runtime.InteropServices.GCHandle.Free()로 해제할 필요가 있습니다.</returns>
            <exception cref="T:System.ArgumentException">비원시적 (blittable 가 아니다) 멤버를 가지는 인스턴스는 고정할 수 없습니다</exception>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.Dispose">
            <summary>
            GCHandle.Free에 의해 자원의 해제를 실시한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.FromIntPtr(System.IntPtr)">
            <summary>
            매니지 오브젝트를 식별하는 핸들로부터 작성된 새로운 System.Runtime.InteropServices.GCHandle 오브젝트를 돌려줍니다
            </summary>
            <param name="value">System.Runtime.InteropServices.GCHandle 오브젝트의 작성원의 매니지 오브젝트를 식별하는 System.IntPtr 핸들</param>
            <exception cref="T:System.InvalidOperationException">value 파라미터의 값이 System.IntPtr.Zero 입니다</exception>
            <returns>값파라미터에 대응하는 새로운 System.Runtime.InteropServices.GCHandle 오브젝트</returns>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.ToIntPtr(OpenCvSharp.ScopedGCHandle)">
            <summary>
            System.Runtime.InteropServices.GCHandle 오브젝트의 내부 정수 표현을 돌려줍니다
            </summary>
            <param name="value">내부 정수 표현의 취득원의 System.Runtime.InteropServices.GCHandle 오브젝트</param>
            <returns>System.Runtime.InteropServices.GCHandle 오브젝트를 나타내는 System.IntPtr 오브젝트</returns>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.AddrOfPinnedObject">
            <summary>
            System.Runtime.InteropServices.GCHandleType.Pinned 핸들내의 오브젝트의 주소를 취득합니다
            </summary>
            <returns>System.IntPtr 로서의 Pinned 오브젝트의 주소</returns>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.Equals(System.Object)">
            <summary>
            지정한 System.Runtime.InteropServices.GCHandle 오브젝트가, 현재의 System.Runtime.InteropServices.GCHandle 오브젝트와 동일한지 어떤지를 판단합니다
            </summary>
            <param name="obj">현재의 System.Runtime.InteropServices.GCHandle 오브젝트와 비교하는 System.Runtime.InteropServices.GCHandle 오브젝트</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.Free">
            <summary>
            System.Runtime.InteropServices.GCHandle 를 해제합니다
            </summary>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.GetHashCode">
            <summary>
            현재의 System.Runtime.InteropServices.GCHandle 오브젝트의 식별자를 돌려줍니다
            </summary>
            <returns>현재의 System.Runtime.InteropServices.GCHandle 오브젝트의 식별자</returns>
        </member>
        <member name="M:OpenCvSharp.ScopedGCHandle.ToString">
            <summary>
            문자열 형식을 돌려준다
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.ScopedGCHandle.Handle">
            <summary>
            내부에서 보관 유지하는 GCHandle
            </summary>
        </member>
        <member name="P:OpenCvSharp.ScopedGCHandle.IsAllocated">
            <summary>
            핸들을 할당할 수 있는지 어떤지를 나타내는 값을 취득합니다
            </summary>
        </member>
        <member name="P:OpenCvSharp.ScopedGCHandle.Target">
            <summary>
            핸들이 나타내는 오브젝트를 취득 또는 설정합니다
            </summary>
        </member>
        <member name="T:OpenCvSharp.MorphologyOperation">
            <summary>
            모폴로지 연산의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.MorphologyOperation.Open">
            <summary>
            열린 [CV_MOP_OPEN].
            dst=open(src,element) =dilate(erode(src,element),element)
            </summary>
        </member>
        <member name="F:OpenCvSharp.MorphologyOperation.Close">
            <summary>
            닫힌 [CV_MOP_CLOSE].
            dst=close(src,element) =erode(dilate(src,element),element)
            </summary>
        </member>
        <member name="F:OpenCvSharp.MorphologyOperation.Gradient">
            <summary>
            모폴로지 그라디언트(엣지 검출) [CV_MOP_GRADIENT].
            dst=morph_grad(src,element) =dilate(src,element) -erode(src,element)
            </summary>
        </member>
        <member name="F:OpenCvSharp.MorphologyOperation.TopHat">
            <summary>
            톱햇 변환(top hat) [CV_MOP_TOPHAT].
            dst=tophat(src,element) =src-open(src,element)
            </summary>
        </member>
        <member name="F:OpenCvSharp.MorphologyOperation.BlackHat">
            <summary>
            블랙햇 변환(black hat) [CV_MOP_BLACKHAT]
            dst=blackhat(src,element)=close(src,element)-src
            </summary>
        </member>
        <member name="T:OpenCvSharp.MatrixType">
            <summary>
            행렬 요소의 종류.
            형식은 (S|U|F) bit_depth C number_of_channels .
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.U8C1">
            <summary>
            부호 없는 8비트 정수 1 채널 [CV_8UC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.U8C2">
            <summary>
            부호 없는 8비트 정수 2 채널 [CV_8UC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.U8C3">
            <summary>
            부호 없는 8비트 정수 3 채널 [CV_8UC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.U8C4">
            <summary>
            부호 없는 8비트 정수 4 채널 [CV_8UC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S8C1">
            <summary>
            부호 있는 8비트 정수 1 채널 [CV_8SC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S8C2">
            <summary>
            부호 있는 8비트 정수 2 채널 [CV_8SC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S8C3">
            <summary>
            부호 있는 8비트 정수 3 채널 [CV_8SC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S8C4">
            <summary>
            부호 있는 8비트 정수 4 채널 [CV_8SC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.U16C1">
            <summary>
            부호 없는 16비트 정수 1 채널 [CV_16UC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.U16C2">
            <summary>
            부호 없는 16비트 정수 2 채널 [CV_16UC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.U16C3">
            <summary>
            부호 없는 16비트 정수 3 채널 [CV_16UC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.U16C4">
            <summary>
            부호 없는 16비트 정수 4 채널 [CV_16UC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S16C1">
            <summary>
            부호 있는 16비트 정수 1 채널 [CV_16SC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S16C2">
            <summary>
            부호 있는 16비트 정수 2 채널 [CV_16SC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S16C3">
            <summary>
            부호 있는 16비트 정수 3 채널 [CV_16SC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S16C4">
            <summary>
            부호 있는 16비트 정수 4 채널 [CV_16SC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S32C1">
            <summary>
            부호 있는 32비트 정수 1 채널 [CV_32SC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S32C2">
            <summary>
            부호 있는 32비트 정수 2 채널 [CV_32SC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S32C3">
            <summary>
            부호 있는 32비트 정수 3 채널 [CV_32SC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.S32C4">
            <summary>
            부호 있는 32비트 정수 4 채널 [CV_32SC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.F32C1">
            <summary>
            32비트 부동 소수점수(실수) 1 채널 [CV_32FC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.F32C2">
            <summary>
            32비트 부동 소수점수(실수) 2 채널 [CV_32FC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.F32C3">
            <summary>
            32비트 부동 소수점수(실수) 3 채널 [CV_32FC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.F32C4">
            <summary>
            32비트 부동 소수점수(실수) 4 채널 [CV_32FC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.F64C1">
            <summary>
            64비트 부동 소수점수(실수) 1 채널 [CV_64FC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.F64C2">
            <summary>
            64비트 부동 소수점수(실수) 2 채널 [CV_64FC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.F64C3">
            <summary>
            64비트 부동 소수점수(실수) 3 채널 [CV_64FC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatrixType.F64C4">
            <summary>
            64비트 부동 소수점수(실수) 4 채널 [CV_64FC4]
            </summary>
        </member>
        <member name="T:OpenCvSharp.HomographyMethod">
            <summary>
            호모그라피 행렬을 계산하기 위한 방법
            </summary>
        </member>
        <member name="F:OpenCvSharp.HomographyMethod.Zero">
            <summary>
            모든 점의 페어를 이용하는 표준적인 방법
            [= 0]
            </summary>
        </member>
        <member name="F:OpenCvSharp.HomographyMethod.LMedS">
            <summary>
            LMedS 추정에 의한 robust 방법
            [CV_LMEDS]
            </summary>
        </member>
        <member name="F:OpenCvSharp.HomographyMethod.Ransac">
            <summary>
            RANSAC 알고리즘에 근거하는 robust 방법
            [CV_RANSAC]
            </summary>
        </member>
        <member name="T:OpenCvSharp.FileStorageMode">
            <summary>
            CvFileStorage의 모드
            </summary>
        </member>
        <member name="F:OpenCvSharp.FileStorageMode.Read">
            <summary>
            데이터 읽을 파일 오픈 
            [CV_STORAGE_READ]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FileStorageMode.Write">
            <summary>
            데이터 기입을 위한 파일 오픈 
            [CV_STORAGE_WRITE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FileStorageMode.WriteText">
            <summary>
            텍스트 데이터 기입을 위한 파일 오픈 
            [CV_STORAGE_WRITE_TEXT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FileStorageMode.WriteBinary">
            <summary>
            바이너리 데이터 기입을 위한 파일 오픈 
            [CV_STORAGE_WRITE_BINARY]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FileStorageMode.Append">
            <summary>
            데이터 추가 기입을 위한 파일 오픈 
            [CV_STORAGE_APPEND]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvContour">
            <summary>
            윤곽 데이터
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvContour.SizeOf">
            <summary>
            sizeof(CvContour) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvContour._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvContour.#ctor">
            <summary>
            일정한 메모리를 확보해 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvContour.#ctor(System.IntPtr)">
            <summary>
            네이티브의 데이터 포인터로부터 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.CvContour.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvContour.Rect">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvContour.Color">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSubdiv2DPointLocation">
            <summary>
            cvSubdiv2DLocate에 의한 점의 배치의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSubdiv2DPointLocation.Error">
            <summary>
            입력의 인수가 올바르지 않다 
            [CV_PTLOC_ERROR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSubdiv2DPointLocation.OutsideRect">
            <summary>
            점은 세분비율 평면의 참조 사각형의 밖에 있다 
            [CV_PTLOC_OUTSIDE_RECT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSubdiv2DPointLocation.Inside">
            <summary>
            점은 facet 내에 존재한다 
            [CV_PTLOC_INSIDE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSubdiv2DPointLocation.Vertex">
            <summary>
            점은 세분비율 평면내의 정점과 일치한다 
            [CV_PTLOC_VERTEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSubdiv2DPointLocation.OnEdge">
            <summary>
            점은 엣지 위에 존재한다 
            [CV_PTLOC_ON_EDGE]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvFeatureTree">
            <summary>
            특징 벡터의 인덱스에 대한 밸런스 k-d 트리
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvFeatureTree.#ctor(OpenCvSharp.CvMat)">
            <summary>
            특징 벡터의 트리를 작성한다
            </summary>
            <param name="desc">d 차원 특징 벡터의 n × d 행렬(CV_32FC1 or CV_64FC1).</param>
        </member>
        <member name="M:OpenCvSharp.CvFeatureTree.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvFeatureTree.Dispose">
            <summary>
            특징 벡터의 트리를 해제한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvFeatureTree.FindFeatures(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            최적 빈 우선(Best-Bin-First) 탐색을 이용하고, 주어진 벡터의 대체로의 k 최근이웃값을 구한다
            </summary>
            <param name="desc">(행) 벡터의 m × d 행렬.이러한 벡터의 근방치를 탐색한다.</param>
            <param name="results">일치한 벡터의 행 인덱스 (cvCreateFeatureTree에 인수로서 건네받는 행렬을 참조한다)의 집합.m × k의 행렬.k 근방보다 먼 경우는, 그 열에는 -1 이 들어간다.</param>
            <param name="dist">k 최근 이웃까지의 거리의 m × k 행렬.</param>
        </member>
        <member name="M:OpenCvSharp.CvFeatureTree.FindFeatures(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,System.Int32)">
            <summary>
            최적 빈 우선(Best-Bin-First) 탐색을 이용하고, 주어진 벡터의 대체로의 k 최근이웃값을 구한다
            </summary>
            <param name="desc">(행) 벡터의 m × d 행렬.이러한 벡터의 최근 이웃값을 탐색한다.</param>
            <param name="results">일치한 벡터의 행 인덱스 (cvCreateFeatureTree에 인수로서 건네받는 행렬을 참조한다)의 집합.m × k의 행렬.k 근방보다 먼 경우는, 그 열에는 -1 이 들어간다.</param>
            <param name="dist">k 근방치까지의 거리의 m × k 행렬.</param>
            <param name="k">검출되는 이웃의 수.</param>
        </member>
        <member name="M:OpenCvSharp.CvFeatureTree.FindFeatures(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat,System.Int32,System.Int32)">
            <summary>
            최적 빈 우선(Best-Bin-First) 탐색을 이용하고, 주어진 벡터의 대체로의 k 근방치를 요구한다
            </summary>
            <param name="desc">(행) 벡터의 m × d 행렬.이러한 벡터의 근방치를 탐색한다.</param>
            <param name="results">일치한 벡터의 행 인덱스 (cvCreateFeatureTree에 인수로서 건네받는 행렬을 참조한다)의 집합.m × k의 행렬.k 근방보다 먼 경우는, 그 열에는 -1 이 들어간다.</param>
            <param name="dist">k 근방치까지의 거리의 m × k 행렬.</param>
            <param name="k">검출되는 근방의 수.</param>
            <param name="emax">탐색하는 잎의 최대수.</param>
        </member>
        <member name="M:OpenCvSharp.CvFeatureTree.FindFeaturesBoxed(OpenCvSharp.CvMat,OpenCvSharp.CvMat,OpenCvSharp.CvMat)">
            <summary>
            주어진 k-d키노우에에서 직교 영역 탐색을 실시한다.
            </summary>
            <param name="bounds_min">각 차원의 최소치를 주는 1×d 혹은 d×1 의 벡터(CV_32FC1 or CV_64 FC1)</param>
            <param name="bounds_max">각 차원의 최대치를 주는 1×d 혹은 d×1 의 벡터(CV_32FC1 or CV_64 FC1)</param>
            <param name="result">출력행 인덱스(cvCreateFeatureTree에 인수로서 건네받는 행렬을 참조한다)의 1×m 혹은 m×1 의 벡터(CV_32 SC1)</param>
            <returns>구할 수 있던 벡터수</returns>
        </member>
        <member name="T:OpenCvSharp.CvSURFPoint">
            <summary>
            cvExtractSURF로 출력되는 키포인트
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSURFPoint.Pt">
            <summary>
            화상중의 특징점의 위치
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSURFPoint.Laplacian">
             <summary>
            -1, 0,+1.그 점에 있어서의 라플라시안의 부호.
             특징점의 비교를 고속화하기 위해서 이용된다
             (통상, 라플라시안의 부호가 다른 특징끼리는 일치하지 않는다)
             </summary>
        </member>
        <member name="F:OpenCvSharp.CvSURFPoint.Size">
            <summary>
            특징의 사이즈
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSURFPoint.Dir">
            <summary>
            특징의 방향：0~360도
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSURFPoint.Hessian">
            <summary>
            헷시안：Hesse 행렬의 행렬식
            (특징의 힘의 대체로의 추정에 이용된다.params.hessianThreshold 를 참조)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSURFPoint.#ctor(System.IntPtr)">
            <summary>
            CvSURFPoint* 초기화.
            </summary>
            <param name="ptr">IntPtr</param>
            <returns>CvSURFPoint*</returns>
        </member>
        <member name="M:OpenCvSharp.CvSURFPoint.FromPtr(System.IntPtr)">
            <summary>
            IntPtr로부터 CvSURFPoint로 변환해 돌려준다. 인수의 포인터의 실체가 CvSURFPoint*여야 한다.
            </summary>
            <param name="ptr">IntPtr</param>
            <returns>CvSURFPoint</returns>
        </member>
        <member name="T:OpenCvSharp.RotateEdgeFlag">
            <summary>
            cvSubdiv2DRotateEdge에 있어서의 엣지의 관계의 지정(입력된 엣지와 같은 quad-edge의 어느 엣지를 돌려주는지를 지정)
            </summary>
        </member>
        <member name="F:OpenCvSharp.RotateEdgeFlag.Input">
            <summary>
            입력의 엣지(e가 입력되었을 경우, 윗 그림의 e 자신) 
            [= 0]
            </summary>
        </member>
        <member name="F:OpenCvSharp.RotateEdgeFlag.Rotate">
            <summary>
            회전된 엣지(eRot)
            [= 1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.RotateEdgeFlag.Reverse">
            <summary>
            반전된 엣지(e의 반전(초록으로 표시))
            [= 2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.RotateEdgeFlag.ReverseRotate">
            <summary>
            반전과 회전된 엣지(eRot의 반전(초록으로 표시))
            [= 3] 
            </summary>
        </member>
        <member name="T:OpenCvSharp.MatchTemplateMethod">
            <summary>
            템플릿 매칭의 방법
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatchTemplateMethod.SqDiff">
            <summary>
            [CV_TM_SQDIFF]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatchTemplateMethod.SqDiffNormed">
            <summary>
            [CV_TM_SQDIFF_NORMED]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatchTemplateMethod.CCorr">
            <summary>
            [CV_TM_CCORR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatchTemplateMethod.CCorrNormed">
            <summary>
            [CV_TM_CCORR_NORMED]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatchTemplateMethod.CCoeff">
            <summary>
            [CV_TM_CCOEFF]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MatchTemplateMethod.CCoeffNormed">
            <summary>
            [CV_TM_CCOEFF_NORMED]
            </summary>
        </member>
        <member name="T:OpenCvSharp.HoughLinesMethod">
            <summary>
            cvHoughLines2로 이용하는, 허프 변환(직선 검출)의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.HoughLinesMethod.Standard">
            <summary>
            표준적 허프 변환.
            모든 선분은 2개의 부동 소수점치 (ρ, θ)(으)로 나타내진다.여기서ρ 는 점(0,0)으로부터 선분까지의 거리,θ 는 x축과 선분의 법선이 이루는 각도. 
            그 때문에, 행렬(작성되는 순서)은, CV_32FC2 타입이 된다.
            [CV_HOUGH_STANDARD]
            </summary>
        </member>
        <member name="F:OpenCvSharp.HoughLinesMethod.Probabilistic">
            <summary>
            확률적 허프 변환(화상에 긴 선이 적은 경우에 유효).
            모든 선을 돌려주는 것이 아니라, 선분을 돌려준다. 모든 선분은 시점과 종점에서 나타내져 행렬(작성되는 순서)은, CV_32SC4 타입이 된다.
            [CV_HOUGH_PROBABILISTIC]
            </summary>
        </member>
        <member name="F:OpenCvSharp.HoughLinesMethod.MultiScale">
            <summary>
            멀티 스케일형의 고전적 허프 변환. 선은 CV_HOUGH_STANDARD 와 같은 방법으로 encode 된다. 
            [CV_HOUGH_MULTI_SCALE]
            </summary>
        </member>
        <member name="T:OpenCvSharp.DistanceType">
            <summary>
            cvDistTransform로 지정하는 거리의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.DistanceType.User">
            <summary>
            User defined distance  [CV_DIST_USER]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DistanceType.L1">
            <summary>
            distance = |x1-x2| + |y1-y2|  [CV_DIST_L1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DistanceType.L2">
            <summary>
            the simple euclidean distance  [CV_DIST_L2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DistanceType.C">
            <summary>
            distance = max(|x1-x2|,|y1-y2|)  [CV_DIST_C]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DistanceType.L12">
            <summary>
            L1-L2 metric: distance = 2(sqrt(1+x*x/2) - 1))  [CV_DIST_L12]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DistanceType.Fair">
            <summary>
            distance = c^2(|x|/c-log(1+|x|/c)), c = 1.3998  [CV_DIST_FAIR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DistanceType.Welsch">
            <summary>
            distance = c^2/2(1-exp(-(x/c)^2)), c = 2.9846  [CV_DIST_WELSCH]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DistanceType.Huber">
            <summary>
            distance = |x|&lt;c ? x^2/2 : c(|x|-c/2), c=1.345  [CV_DIST_HUBER]
            </summary>
        </member>
        <member name="T:OpenCvSharp.DiagType">
            <summary>
            cvGetDiag 메소드에서, 어느 대각열을 취득할지 결정하는 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.DiagType.Main">
            <summary>
            메인의 대각열
            </summary>
        </member>
        <member name="F:OpenCvSharp.DiagType.Above">
            <summary>
            메인의 대각열의 하나상의 기울기열
            </summary>
        </member>
        <member name="F:OpenCvSharp.DiagType.Below">
            <summary>
            메인의 대각열의 하나하의 기울기열
            </summary>
        </member>
        <member name="T:OpenCvSharp.AdaptiveThresholdType">
            <summary>
            Adaptive thresholding algorithms
            </summary>
        </member>
        <member name="F:OpenCvSharp.AdaptiveThresholdType.MeanC">
            <summary>
            It is a mean of block_size × block_size pixel neighborhood, subtracted by param1.
            [CV_ADAPTIVE_THRESH_MEAN_C]
            </summary>
        </member>
        <member name="F:OpenCvSharp.AdaptiveThresholdType.GaussianC">
            <summary>
            it is a weighted sum (Gaussian) of block_size × block_size pixel neighborhood, subtracted by param1.
            [CV_ADAPTIVE_THRESH_GAUSSIAN_C]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvCmpFunc">
            <summary>
            cvSeqSort, cvSeqSearch등의 메소드로 지정하는, 비교 함수를 나타내는 Delegate.
            a가 b보다 작으면 false 값을, a와 b가 동일하면 0을, a가 b보다 크면 정의 값을 돌려준다.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns>a가 b보다 작으면 false 값을, a와 b가 동일하면 0을, a가 b보다 크면 정의 값을 돌려준다.</returns>
        </member>
        <member name="T:OpenCvSharp.CvCmpFunc`1">
            <summary>
            cvSeqSort, cvSeqSearch등의 메소드로 지정하는, 비교 함수를 나타내는 Delegate.
            a가 b보다 작으면 false를 a와 b가 동일하면 0을, a가 b보다 크면 정의 값을 돌려준다.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns>a가 b보다 작으면 false를, a와 b가 동일하면 0을, a가 b보다 크면 정의 값을 돌려준다.</returns>
        </member>
        <member name="T:OpenCvSharp.CvPOSITObject">
            <summary>
            오브젝트 구조체
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvPOSITObject.#ctor(OpenCvSharp.CvPoint3D32f[])">
            <summary>
            cvCreatePOSITObject로 초기화
            </summary>
            <param name="points">3 차원 오브젝트 모델상의 점데이터의 배열 </param>
        </member>
        <member name="M:OpenCvSharp.CvPOSITObject.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvPOSITObject.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvPOSITObject.POSIT(OpenCvSharp.CvPoint2D32f[],System.Double,OpenCvSharp.CvTermCriteria,System.Single[0:,0:]@,System.Single[]@)">
            <summary>
            POSIT 알고리즘의 실장
            </summary>
            <param name="image_points">오브젝트상의 점을 이차원 화상 평면상에 투영 해 얻을 수 있는 점군</param>
            <param name="focal_length">사용하는 카메라의 촛점거리</param>
            <param name="criteria">반복 POSIT 알고리즘의 종료 조건</param>
            <param name="rotation_matrix">회전 행렬</param>
            <param name="translation_vector">병진 벡터</param>
        </member>
        <member name="T:OpenCvSharp.CvMemStoragePos">
            <summary>
            메모리 스토레이지의 위치
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMemStoragePos.SizeOf">
            <summary>
            sizeof(CvMemStoragePos) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMemStoragePos._data">
            <summary>
            C++/CLI wrapper of native pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMemStoragePos.#ctor">
            <summary>
            메모리를 확보해 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMemStoragePos.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">struct CvMemStoragePos*</param>
        </member>
        <member name="P:OpenCvSharp.CvMemStoragePos.Top">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMemStoragePos.FreeSpace">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvHuMoments">
            <summary>
            Hu moments
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHuMoments.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHuMoments.#ctor(OpenCvSharp.CvMoments)">
            <summary>
            cvGetHuMoments에 의해 초기화
            </summary>
            <param name="moments">화상 모멘트 구조체에의 참조</param>
        </member>
        <member name="T:OpenCvSharp.CvConDensation">
            <summary>
            ConDenstation 상태
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvConDensation.SizeOf">
            <summary>
            sizeof(CvConDensation) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvConDensation._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvConDensation.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr">struct CvConDensation*</param>
        </member>
        <member name="M:OpenCvSharp.CvConDensation.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            ConDensation 필터 구조체의 파티션을 실시한다
            </summary>
            <param name="dynam_params">상태 벡터의 차원</param>
            <param name="measure_params">관측 벡터의 차원</param>
            <param name="sample_count">샘플수</param>
        </member>
        <member name="M:OpenCvSharp.CvConDensation.Dispose">
            <summary>
            ConDensation 필터 구조체를 해제한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvConDensation.GetFlSamples">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvConDensation.SetFlSamples(System.Single[0:,0:])">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.MP">
            <summary>
            관측 벡터의 차원
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.DP">
            <summary>
            상태 벡터의 차원
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.DynamMatr">
            <summary>
            선형 다이내믹스를 나타내는 행렬
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.State">
            <summary>
            상태 벡터
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.SamplesNum">
            <summary>
            샘플수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.FlSamples">
            <summary>
            샘플 벡터의 배열
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.FlNewSamples">
            <summary>
            샘플 벡터의 임시 배열
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.FlConfidence">
            <summary>
            각 샘플의 확실함
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.FlCumulative">
            <summary>
            확실함의 누적치
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.Temp">
            <summary>
            임시 벡터
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.RandomSample">
            <summary>
            샘플 세트를 갱신하기 위한 랜덤 벡터
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConDensation.RandS">
            <summary>
            랜덤 벡터를 생성하기 위한 구조체 배열
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSURFParams">
            <summary>
            SURF의 파라미터
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSURFParams.#ctor(System.Double,System.Boolean)">
            <summary>
            초기화
            </summary>
            <param name="hessianThreshold">keypoint.hessian 의 값이 쓰레스홀드보다 큰 특징만이 검출된다</param>
            <param name="extended">false : 기본적인 디스크립터(64 요소), true: 1：확장된 디스크립터(128 요소)</param>
        </member>
        <member name="M:OpenCvSharp.CvSURFParams.Clone">
            <summary>
            현재의 인스턴스의 카피인 새로운 오브젝트를 작성합니다.    
            </summary>
            <returns>이 인스턴스의 카피인 새로운 오브젝트.</returns>
        </member>
        <member name="P:OpenCvSharp.CvSURFParams.Extended">
            <summary>
            false : 기본적인 디스크립터(64 요소)
            true: 1：확장된 디스크립터(128 요소)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSURFParams.HessianThreshold">
            <summary>
            keypoint.hessian 의 값이 이 쓰레스홀드보다 큰 특징만이 검출된다.
            적절한 디폴트치는, 대체로 300~500 이다(화상의 국소적인 콘트라스트와 선명함의 평균에 의존한다).
            유저는, hessian 나, 그 외의 특징에 근거하고, 불필요한 특징점을 제거할 수 있다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSURFParams.NOctaves">
            <summary>
            특징 검출에 이용되는 옥타브수.
            옥타브가 하나 오를 때마다, 특징의 사이즈가  2배가 된다(디폴트는 3).
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSURFParams.NOctaveLayers">
            <summary>
            각 옥타브내에 존재하는 레이어수(디폴트는 4).
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSlice">
            <summary>
            시퀸스의 슬라이스
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSlice.SizeOf">
            <summary>
            sizeof(CvSlice)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSlice.WholeSeqEndIndex">
            <summary>
            시퀸스 전체를 나타내는 슬라이스의 슬라이스 길이를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSlice.StartIndex">
            <summary>
            슬라이스의 선두치
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSlice.EndIndex">
            <summary>
            슬라이스의 종단치
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSlice.WholeSeq">
            <summary>
            시퀸스 전체를 나타내는 슬라이스를 취득한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSlice.#ctor(System.Int32,System.Int32)">
            <summary>
            초기화
            </summary>
            <param name="start_index"></param>
            <param name="end_index"></param>
        </member>
        <member name="M:OpenCvSharp.CvSlice.SliceLength(OpenCvSharp.CvSeq)">
            <summary>
            시퀸스의 슬라이스 길이를 계산한다
            </summary>
            <param name="seq"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSlice.op_Equality(OpenCvSharp.CvSlice,OpenCvSharp.CvSlice)">
            <summary>
            == 연산자의 overload
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvSlice.op_Inequality(OpenCvSharp.CvSlice,OpenCvSharp.CvSlice)">
            <summary>
            != 연산자의 overload
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvSlice.Equals(OpenCvSharp.CvSlice)">
            <summary>
            지정한 CvSlice와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvSlice.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSlice.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSlice.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.LineType">
            <summary>
            선분의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.LineType.Link8">
            <summary>
            8 연결에 의한 선분
            </summary>
        </member>
        <member name="F:OpenCvSharp.LineType.Link4">
            <summary>
            4 연결에 의한 선분
            </summary>
        </member>
        <member name="F:OpenCvSharp.LineType.AntiAlias">
            <summary>
            안티알리아스 제거 된 선분 (CV_AA). 가우시안(Gaussian) 필터를 이용해 그려진다.
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSeqBlock">
            <summary>
            연속한 순서 블록
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSeqBlock.SizeOf">
            <summary>
            sizeof(CvSeqBlock)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSeqBlock._data">
            <summary>
            C++/CLI wrapper of data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqBlock.#ctor">
            <summary>
             메모리를 확보해 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqBlock.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr">CvSeqBlock*</param>
        </member>
        <member name="P:OpenCvSharp.CvSeqBlock.Prev">
            <summary>
            전의 순서 블록
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqBlock.Next">
            <summary>
            다음의 순서 블록
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqBlock.StartIndex">
            <summary>
            블록의 선두 요소의 인덱스
            sequence->first->start_index 
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqBlock.Count">
            <summary>
            블록내의 요소수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSeqBlock.Data">
            <summary>
            블록의 선두 요소에의 포인터
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvHaarClassifierCascade">
            <summary>
            단계 분류기의 캐스케이드 또는 트리
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvHaarClassifierCascade.SizeOf">
            <summary>
            sizeof(CvHaarClassifierCascade)를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvHaarClassifierCascade._data">
            <summary>
            C++/CLI wrapper of data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.#ctor(System.IntPtr)">
            <summary>
            포인터로 초기화
            </summary>
            <param name="ptr">struct CvHaarClassifierCascade*</param>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            포인터와 자동 해제의 참 거짓을 지정해 초기화
            </summary>
            <param name="ptr">struct CvHaarClassifierCascade*</param>
            <param name="isEnabledDispose">자동적으로 GC로 해제해도 좋은지 어떤지</param>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.FromFile(System.String)">
            <summary>
            파일로부터 Haar 분류기의 캐스케이드를 읽어 돌려준다 (cvLoad 상당).
            </summary>
            <param name="filename">읽어들이는 파일(xml/yaml)</param>
            <returns>CvHaarClassifierCascade</returns>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.FromDirectory(System.String,OpenCvSharp.CvSize)">
            <summary>
            파일 또는 OpenCV 내에 짜넣어진 만큼 류기 데이타베이스로부터, 학습된 캐스케이드 분류기를 읽어들인다 (cvLoadHaarClassifierCascade) 
            </summary>
            <param name="directory">학습된 캐스케이드 분류기의 기술을 포함한 디렉토리명. </param>
            <param name="orig_window_size">오브젝트의 오리지날 사이즈(캐스케이드 분류기는 이 사이즈에 맞추어 학습된다). 이것은 캐스케이드 분류기내에 보존되지 않기 때문에, 따로 지정할 필요가 있는 일에 주의. </param>
            <remarks>이 함수는 서포트되지 않는다. 현재는, 오브젝트 검출 분류기는 디렉토리는 아니고 XML/YAML 파일에 보존된다. 캐스케이드를 파일로부터 읽어들이기 위해서는, 함수 cvLoad 를 이용한다.</remarks>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.Dispose">
            <summary>
            Haar 분류기 캐스케이드를 해제한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.HaarDetectObjects(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 사각형 영역을 검출해, 그 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="image">이 화상중에서 오브젝트를 검출한다</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있는 경우에 그 사각형 열을 보존하는 메모리스토레이지</param>
            <returns>CvRect를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.HaarDetectObjects(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Double)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 사각형 영역을 검출해 그 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="image">이 화상중에서 오브젝트를 검출한다</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있는 경우에 그 사각형열을 보존하는 메모리스토레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 스케일링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <returns>CvRect를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.HaarDetectObjects(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Double,System.Int32)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 사각형 영역을 검출해 그 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="image">이 화상중에서 오브젝트를 검출한다</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있는 경우에 그 사각형 열을 보존하는 메모리스토레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 스케일링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <param name="min_neighbors">(지금부터 1 을 뺀 값이) 오브젝트를 구성하는 근방 사각형의 최소수가 된다. min_neighbors-1 보다 적은 구형 밖에 포함하지 않는 듯한 그룹은 모두 기각된다. 만약 min_neighbors 가 0 인 경우, 이 함수는 그룹을 하나도 생성하지 않고, 후보가 되는 구형을 모두 돌려준다.이것은 유저가 커스터마이즈 한 그룹화 처리를 적용하고 싶은 경우에 유용하다. </param>
            <returns>CvRect를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.HaarDetectObjects(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Double,System.Int32,OpenCvSharp.HaarDetectionType)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 사각형 영역을 검출해 그 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="image">이 화상중에서 오브젝트를 검출한다</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있는 경우에 그 사각형 열을 보존하는 메모리스토레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 스케일링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <param name="min_neighbors">(지금부터 1 을 뺀 값이) 오브젝트를 구성하는 근방 사각형의 최소수가 된다. min_neighbors-1 보다 적은 구형 밖에 포함하지 않는 듯한 그룹은 모두 기각된다. 만약 min_neighbors 가 0 인 경우, 이 함수는 그룹을 하나도 생성하지 않고, 후보가 되는 구형을 모두 돌려준다.이것은 유저가 커스터마이즈 한 그룹화 처리를 적용하고 싶은 경우에 유용하다. </param>
            <param name="flags">처리 모드</param>
            <returns>CvRect를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.HaarDetectObjects(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Double,System.Int32,OpenCvSharp.HaarDetectionType,OpenCvSharp.CvSize)">
            <summary>
            주어진 화상으로부터 오브젝트를 포함하는 사각형 영역을 검출해 그 영역을 사각형의 열로서 돌려준다.
            </summary>
            <param name="image">이 화상중에서 오브젝트를 검출한다</param>
            <param name="storage">오브젝트 후보의 사각형을 얻을 수 있었을 경우에, 그 구형열을 보존하는 메모리스토레이지</param>
            <param name="scale_factor">스캔마다 탐색 윈도우가 스케일링 될 때의 스케일 팩터. 예를 들면 이 값이 1.1 이라면, 윈도우가 10% 커진다</param>
            <param name="min_neighbors">(지금부터 1 을 뺀 값이) 오브젝트를 구성하는 근방 사각형의 최소수가 된다. min_neighbors-1 보다 적은 구형 밖에 포함하지 않는 듯한 그룹은 모두 기각된다. 만약 min_neighbors 가 0 인 경우, 이 함수는 그룹을 하나도 생성하지 않고, 후보가 되는 구형을 모두 돌려준다.이것은 유저가 커스터마이즈 한 그룹화 처리를 적용하고 싶은 경우에 유용하다. </param>
            <param name="flags">처리 모드</param>
            <param name="min_size">최소 윈도우사이즈. 디폴트에서는 분류기의 학습에 이용된 샘플의 사이즈가 설정된다(얼굴 검출의 경우는,~20×20).</param>
            <returns>CvRect를 요소로 하는 CvSeq</returns>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.Run(OpenCvSharp.CvPoint)">
            <summary>
            부스트 된 만큼 분류기의 캐스케이드를 주어진 화상 위치에서 실행한다 (cvRunHaarClassifierCascade 해당)
            </summary>
            <param name="pt">해석하는 영역의 좌상의 모퉁이</param>
            <returns>분석 대상의 영역이 모든 분류기 스테이지를 통과했을 경우(이것은 후보의 하나가 된다)는 true, 그렇지 않으면 false.</returns>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.Run(OpenCvSharp.CvPoint,System.Boolean)">
            <summary>
            부스트 된 만큼 분류기의 캐스케이드를 주어진 화상 위치에서 실행한다 (cvRunHaarClassifierCascade 상당)
            </summary>
            <param name="pt">해석하는 영역의 좌상의 모퉁이</param>
            <param name="start_stage">0으로부터 시작되는 인덱스로, 캐스케이드 스테이지를 어디에서 시작할까를 결정한다</param>
            <returns>분석 대상의 영역이 모든 분류기 스테이지를 통과했을 경우(이것은 후보의 하나가 된다)는 true, 그렇지 않으면 false.</returns>
        </member>
        <member name="M:OpenCvSharp.CvHaarClassifierCascade.SetImages(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Double)">
            <summary>
            화상을 숨은 분류기 캐스케이드에 할당한다 (cvSetImagesForHaarClassifierCascade 상당).
            </summary>
            <param name="sum">32 비트 정수 싱글 채널의 인테그랄 이미지.</param>
            <param name="sqsum">64비트 부동 소수점형의 싱글 채널 화상의 각 픽셀을 제곱 한 값에 대한 인테그랄 이미지.</param>
            <param name="tilted_sum">32 비트 정수형의 싱글 채널 화상을 45о기울인 인테그랄 이미지.</param>
            <param name="scale">캐스케이드의 윈도우 스케일</param>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifierCascade.Flags">
            <summary>
            플래그
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifierCascade.Count">
            <summary>
            단계수
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifierCascade.OrigWindowSize">
            <summary>
            오리지날의 오브젝트 사이즈(캐스케이드의 학습 대상)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifierCascade.RealWindowSize">
            <summary>
            현재의 오브젝트 사이즈
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifierCascade.Scale">
            <summary>
            현재의 스케일
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifierCascade.StageClassifier">
            <summary>
            단계 분류기의 배열
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHaarClassifierCascade.HidCascade">
            <summary>
            cvSetImagesForHaarClassifierCascade 에 의해서 생성되는 캐스케이드 숨겨진 최적 표현
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvFileNode">
            <summary>
            파일 스토리지 노드
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvFileNode.SizeOf">
            <summary>
            sizeof(CvFileNode) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvFileNode._data">
            <summary>
            C++/CLI wrapper of data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvFileNode.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr">CvFileNode*</param>
        </member>
        <member name="M:OpenCvSharp.CvFileNode.FromPtr(System.IntPtr)">
            <summary>
            포인터로부터 이 클래스의 인스턴스로 변환해 돌려준다
            </summary>
            <param name="ptr">struct CvFileNode*</param>
        </member>
        <member name="M:OpenCvSharp.CvFileNode.GetFileNodeName">
            <summary>
            파일 노드의 이름을 돌려준다.파일 노드가 이름을 가지지 않는지, node가 null의 경우에는 null를 돌려준다.
            </summary>
            <returns>파일 노드의 이름</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileNode.ReadInt">
            <summary>
            파일 노드로 표현된 정수치를 돌려준다.
            </summary>
            <returns>파일 노드로 표현된 정수치</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileNode.ReadInt(System.Int32)">
            <summary>
            파일 노드로 표현된 정수치를 돌려준다.
            </summary>
            <param name="default_value">node가 null의 경우의 반환값</param>
            <returns>파일 노드로 표현된 정수치</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileNode.ReadReal">
            <summary>
            파일 노드로 표현된 부동 소수점형의 값을 돌려준다.
            </summary>
            <returns>파일 노드로 표현된 부동 소수점형의 값</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileNode.ReadReal(System.Double)">
            <summary>
            파일 노드로 표현된 부동 소수점형의 값을 돌려준다.
            </summary>
            <param name="default_value">node가 null의 경우의 반환값</param>
            <returns>파일 노드로 표현된 부동 소수점형의 값</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileNode.ReadString">
            <summary>
            파일 노드로 표현된 문자열을 돌려준다.
            </summary>
            <returns>파일 노드로 표현된 문자열</returns>
        </member>
        <member name="M:OpenCvSharp.CvFileNode.ReadString(System.String)">
            <summary>
            파일 노드로 표현된 문자열을 돌려준다.
            </summary>
            <param name="default_value">node가 null의 경우의 반환값</param>
            <returns>파일 노드로 표현된 문자열</returns>
        </member>
        <member name="P:OpenCvSharp.CvFileNode.Tag">
            <summary>
            파일 노드의 형태를 취득한다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFileNode.DataF">
            <summary>
            부동 소수점의 스칼라치를 취득한다.
            CvFileNode->data->f
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFileNode.DataI">
            <summary>
            정수의 스칼라치를 취득한다.
            CvFileNode->data->i
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFileNode.DataStr">
            <summary>
            문자열을 취득한다.
            CvFileNode->data->str
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFileNode.DataSeq">
            <summary>
            시퀸스(정렬된 파일 노드의 콜렉션).
            CvFileNode->data->seq
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFileNode.DataMap">
            <summary>
            맵(이름이 지정 된 파일 노드의 콜렉션).
            CvFileNode->data->map
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFileNode.Name">
            <summary>
            파일 노드의 이름.
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvConvexityDefect">
            <summary>
            윤곽의 凸의 凹(오목한) 상태 결손을 나타내는 구조체
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvConvexityDefect.SizeOf">
            <summary>
            sizeof(CvConvexityDefect)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvConvexityDefect.#ctor(System.IntPtr,System.IntPtr,System.IntPtr,System.Single)">
            <summary>
            초기화
            </summary>
            <param name="start">윤곽의 오목한 상태 결손의 시점</param>
            <param name="end">윤곽의 오목한 상태 결손의 종점</param>
            <param name="depth_point">오목한 상태 결손중에서 철포로부터 가장 먼 점</param>
            <param name="depth">가장 먼 점과 凸간의 거리</param>
        </member>
        <member name="P:OpenCvSharp.CvConvexityDefect.Start">
            <summary>
            윤곽의 오목한 상태 결손의 시점
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConvexityDefect.End">
            <summary>
            윤곽의 오목한 상태 결손의 종점
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConvexityDefect.DepthPoint">
            <summary>
            오목한 상태 결손중에서 凸로부터 가장 먼 점
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConvexityDefect.Depth">
            <summary>
            가장 먼 점과 凸간의 거리
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvTreeNodeIterator">
            <summary>
            트리노드의 Iterator를 위한 클래스
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvTreeNodeIterator.node">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvTreeNodeIterator.level">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvTreeNodeIterator.max_level">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator.#ctor(System.IntPtr,System.Int32)">
            <summary>
            Construct by cvInitTreeNodeIterator
            </summary>
            <param name="first"></param>
            <param name="max_level"></param>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator.#ctor(OpenCvSharp.CvArr,System.Int32)">
            <summary>
            Construct by cvInitTreeNodeIterator
            </summary>
            <param name="first"></param>
            <param name="max_level"></param>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator.NextTreeNode">
            <summary>
            현재의 노드를 돌려주어, 이테레이타를 다음의 노드에 이동시킨다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator.NextTreeNode``1">
            <summary>
            現在のノードを返し，イテレータを次のノードに移動させる．
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator.PrevTreeNode">
            <summary>
            현재의 노드를 돌려주어, 이테레이타를 전의 노드에 이동시킨다．
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator.PrevTreeNode``1">
            <summary>
            현재의 노드를 돌려주어, 이테레이타를 전의 노드에 이동시킨다.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvTreeNodeIterator.Node">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTreeNodeIterator.Level">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvTreeNodeIterator.MaxLevel">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.PointerAccessor2D_Single">
            <summary>
            Single** 를 배열과 같이 액세스 할 수 있도록하기 위한 클래스
            </summary>
        </member>
        <member name="T:OpenCvSharp.IPointerAccessor2D`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:OpenCvSharp.IPointerAccessor2D`1.Get(System.Int32,System.Int32)">
            <summary>
            ptr[index]
            </summary>
            <param name="index1"></param>
            <param name="index2"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IPointerAccessor2D`1.Set(System.Int32,System.Int32,`0)">
            <summary>
            ptr[index] = value;
            </summary>
            <param name="index1"></param>
            <param name="index2"></param>
            <param name="value"></param>
        </member>
        <member name="P:OpenCvSharp.IPointerAccessor2D`1.Ptr">
            <summary>
            Data pointer
            </summary>
        </member>
        <member name="P:OpenCvSharp.IPointerAccessor2D`1.Item(System.Int32,System.Int32)">
            <summary>
            Indexer
            </summary>
            <param name="index1"></param>
            <param name="index2"></param>
            <returns></returns>
        </member>
        <member name="F:OpenCvSharp.PointerAccessor2D_Single.ptr">
            <summary>
            pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor2D_Single.#ctor(System.IntPtr)">
            <summary>
            IntPtr 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor2D_Single.#ctor(System.Single**)">
            <summary>
            Single** 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor2D_Single.Get(System.Int32,System.Int32)">
            <summary>
            지정한 인덱스의 배열의 요소를 취득한다
            </summary>
            <param name="index1">배열의 1 차원눈의 인덱스</param>
            <param name="index2">배열의 2 차원눈의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor2D_Single.Set(System.Int32,System.Int32,System.Single)">
            <summary>
            지정한 인덱스의 배열의 요소를 설정한다
            </summary>
            <param name="index1">배열의 1 차원의 인덱스</param>
            <param name="index2">배열의 2 차원의 인덱스</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor2D_Single.Ptr">
            <summary>
            내부에서 보관 유지하고 있는 포인터 (Single**)
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor2D_Single.Item(System.Int32,System.Int32)">
            <summary>
            배열의 요소에 액세스 하는 인덱스
            </summary>
            <param name="index1">배열의 1 차원의 인덱스</param>
            <param name="index2">배열의 2 차원의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="T:OpenCvSharp.ElementShape">
            <summary>
            구조 요소의 형상
            </summary>
        </member>
        <member name="F:OpenCvSharp.ElementShape.Rect">
            <summary>
            사각형 
            [CV_SHAPE_RECT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ElementShape.Cross">
            <summary>
            십자형 
            [CV_SHAPE_CROSS]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ElementShape.Ellipse">
            <summary>
            타원 
            [CV_SHAPE_ELLIPSE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ElementShape.Custom">
            <summary>
            유저 정의의 형상 
            [CV_SHAPE_CUSTOM]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CaptureType">
            <summary>
            CvCapture의 캡쳐 타입(카메라 or 파일)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureType.File">
            <summary>
            AVI 파일 캡쳐
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureType.Camera">
            <summary>
            카메라 캡쳐
            </summary>
        </member>
        <member name="T:OpenCvSharp.CaptureProperty">
            <summary>
            CvCapture의 프롭퍼티 ID
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.PosMsec">
            <summary>
            파일중의 현재의 위치(밀리 세컨드 단위), 혹은 비디오 캡쳐의 타임 스탬프 값
            [CV_CAP_PROP_POS_MSEC]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.PosFrames">
            <summary>
            다음에 디코드/캡쳐 되는 프레임의 인덱스 0에서  시작된다
            [CV_CAP_PROP_POS_FRAMES]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.PosAviRatio">
            <summary>
            비디오 파일내의 상대적인 위치 (0 - 파일의 시작점, 1 - 파일의 종점)
            [CV_CAP_PROP_POS_AVI_RATIO]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.FrameWidth">
            <summary>
            비디오 스트림의 프레임 폭
            [CV_CAP_PROP_FRAME_WIDTH]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.FrameHeight">
            <summary>
            비디오 스트림의 프레임 높이
            [CV_CAP_PROP_FRAME_HEIGHT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.Fps">
            <summary>
            frame rate
            [CV_CAP_PROP_FPS]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.FourCC">
            <summary>
            코덱을 나타내는 4 문자
            [CV_CAP_PROP_FOURCC]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.FrameCount">
            <summary>
            비디오 파일의 프레임수 
            [CV_CAP_PROP_FRAME_COUNT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.Format">
            <summary>
            Not implemented
            [CV_CAP_PROP_FORMAT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.Mode">
            <summary>
            Not implemented
            [CV_CAP_PROP_MODE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.Brightness">
            <summary>
            Not implemented
            [CV_CAP_PROP_BRIGHTNESS]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.Contrast">
            <summary>
            Not implemented
            [CV_CAP_PROP_CONTRAST]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.Saturation">
            <summary>
            Not implemented
            [CV_CAP_PROP_SATURATION]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.Hue">
            <summary>
            Not implemented
            [CV_CAP_PROP_HUE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.Gain">
            <summary>
            Not implemented
            [CV_CAP_PROP_GAIN]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CaptureProperty.ConvertRgb">
            <summary>
            Not implemented
            [CV_CAP_PROP_CONVERT_RGB]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSet`1">
            <summary>
            노드의 집합
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSet`1.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr">struct CvSet*</param>
        </member>
        <member name="M:OpenCvSharp.CvSet`1.#ctor(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            비어있는 세트를 생성한다
            </summary>
            <param name="set_flags">생성하는 세트 타입. </param>
            <param name="header_size">세트의 헤더 사이즈(sizeof(CvSet) 이상). </param>
            <param name="elem_size">세트의 요소 사이즈(CvSetElem 이상). </param>
            <param name="storage">세트를 위한 컨테이너. </param>
        </member>
        <member name="M:OpenCvSharp.CvSet`1.#ctor(OpenCvSharp.CvSet)">
            <summary>
            CvSet로부터 초기화
            </summary>
            <param name="set">CvSet</param>
        </member>
        <member name="M:OpenCvSharp.CvSet`1.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvQuadEdge2D">
            <summary>
            평면 세분할의 Quad-edge 구조체
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvQuadEdge2D.SizeOf">
            <summary>
            sizeof(CvQuadEdge2D)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvQuadEdge2D._data">
            <summary>
            C++/CLI wrapper of native structure's poitner
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvQuadEdge2D.#ctor(System.IntPtr)">
            <summary>
            포인터로부터 초기화
            </summary>
            <param name="ptr">CvQuadEdge2D*</param>
        </member>
        <member name="M:OpenCvSharp.CvQuadEdge2D.FromPtr(System.IntPtr)">
            <summary>
            포인터로부터 인스턴스를 생성해 돌려준다
            </summary>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvQuadEdge2D.op_Explicit(System.IntPtr)~OpenCvSharp.CvQuadEdge2D">
            <summary>
            포인터로부터의 명시적인 캐스트
            </summary>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvQuadEdge2D.FromSeqReader(OpenCvSharp.CvSeqReader)">
            <summary>
            CvSeqReader에서 CvQuadEdge2D 인스턴스를 읽어서 반환
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvQuadEdge2D.op_Explicit(OpenCvSharp.CvQuadEdge2D)~OpenCvSharp.CvSubdiv2DEdge">
            <summary>
            CvSubdiv2DEdge의 명시적 캐스트
            </summary>
            <param name="self"></param>
        </member>
        <member name="M:OpenCvSharp.CvQuadEdge2D.ToCvSubdiv2DEdge">
            <summary>
            CvSubdiv2DEdge에 변환해 돌려준다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvQuadEdge2D.Pt">
            <summary>
            CvSubdiv2DEdge pt[4];
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvQuadEdge2D.Next">
            <summary>
            CvSubdiv2DEdge next[4];
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvFont">
            <summary>
            폰트
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvFont.SizeOf">
            <summary>
            sizeof(CvFont)를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvFont._data">
            <summary>
            C++/CLI wrapper of data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvFont.#ctor(OpenCvSharp.FontFace,System.Double,System.Double)">
            <summary>
            문자 그리기 함수에 건네지는 폰트 구조체를 초기화한다
            </summary>
            <param name="font_face">폰트명의 식별자</param>
            <param name="hscale">폭의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 폭으로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 폭으로 표시된다.</param>
            <param name="vscale">높이의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 높이로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 높이로 표시된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvFont.#ctor(OpenCvSharp.FontFace,System.Double,System.Double,System.Double)">
            <summary>
            문자 그리기 함수에 건네지는 폰트 구조체를 초기화한다
            </summary>
            <param name="font_face">폰트명의 식별자</param>
            <param name="hscale">폭의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 폭으로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 폭으로 표시된다.</param>
            <param name="vscale">높이의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 높이로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 높이로 표시된다.</param>
            <param name="shear">수직선으로부터의 문자의 상대적인 각도.제로의 경우는 비 이탤릭 폰트로, 예를 들면, 1.0 f는 45о를 의미한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvFont.#ctor(OpenCvSharp.FontFace,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            문자 그리기 함수에 건네지는 폰트 구조체를 초기화한다
            </summary>
            <param name="font_face">폰트명의 식별자</param>
            <param name="hscale">폭의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 폭으로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 폭으로 표시된다.</param>
            <param name="vscale">높이의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 높이로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 높이로 표시된다.</param>
            <param name="shear">수직선으로부터의 문자의 상대적인 각도.제로의 경우는 비 이탤릭 폰트로, 예를 들면, 1.0 f는 45о를 의미한다.</param>
            <param name="thickness">문자의 굵기.</param>
        </member>
        <member name="M:OpenCvSharp.CvFont.#ctor(OpenCvSharp.FontFace,System.Double,System.Double,System.Double,System.Int32,OpenCvSharp.LineType)">
            <summary>
            문자 그리기 함수에 건네지는 폰트 구조체를 초기화한다
            </summary>
            <param name="font_face">폰트명의 식별자</param>
            <param name="hscale">폭의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 폭으로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 폭으로 표시된다.</param>
            <param name="vscale">높이의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 높이로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 높이로 표시된다.</param>
            <param name="shear">수직선으로부터의 문자의 상대적인 각도.제로의 경우는 비 이탤릭 폰트로, 예를 들면, 1.0 f는 45о를 의미한다.</param>
            <param name="thickness">문자의 굵기.</param>
            <param name="line_type">선의 종류.</param>
        </member>
        <member name="M:OpenCvSharp.CvFont.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvFont.GetTextSize(System.String)">
            <summary>
            문자열의 폭과 높이를 취득한다
            </summary>
            <param name="text_string">입력 문자열</param>
        </member>
        <member name="M:OpenCvSharp.CvFont.GetTextSize(System.String,System.Int32@)">
            <summary>
            문자열의 폭과 높이를 취득한다
            </summary>
            <param name="text_string">입력 문자열</param>
            <param name="baseline">문자의 최하점에서 본 baseline의 y좌표</param>
        </member>
        <member name="P:OpenCvSharp.CvFont.FontFace">
            <summary>
            폰트명의 식별자
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFont.Ascii">
            <summary>
            font data and metrics
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFont.Greek">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFont.Cyrillic">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFont.HScale">
            <summary>
            폭의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 폭으로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 폭으로 표시된다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFont.VScale">
            <summary>
            높이의 비율.1.0 f로 했을 경우, 문자는 각각의 폰트에 의존하는 원래의 높이로 표시된다. 0.5 f로 했을 경우, 문자는 원래의 반의 높이로 표시된다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFont.Shear">
            <summary>
            수직선으로부터의 문자의 상대적인 각도.제로의 경우는 비 이탤릭 폰트로, 예를 들면, 1.0 f는 45о를 의미한다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFont.Thickness">
            <summary>
            문자의 굵기.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFont.Dx">
            <summary>
            horizontal interval between letters
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvFont.LineType">
            <summary>
            선의 종류
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvStereoGCState">
            <summary>
            그래프컷에 근거하는 스테레오 매칭을 위한 구조체
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStereoGCState.SizeOf">
            <summary>
            sizeof(CvStereoGCState)를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStereoGCState._data">
            <summary>
            C++/CLI wrapper of native pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvStereoGCState.#ctor(System.Int32,System.Int32)">
            <summary>
            그래프컷 스테레오 매칭 알고리즘의 구조체를 작성한다 (cvCreateStereoGCState 상당)
            </summary>
            <param name="numberOfDisparities">시차수. 시차의 탐색 범위는 state->minDisparity  disparity  state  minDisparity + state->numberOfDisparities 가 된다.</param>
            <param name="maxIters">반복 계산의 최대수. 각 반복에 대하여 모든(혹은, 적당한 수의)α확장을 실시한다. 이 알고리즘은, 코스트 함수 전체를 감소시키는α확장이 발견되지 않았던 경우는, 거기서 종료한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvStereoGCState.#ctor(System.IntPtr)">
            <summary>
            포인터로 초기화
            </summary>
            <param name="ptr">CvStereoGCState*</param>
        </member>
        <member name="M:OpenCvSharp.CvStereoGCState.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvStereoGCState.FindStereoCorrespondence(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr)">
            <summary>
            그래프컷에 근거하는 알고리즘에 의해 시차 화상을 계산한다 (cvFindStereoCorrespondenceGC 상당)
            </summary>
            <param name="left">왼쪽 화상. 싱글 채널, 8비트.</param>
            <param name="right">오른쪽 화상.왼쪽 화상과 같은 사이즈, 같은 종류.</param>
            <param name="dispLeft">출력 옵션：싱글 채널, 16비트, 부호 있는 정수. 입력 화상과 같은 사이즈의 왼쪽 시차 화상. </param>
            <param name="dispRight">출력 옵션：싱글 채널, 16비트, 부호 있는 정수. 입력 화상과 같은 사이즈의 오른쪽 시차 화상. </param>
        </member>
        <member name="M:OpenCvSharp.CvStereoGCState.FindStereoCorrespondence(OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,OpenCvSharp.CvArr,System.Boolean)">
            <summary>
            그래프컷에 근거하는 알고리즘에 의해 시차 화상을 계산한다 (cvFindStereoCorrespondenceGC 상당)
            </summary>
            <param name="left">왼쪽 화상.싱글 채널, 8비트.</param>
            <param name="right">오른쪽 화상. 왼쪽 화상과 같은 사이즈 같은 종류.</param>
            <param name="dispLeft">출력 옵션：싱글 채널, 16비트, 부호 있는 정수.입력 화상과 같은 사이즈의 왼쪽 시차 화상. </param>
            <param name="dispRight">출력 옵션：싱글 채널, 16비트, 부호 있는 정수.입력 화상과 같은 사이즈의 오른쪽 시차 화상. </param>
            <param name="useDisparityGuess">이 파라미터가 0 이 아닌 경우, 미리 정의된 시차 화상을 이용해 계산이 시작된다. 즉, dispLeft 와 dispRight 가 모두, 타당한 시차 화상일 필요가 있다. 그렇지 않은 경우는, (모든 픽셀이 오크루존이 되고 있다) 비어있는 시차 화상으로부터 시작된다.</param>
        </member>
        <member name="P:OpenCvSharp.CvStereoGCState.Ithreshold">
            <summary>
            데이터의 쓰레스홀드(디폴트에서는 5)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoGCState.InteractionRadius">
            <summary>
            평활화항의 범위(디폴트에서는 1, Potts 모델)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoGCState.K">
            <summary>
            코스트 함수의 파라미터(통상은 입력 데이터로부터 적응적으로 구할 수 있다)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoGCState.Lambda">
            <summary>
            코스트 함수의 파라미터(통상은 입력 데이터로부터 적응적으로 구할 수 있다)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoGCState.Lambda1">
            <summary>
            코스트 함수의 파라미터(통상은, 입력 데이터로부터 적응적으로 구할 수 있다)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoGCState.Lambda2">
            <summary>
            코스트 함수의 파라미터(통상은, 입력 데이터로부터 적응적으로 구할 수 있다)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoGCState.OcclusionCost">
            <summary>
            오크루존의 코스트? (디폴트로 1000)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoGCState.MinDisparity">
            <summary>
            SAD(Sum of Absolute Difference)의 최소 시차 (=0)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoGCState.NumberOfDisparities">
            <summary>
            SAD(Sum of Absolute Difference)의 최대 시차-최소 시차
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStereoGCState.MaxIters">
            <summary>
            반복 계산의 회수
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvMouseCallback">
            <summary>
            cvSetMouseCallback 메소드로 지정하는, HighGUI 윈도우로 마우스 이벤트가 발생했을 때의 이벤트 처리를 실시하는 Delegate
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvLineIterator">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvLineIterator.SizeOf">
            <summary>
            sizeof(CvLineIterator) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvLineIterator._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvLineIterator.#ctor">
            <summary>
            구조체의 분의 메모리를 할당해 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvLineIterator.#ctor(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint)">
            <summary>
            라인이테레이타를 초기화한다
            </summary>
            <param name="image">대상 화상</param>
            <param name="pt1">선분의 첫째의 단 점</param>
            <param name="pt2">선분의 니 번째의 단 점</param>
            <returns></returns> 
        </member>
        <member name="M:OpenCvSharp.CvLineIterator.#ctor(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.PixelConnectivity)">
            <summary>
            라인이테레이타를 초기화한다
            </summary>
            <param name="image">대상 화상</param>
            <param name="pt1">선분의 첫째의 단 점</param>
            <param name="pt2">선분의 두번째의 단 점</param>
            <param name="connectivity">주사 한 선분의 접속성.4또는 8</param>
            <returns></returns> 
        </member>
        <member name="M:OpenCvSharp.CvLineIterator.#ctor(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.PixelConnectivity,System.Boolean)">
            <summary>
            라인이테레이타를 초기화한다
            </summary>
            <param name="image">대상 화상</param>
            <param name="pt1">선분의 첫째의 단 점</param>
            <param name="pt2">선분의 두번째의 단 점</param>
            <param name="connectivity">주사 한 선분의 접속성.4또는 8</param>
            <param name="left_to_right">pt1와 pt2 (와)는 관계없는 것으로 선분을 언제나 왼쪽에서 오른쪽으로 주사 하는(true)인가, pt1로부터 pt2에의 정해진 방향으로 주사 하는지(false)를 지정하는 플래그. </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvLineIterator.Initialize(OpenCvSharp.CvArr,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.PixelConnectivity,System.Boolean)">
            <summary>
            Initializes line iterator
            </summary>
            <param name="image">Image to sample the line from.  </param>
            <param name="pt1">First ending point of the line segment. </param>
            <param name="pt2">Second ending point of the line segment. </param>
            <param name="connectivity">The scanned line connectivity, 4 or 8. </param>
            <param name="left_to_right">The flag, indicating whether the line should be always scanned from the left-most point to the right-most out of pt1 and pt2 (left_to_right=true), or it is scanned in the specified order, from pt1 to pt2 (left_to_right=false). </param>
            <returns>The function cvInitLineIterator initializes the line iterator and returns the number of pixels between two end points. Both points must be inside the image. After the iterator has been initialized, all the points on the raster line that connects the two ending points may be retrieved by successive calls of NextLinePoint point. The points on the line are calculated one by one using 4-connected or 8-connected Bresenham algorithm.</returns> 
        </member>
        <member name="M:OpenCvSharp.CvLineIterator.Initialize">
            <summary>
            Initializes line iterator
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvLineIterator.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvLineIterator.NextLinePoint">
            <summary>
            CV_NEXT_LINE_POINT
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvLineIterator.CurrentPoint">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvLineIterator.GetEnumerator">
            <summary>
            Supports a simple iteration over a generic collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvLineIterator.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvLineIterator.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvLineIterator.Ptr">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvLineIterator.Err">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvLineIterator.PlusDelta">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvLineIterator.MinusDelta">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvLineIterator.PlusStep">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvLineIterator.MinusStep">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvStatus">
            <summary>
            Error status
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsOk">
            <summary>
            everithing is ok [CV_StsOk]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsBackTrace">
            <summary>
            pseudo error for back trace [CV_StsBackTrace]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsError">
            <summary>
            unknown /unspecified error [CV_StsError]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsInternal">
            <summary>
            internal error (bad state)  [CV_StsInternal]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsNoMem">
            <summary>
            insufficient memory [CV_StsNoMem]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsBadArg">
            <summary>
            function arg/param is bad [CV_StsBadArg]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsBadFunc">
            <summary>
            unsupported function [CV_StsBadFunc]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsNoConv">
            <summary>
            iter. didn't converge [CV_StsNoConv]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsAutoTrace">
            <summary>
            tracing [CV_StsAutoTrace]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.HeaderIsNull">
            <summary>
            image header is NULL [CV_HeaderIsNull]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadImageSize">
            <summary>
            image size is invalid [CV_BadImageSize]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadOffset">
            <summary>
            offset is invalid [CV_BadOffset]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadDataPtr">
            <summary>
            [CV_BadOffset]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadStep">
            <summary>
            [CV_BadStep]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadModelOrChSeq">
            <summary>
            [CV_BadModelOrChSeq]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadNumChannels">
            <summary>
            [CV_BadNumChannels]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadNumChannel1U">
            <summary>
            [CV_BadNumChannel1U]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadDepth">
            <summary>
            [CV_BadDepth]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadAlphaChannel">
            <summary>
            [CV_BadAlphaChannel]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadOrder">
            <summary>
            [CV_BadOrder]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadOrigin">
            <summary>
            [CV_BadOrigin]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadAlign">
            <summary>
            [CV_BadAlign]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadCallBack">
            <summary>
            [CV_BadCallBack]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadTileSize">
            <summary>
            [CV_BadTileSize]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadCOI">
            <summary>
            [CV_BadCOI]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.BadROISize">
            <summary>
            [CV_BadROISize]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.MaskIsTiled">
            <summary>
            [CV_MaskIsTiled]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsNullPtr">
            <summary>
            null pointer [CV_StsNullPtr]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsVecLengthErr">
            <summary>
            incorrect vector length [CV_StsVecLengthErr]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsFilterStructContentErr">
            <summary>
            incorr. filter structure content [CV_StsFilterStructContentErr]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsKernelStructContentErr">
            <summary>
            incorr. transform kernel content [CV_StsKernelStructContentErr]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsFilterOffsetErr">
            <summary>
            incorrect filter ofset value [CV_StsFilterOffsetErr]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsBadSize">
            <summary>
            the input/output structure size is incorrect [CV_StsBadSize]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsDivByZero">
            <summary>
            division by zero [CV_StsDivByZero]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsInplaceNotSupported">
            <summary>
            in-place operation is not supported [CV_StsInplaceNotSupported]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsObjectNotFound">
            <summary>
            request can't be completed [CV_StsObjectNotFound]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsUnmatchedFormats">
            <summary>
            formats of input/output arrays differ [CV_StsUnmatchedFormats]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsBadFlag">
            <summary>
            flag is wrong or not supported [CV_StsBadFlag]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsBadPoint">
            <summary>
            bad CvPoint [CV_StsBadPoint]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsBadMask">
            <summary>
            bad format of mask (neither 8uC1 nor 8sC1) [CV_StsBadMask]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsUnmatchedSizes">
            <summary>
            sizes of input/output structures do not match [CV_StsUnmatchedSizes]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsUnsupportedFormat">
            <summary>
            the data format/type is not supported by the function [CV_StsUnsupportedFormat]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsOutOfRange">
            <summary>
            some of parameters are out of range [CV_StsOutOfRange]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsParseError">
            <summary>
            invalid syntax/structure of the parsed file [CV_StsParseError]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsNotImplemented">
            <summary>
            the requested function/feature is not implemented [CV_StsNotImplemented]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStatus.StsBadMemBlock">
            <summary>
            an allocated block has been corrupted [CV_StsBadMemBlock]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvCloneFunc">
            <summary>
            
            </summary>
            <param name="struct_ptr"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.PointerAccessor1D_Double">
            <summary>
            Double* 를 배열과 같이 액세스 할 수 있도록 하기 위한 클래스
            </summary>
        </member>
        <member name="F:OpenCvSharp.PointerAccessor1D_Double.ptr">
            <summary>
            Pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Double.#ctor(System.IntPtr)">
            <summary>
            IntPtr 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Double.#ctor(System.Double*)">
            <summary>
            Double* 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Double.Get(System.Int32)">
            <summary>
            지정한 인덱스의 배열의 요소를 취득한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Double.Set(System.Int32,System.Double)">
            <summary>
            지정한 인덱스의 배열의 요소를 설정한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D_Double.Ptr">
            <summary>
            부에서 보관 유지하고 있는 포인터 (Double*)
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D_Double.Item(System.Int32)">
            <summary>
            배열의 요소에 액세스 하는 인덱스
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="T:OpenCvSharp.CvSize">
            <summary>
            사각형 픽셀의 정확한 사이즈
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSize.SizeOf">
            <summary>
            sizeof(CvSize)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSize.Width">
            <summary>
            사각형 폭
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSize.Height">
            <summary>
            사각형 높이
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSize.#ctor(System.Int32,System.Int32)">
            <summary>
            초기화 
            </summary>
            <param name="width">사각형 폭</param>
            <param name="height">사각형 높이</param>
        </member>
        <member name="M:OpenCvSharp.CvSize.op_Implicit(OpenCvSharp.CvSize)~System.Drawing.Size">
            <summary>
            System.Drawing.Size의 묵시적 변환
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSize.op_Implicit(System.Drawing.Size)~OpenCvSharp.CvSize">
            <summary>
            System.Drawing.Size의 명시적 변환
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSize.Equals(OpenCvSharp.CvSize)">
            <summary>
            지정한 CvSize의 좌표와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvSize.op_Equality(OpenCvSharp.CvSize,OpenCvSharp.CvSize)">
            <summary>
            == 연산자의 overload.x,y좌표치가 동일하면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvSize.op_Inequality(OpenCvSharp.CvSize,OpenCvSharp.CvSize)">
            <summary>
            != 연산자의 overload.x,y좌표치가 동일하지 않으면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvSize.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSize.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSize.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.CvRect">
            <summary>
            사각형의 오프셋과 사이즈
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvRect.SizeOf">
            <summary>
            sizeof(CvRect)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvRect.X">
            <summary>
            x좌표
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvRect.Y">
            <summary>
            y좌표
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvRect.Width">
            <summary>
            사각형의 폭
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvRect.Height">
            <summary>
            사각형의 높이
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvRect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            초기화
            </summary>
            <param name="x">x좌표</param>
            <param name="y">y좌표</param>
            <param name="width">사각형의 폭</param>
            <param name="height">사각형의 높이</param>
        </member>
        <member name="M:OpenCvSharp.CvRect.#ctor(OpenCvSharp.CvPoint,OpenCvSharp.CvSize)">
            <summary>
            초기화 
            </summary>
            <param name="point">좌상의 정점의 좌표</param>
            <param name="size">사각형의 크기</param>
        </member>
        <member name="M:OpenCvSharp.CvRect.op_Implicit(System.Drawing.Rectangle)~OpenCvSharp.CvRect">
            <summary>
            System.Drawing.Rectangle의 묵시적 캐스트
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvRect.op_Implicit(OpenCvSharp.CvRect)~System.Drawing.Rectangle">
            <summary>
            System.Drawing.Rectangle의 묵시적 캐스트
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvRect.Equals(OpenCvSharp.CvRect)">
            <summary>
            지정한 CvRect의 좌표와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvRect.op_Equality(OpenCvSharp.CvRect,OpenCvSharp.CvRect)">
            <summary>
            == 연산자의 overload.x,y좌표치가 동일하면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvRect.op_Inequality(OpenCvSharp.CvRect,OpenCvSharp.CvRect)">
            <summary>
            != 연산자의 overload.x,y좌표치가 동일하지 않으면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvRect.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvRect.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvRect.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="P:OpenCvSharp.CvRect.Location">
            <summary>
            사각형의 좌상 정점의 위치 [CvPoint(X, Y)]
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvRect.Size">
            <summary>
            사각형의 크기 [CvSize(Width, Height)]
            </summary>
        </member>
        <member name="T:OpenCvSharp.MouseEvent">
            <summary>
            마우스 이벤트
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.MouseMove">
            <summary>
            [CV_EVENT_MOUSEMOVE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.LButtonDown">
            <summary>
            [CV_EVENT_LBUTTONDOWN]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.RButtonDown">
            <summary>
            [CV_EVENT_RBUTTONDOWN]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.MButtonDown">
            <summary>
            [CV_EVENT_MBUTTONDOWN]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.LButtonUp">
            <summary>
            [CV_EVENT_LBUTTONUP]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.RButtonUp">
            <summary>
            [CV_EVENT_RBUTTONUP]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.MButtonUp">
            <summary>
            [CV_EVENT_MBUTTONUP]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.LButtonDoubleClick">
            <summary>
            [CV_EVENT_LBUTTONDBLCLK]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.RButtonDoubleClick">
            <summary>
            [CV_EVENT_RBUTTONDBLCLK]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.MButtonDoubleClick">
            <summary>
            [CV_EVENT_MBUTTONDBLCLK]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.FlagLButton">
            <summary>
            [CV_EVENT_FLAG_LBUTTON]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.FlagRButton">
            <summary>
            [CV_EVENT_FLAG_RBUTTON]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.FlagMButton">
            <summary>
            [CV_EVENT_FLAG_MBUTTON]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.FlagCtrlKey">
            <summary>
            [CV_EVENT_FLAG_CTRLKEY]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.FlagShiftKey">
            <summary>
            [CV_EVENT_FLAG_SHIFTKEY]
            </summary>
        </member>
        <member name="F:OpenCvSharp.MouseEvent.FlagAltKey">
            <summary>
            [CV_EVENT_FLAG_ALTKEY]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvColor">
            <summary>
            색을 나타내는 구조체.
            OpenCV의 CvScalar나, System.Drawing.Color와의 암묵의 변환이 정의되고 있다.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvColor.R">
            <summary>
            빨강
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvColor.G">
            <summary>
            초록
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvColor.B">
            <summary>
            파랑
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            초기화
            </summary>
            <param name="r">빨강</param>
            <param name="g">초록</param>
            <param name="b">파랑</param>
        </member>
        <member name="M:OpenCvSharp.CvColor.Random">
            <summary>
            랜덤인 색을 생성해 돌려준다
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvColor.op_Implicit(OpenCvSharp.CvColor)~OpenCvSharp.CvScalar">
            <summary>
            CvColor로부터 CvScalar 클래스로 변환하는 묵시적 캐스트 
            </summary>
            <param name="self"></param>
            <returns>CvScalar 구조체</returns>
        </member>
        <member name="M:OpenCvSharp.CvColor.op_Implicit(OpenCvSharp.CvScalar)~OpenCvSharp.CvColor">
            <summary>
            CvScalar 클래스로부터 CvColor로 변환하는 묵시적 캐스트 
            </summary>
            <param name="s"></param>
            <returns>CvColor</returns>
        </member>
        <member name="M:OpenCvSharp.CvColor.op_Implicit(OpenCvSharp.CvColor)~System.Drawing.Color">
            <summary>
            CvColor로부터 System.Drawing.Color로 변환하는 묵시적 캐스트 
            </summary>
            <param name="self"></param>
            <returns>System.Drawing.Color</returns>
        </member>
        <member name="M:OpenCvSharp.CvColor.op_Implicit(System.Drawing.Color)~OpenCvSharp.CvColor">
            <summary>
            System.Drawing.Color로부터 CvColor로 변환하는 묵시적 캐스트
            </summary>
            <param name="c"></param>
            <returns>CvColor</returns>
        </member>
        <member name="M:OpenCvSharp.CvColor.op_Equality(OpenCvSharp.CvColor,OpenCvSharp.CvColor)">
            <summary>
            == 연산자의 overload.RGB 성분이 동일하면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvColor.op_Inequality(OpenCvSharp.CvColor,OpenCvSharp.CvColor)">
            <summary>
            != 연산자의 overload
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvColor.Equals(OpenCvSharp.CvColor)">
            <summary>
            지정한 CvColor와 RGB치가 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvColor.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvColor.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvColor.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="P:OpenCvSharp.CvColor.Black">
            <summary>
            검정을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.White">
            <summary>
            흰색을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Gray">
            <summary>
            그레이를 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Pink">
            <summary>
            핑크를 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Red">
            <summary>
            빨강을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Magenta">
            <summary>
            진홍색을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.LightGreen">
            <summary>
            밝은 초록을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Green">
            <summary>
            초록을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.DarkGreen">
            <summary>
            진한 초록을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Cyan">
            <summary>
            시얀을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Blue">
            <summary>
            파랑을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Navy">
            <summary>
            네이비를 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Yellow">
            <summary>
            황색을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Orange">
            <summary>
            오렌지를 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Violet">
            <summary>
            보라색을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvColor.Brown">
            <summary>
            갈색을 나타내는 색정수를 취득한다
            </summary>
        </member>
        <member name="T:OpenCvSharp.Pointer`1">
            <summary>
            구조체의 포인터 (T*) 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:OpenCvSharp.Pointer`1.address">
            <summary>
            IntPtr
            </summary>
        </member>
        <member name="F:OpenCvSharp.Pointer`1.Zero">
            <summary>
            Null pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.Pointer`1.#ctor(System.IntPtr)">
            <summary>
            초기화
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:OpenCvSharp.Pointer`1.op_Implicit(OpenCvSharp.Pointer{`0})~System.IntPtr">
            <summary>
            IntPtr에의 묵시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.Pointer`1.op_Explicit(OpenCvSharp.Pointer{`0})~`0">
            <summary>
            T의 명시적인 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.Pointer`1.Address">
            <summary>
            주소
            </summary>
        </member>
        <member name="P:OpenCvSharp.Pointer`1.Entity">
            <summary>
            포인터의 실체 (*T)
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvNextEdgeType">
            <summary>
            cvSubdiv2DGetEdge의 반환값으로 하는 엣지의 조건
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvNextEdgeType.NextAroundOrg">
            <summary>
            입력된 엣지의 시점의 근처에 있는 다음의 엣지(e가 입력 때, 윗 그림의 eOnext)
            [CV_NEXT_AROUND_ORG]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvNextEdgeType.NextAroundDst">
            <summary>
            입력된 엣지의 종점의 근처에 있는 다음의 엣지(eDnext) 
            [CV_NEXT_AROUND_DST]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvNextEdgeType.PrevAroundOrg">
            <summary>
            입력된 엣지의 시점의 근처에 있는 하나전의 엣지(eRnext 의 반전)
            [CV_PREV_AROUND_ORG]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvNextEdgeType.PrevAroundDst">
            <summary>
            입력된 엣지의 종점의 근처에 있는 하나전의 엣지(eLnext 의 반전)
            [CV_PREV_AROUND_DST]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvNextEdgeType.NextAroundLeft">
            <summary>
            입력된 엣지를 포함한 좌측면의 다음의 엣지 (eLnext)
            [CV_NEXT_AROUND_LEFT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvNextEdgeType.NextAroundRight">
            <summary>
            입력된 엣지를 포함한 우측면의 다음의 엣지(eRnext) 
            [CV_NEXT_AROUND_RIGHT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvNextEdgeType.PrevAroundLeft">
            <summary>
            입력된 엣지를 포함한 좌측면의 하나전의 엣지(eOnext 의 반전)
            [CV_PREV_AROUND_LEFT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvNextEdgeType.PrevAroundRight">
            <summary>
            입력된 엣지를 포함한 우측면의 하나전의 엣지(eDnext 의 반전)
            [CV_PREV_AROUND_RIGHT]
            </summary>
        </member>
        <member name="T:OpenCvSharp.SmoothType">
            <summary>
            평활화의 방법
            </summary>
        </member>
        <member name="F:OpenCvSharp.SmoothType.BlurNoScale">
            <summary>
            스캐일링 없는 단순 평활화. 픽셀의 param1*param2 인접의 총화.[CV_BLUR_NO_SCALE]
            [CV_BLUR_NO_SCALE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SmoothType.Blur">
            <summary>
            단순 평활화 픽셀의 param1*param2 인접의 총화를 계산한 후,1/(param1*param2)에 의해서 스캐일링 한다.[CV_BLUR]
            [CV_BLUR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SmoothType.Gaussian">
            <summary>
            가우시안 평활화. 화상과 사이즈 param1*param2의 가우시안 커넬을 보관.[CV_GAUSSIAN]
            [CV_GAUSSIAN]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SmoothType.Median">
            <summary>
            중앙치 평활화. param1*param1 인접한 중앙치의 취득.[CV_MEDIAN]
            [CV_MEDIAN]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SmoothType.Bilateral">
            <summary>
            엣지 보관, 유지, 평활화 필터. 색(휘도치)에 대해 sigma=param1와 영역(거리)에 도달해 sigma=param2를 가지는3*3의 쌍방 필터를 적용한다.[CV_BILATERAL]
            [CV_BILATERAL]
            </summary>
        </member>
        <member name="T:OpenCvSharp.SeqType">
            <summary>
            CvSeq의 다양한 특성. EltypeXXX | KindXXX와 같이 지정한다.
            상위 16비트에 개개의 동적 특성을 가진 시퀸스에 관한 외의 잡다한 정보를 가진다.
            하위 CV_SEQ_ELTYPE_BITS 비트는 요소 타입의 ID를 나타낸다．
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.Zero">
            <summary>
            특정의 시퀸스 타입을 인수로 취하는 함수에 전혀 건네받지 않는 경우는 이 값을 지정해도 상관없다
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypePoint">
            <summary>
            (x,y) [CV_SEQ_ELTYPE_POINT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeCode">
            <summary>
            푸리만코드: 0..7 [CV_SEQ_ELTYPE_CODE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeGeneric">
            <summary>
            일반적인 시퀸스 요소 타입 [CV_SEQ_ELTYPE_GENERIC]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypePtr">
            <summary>
            =6 [CV_SEQ_ELTYPE_PTR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypePPoint">
            <summary>
            &amp;elem: 다른 시퀸스 요소에의 포인터 [CV_SEQ_ELTYPE_PPOINT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeIndex">
            <summary>
            #elem: 다른 시퀸스 요소의 인덱스 [CV_SEQ_ELTYPE_INDEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeGraphEdge">
            <summary>
            &amp;next_o, &amp;next_d, &amp;vtx_o, &amp;vtx_d [CV_SEQ_ELTYPE_GRAPH_EDGE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeGraphVertex">
            <summary>
            선두의 엣지, &amp;(x,y) [CV_SEQ_ELTYPE_GRAPH_VERTEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeTrianAtr">
            <summary>
            2분목의 정점(노드) [CV_SEQ_ELTYPE_TRIAN_ATR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeConnectedComp">
            <summary>
            연결 성분 [CV_SEQ_ELTYPE_CONNECTED_COMP]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypePoint3D">
            <summary>
            (x,y,z) [CV_SEQ_ELTYPE_POINT3D]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeU8C1">
            <summary>
            부호 없는 8비트 정수 1 채널 [CV_8UC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeU8C2">
            <summary>
            부호 없는 8비트 정수 2 채널 [CV_8UC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeU8C3">
            <summary>
            부호 없는 8비트 정수 3 채널 [CV_8UC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeU8C4">
            <summary>
            부호 없는 8비트 정수 4 채널 [CV_8UC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS8C1">
            <summary>
            부호 있는 8비트 정수 1 채널 [CV_8SC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS8C2">
            <summary>
            부호 있는 8비트 정수 2 채널 [CV_8SC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS8C3">
            <summary>
            부호 있는 8비트 정수 3 채널 [CV_8SC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS8C4">
            <summary>
            부호 있는 8비트 정수 4 채널 [CV_8SC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeU16C1">
            <summary>
            부호 없는 16비트 정수 1 채널 [CV_16UC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeU16C2">
            <summary>
            부호 없는 16비트 정수 2 채널 [CV_16UC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeU16C3">
            <summary>
            부호 없는 16비트 정수 3 채널 [CV_16UC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeU16C4">
            <summary>
            부호 없는 16비트 정수 4 채널 [CV_16UC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS16C1">
            <summary>
            부호 있는 16비트 정수 1 채널 [CV_16SC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS16C2">
            <summary>
            부호 있는 16비트 정수 2 채널 [CV_16SC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS16C3">
            <summary>
            부호 있는 16비트 정수 3 채널 [CV_16SC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS16C4">
            <summary>
            부호 있는 16비트 정수 4 채널 [CV_16SC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS32C1">
            <summary>
            부호 있는 32비트 정수 1 채널 [CV_32SC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS32C2">
            <summary>
            부호 있는 32비트 정수 2 채널 [CV_32SC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS32C3">
            <summary>
            부호 있는 32비트 정수 3 채널 [CV_32SC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeS32C4">
            <summary>
            부호 있는 32비트 정수 4 채널 [CV_32SC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeF32C1">
            <summary>
            32비트 부동 소수점수(실수) 1 채널 [CV_32FC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeF32C2">
            <summary>
            32비트 부동 소수점수(실수) 2 채널 [CV_32FC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeF32C3">
            <summary>
            32비트 부동 소수점수(실수) 3 채널 [CV_32FC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeF32C4">
            <summary>
            32비트 부동 소수점수(실수) 4 채널 [CV_32FC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeF64C1">
            <summary>
            64비트 부동 소수점수(실수) 1 채널 [CV_64FC1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeF64C2">
            <summary>
            64비트 부동 소수점수(실수) 2 채널 [CV_64FC2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeF64C3">
            <summary>
            64비트 부동 소수점수(실수) 3 채널 [CV_64FC3]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.EltypeF64C4">
            <summary>
            64비트 부동 소수점수(실수) 4 채널 [CV_64FC4]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.KindGeneric">
            <summary>
            [CV_SEQ_KIND_GENERIC]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.KindCurve">
            <summary>
            [CV_SEQ_KIND_GENERIC]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.KindBinaryTree">
            <summary>
            [CV_SEQ_KIND_BIN_TREE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.KindGraph">
            <summary>
            [CV_SEQ_KIND_GRAPH]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.KindSubdiv2D">
            <summary>
            [CV_SEQ_KIND_SUBDIV2D]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.FlagClosed">
            <summary>
            flags for curves [CV_SEQ_FLAG_CLOSED]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.FlagSimple">
            <summary>
            flags for curves [CV_SEQ_FLAG_SIMPLE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.FlagConvex">
            <summary>
            flags for curves [CV_SEQ_FLAG_CONVEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.FlagHole">
            <summary>
            flags for curves [CV_SEQ_FLAG_HOLE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.Oriented">
            <summary>
            flags for graphs [CV_GRAPH_FLAG_ORIENTED]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.Graph">
            <summary>
            flags for graphs [CV_GRAPH_FLAG_ORIENTED]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.OrientedGraph">
            <summary>
            flags for graphs [CV_GRAPH_FLAG_ORIENTED]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.PointSet">
            <summary>
            point sets [CV_SEQ_POINT_SET]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.Point3DSet">
            <summary>
            point sets [CV_SEQ_POINT3D_SET]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.PolyLine">
            <summary>
            point sets [CV_SEQ_POLYLINE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.Polygon">
            <summary>
            point sets [CV_SEQ_POLYGON]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.Contour">
            <summary>
            point sets [CV_SEQ_CONTOUR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.SimplePolygon">
            <summary>
            point sets [CV_SEQ_SIMPLE_POLYGON]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.Chain">
            <summary>
            chain-coded curves [CV_SEQ_CHAIN]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.ChainContour">
            <summary>
            chain-coded curves [CV_SEQ_CHAIN_CONTOUR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.PolygonTree">
            <summary>
            binary tree for the contour [CV_SEQ_POLYGON_TREE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.ConnextedComp">
            <summary>
            sequence of the connected components [CV_SEQ_CONNECTED_COMP]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SeqType.Index">
             <summary>
            sequence of the integer numbers [CV_SEQ_INDEX]
             </summary>
        </member>
        <member name="T:OpenCvSharp.InpaintMethod">
            <summary>
            cvInpaint의 복원 방법
            </summary>
        </member>
        <member name="F:OpenCvSharp.InpaintMethod.NS">
            <summary>
            네비어 stokes(Navier-Stokes) 베이스 알고리즘 [CV_INPAINT_NS]
            </summary>
        </member>
        <member name="F:OpenCvSharp.InpaintMethod.Telea">
            <summary>
            Alexandru Telea의 알고리즘 [CV_INPAINT_TELEA]
            </summary>
        </member>
        <member name="T:OpenCvSharp.DistributionType">
            <summary>
            cvRandArr 메소드등으로 이용하는 분포의 타입
            </summary>
        </member>
        <member name="F:OpenCvSharp.DistributionType.Uniform">
            <summary>
            단순(한가지) 모양 분포 
            [CV_RAND_UNI]
            </summary>
        </member>
        <member name="F:OpenCvSharp.DistributionType.Normal">
            <summary>
            정규 분포(Gauss 분포) 
            [CV_RAND_NORMAL]
            </summary>
        </member>
        <member name="T:OpenCvSharp.BitmapConverter">
            <summary>
            System.Drawing.Bitmap와 IplImage의 상호 변환 메소드를 제공하는 클래스
            </summary>
        </member>
        <member name="M:OpenCvSharp.BitmapConverter.ToIplImage(System.Drawing.Bitmap)">
            <summary>
            System.Drawing.Bitmap로부터 OpenCV의 IplImage에 변환해 돌려준다.
            </summary>
            <param name="src">변환하는 System.Drawing.Bitmap</param>
            <returns>OpenCvSharp로 취급할 수 있는 IplImage</returns>
        </member>
        <member name="M:OpenCvSharp.BitmapConverter.ToIplImage(System.Drawing.Bitmap,OpenCvSharp.IplImage)">
            <summary>
            System.Drawing.Bitmap로부터 OpenCV의 IplImage에 변환해 돌려준다.
            </summary>
            <param name="src">변환하는 System.Drawing.Bitmap</param>
            <param name="dst">IplImage</param>
        </member>
        <member name="M:OpenCvSharp.BitmapConverter.ToBitmap(OpenCvSharp.IplImage)">
            <summary>
            OpenCV의 IplImage를 System.Drawing.Bitmap로 변환한다
            </summary>
            <param name="src">변환하는 IplImage</param>
            <returns>System.Drawing.Bitmap</returns>
        </member>
        <member name="M:OpenCvSharp.BitmapConverter.ToBitmap(OpenCvSharp.IplImage,System.Drawing.Imaging.PixelFormat)">
            <summary>
            OpenCV의 IplImage를 System.Drawing.Bitmap로 변환한다
            </summary>
            <param name="src">변환하는 IplImage</param>
            <param name="pf">픽셀 심도</param>
            <returns>System.Drawing.Bitmap</returns>
        </member>
        <member name="M:OpenCvSharp.BitmapConverter.ToBitmap(OpenCvSharp.IplImage,System.Drawing.Bitmap)">
            <summary>
            OpenCV의 IplImage를 지정한 출력 끝에 System.Drawing.Bitmap으로서 변환한다
            </summary>
            <param name="src">변환하는 IplImage</param>
            <param name="dst">출력처의 System.Drawing.Bitmap</param>
        </member>
        <member name="M:OpenCvSharp.BitmapConverter.DrawToHdc(OpenCvSharp.IplImage,System.IntPtr,OpenCvSharp.CvRect)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hdc"></param>
            <param name="dstRect"></param>
        </member>
        <member name="M:OpenCvSharp.BitmapConverter.DrawToHdc(OpenCvSharp.IplImage,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hdc"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="w"></param>
            <param name="h"></param>
            <param name="from_x"></param>
            <param name="from_y"></param>
        </member>
        <member name="M:OpenCvSharp.BitmapConverter.DrawToGraphics(OpenCvSharp.IplImage,System.Drawing.Graphics,OpenCvSharp.CvRect)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="g"></param>
            <param name="dstRect"></param>
        </member>
        <member name="M:OpenCvSharp.BitmapConverter.DrawToGraphics(OpenCvSharp.IplImage,System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="g"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="w"></param>
            <param name="h"></param>
            <param name="from_x"></param>
            <param name="from_y"></param>
        </member>
        <member name="T:OpenCvSharp.PCAFlag">
            <summary>
            cvCalcPCA의 조작 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.PCAFlag.DataAsRow">
            <summary>
            행으로서 벡터가 보존된다(즉, 어느 벡터의 모든 요소는 연속적으로 보존된다)
            [CV_PCA_DATA_AS_ROW]
            </summary>
        </member>
        <member name="F:OpenCvSharp.PCAFlag.DataAsCol">
            <summary>
            열로서 벡터가 보존된다(즉, 어느 벡터 성분에 속하는 값은 연속적으로 보존된다)
            [CV_PCA_DATA_AS_COL]
            </summary>
        </member>
        <member name="F:OpenCvSharp.PCAFlag.UseAvg">
            <summary>
            사전에 계산된 평균 벡터를 이용한다
            [CV_PCA_USE_AVG]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSeqWriter`1">
            <summary>
            CvSeq에 데이터를 쓰기 위한 클래스
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter`1.#ctor">
            <summary>
            초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter`1.#ctor(OpenCvSharp.CvSeq)">
            <summary>
            시퀸스의 데이터 기입 처리를 초기화한다 (cvStartAppendToSeq).
            </summary>
            <param name="seq">순서의 포인터</param>
            <returns>라이터(Writer) 상태. 이 함수로 초기화된다.</returns>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter`1.#ctor(OpenCvSharp.SeqType,System.Int32,System.Int32,OpenCvSharp.CvMemStorage)">
            <summary>
            새로운 시퀸스를 작성해, 라이터(writer)를 초기화한다 (cvStartWriteSeq).
            </summary>
            <param name="seq_flags">작성된 시퀸스의 플래그. 생성된 스퀸스가, 특정의 시퀸스 타입을 인수로 취하는 함수에 일절 건네받지 않는 경우는, 이 값에 0을 지정해도 상관없다. 그렇지 않은 경우는, 정의 끝난 시퀸스 타입의 리스트로부터 적절한 타입이 선택되지 않으면 안 된다. </param>
            <param name="header_size">시퀸스 헤더의 사이즈.sizeof(CvSeq) 이상이 아니면 안된다. 또, 특별한 타입이나 확장이 지시받고 있는 경우, 그 타입은 기본 타입의 헤드 사이즈와 일치해야 한다. </param>
            <param name="elem_size">시퀸스의 요소 사이즈(바이트 단위). 사이즈는 시퀸스 타입과 합치해야 한다. 예를 들면, 점군의 시퀸스(요소 타입은 CV_SEQ_ELTYPE_POINT)를 작성하는 경우, 파라미터 elem_size 는 sizeof(CvPoint)와 동일하지 않으면 안 된다. </param>
            <param name="storage">시퀸스의 위치. </param>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter`1.#ctor(OpenCvSharp.CvSeqWriter)">
            <summary>
            제네릭 없는 버젼의 Writer로부터 초기화
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter`1.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">CvSeqWriter*</param>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter`1.Dispose">
            <summary>
            시퀸스 기입 처리를 종료한다 (cvEndWriteSeq).
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSeqWriter`1.WriteSeqElem(`0)">
            <summary>
            (CV_WRITE_SEQ_ELEM)
            </summary>
            <param name="elem"></param>
        </member>
        <member name="T:OpenCvSharp.Interpolation">
            <summary>
            화상의 보간 방법
            </summary>
        </member>
        <member name="F:OpenCvSharp.Interpolation.NearestNeighbor">
            <summary>
            최근 인접 보간 
            [CV_INTER_NN]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Interpolation.Linear">
            <summary>
            바이리니아 보간 
            [CV_INTER_LINEAR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Interpolation.Cubic">
            <summary>
            바이큐빅크 보간 
            [CV_INTER_CUBIC]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Interpolation.Area">
            <summary>
            픽셀 영역의 관계를 이용해 리샘플링 한다. 화상 축소때는, 무아레가 없는 처리 결과를 얻을 수 있는 방법이다. 확대때는, CV_INTER_NN 와 같이 .
            [CV_INTER_AREA]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Interpolation.FillOutliers">
            <summary>
            출력 화상의 전 픽셀의 값을 묻는다. 대응 픽셀이 입력 화상외인 픽셀인 경우는 fillval가 세트 된다 
            [CV_WARP_FILL_OUTLIERS]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Interpolation.InverseMap">
            <summary>
            이 플래그는 map_matrix가 출력 화상으로부터 입력 화상에의 역변환을 위한 행렬인 것을 의미하므로, 직접 픽셀 보간에 이용할 수 있다.
            이것이 세트 되어 있지 않은 경우 이 함수는 map_matrix 를 사용해 역변환을 계산한다. 
            [CV_WARP_INVERSE_MAP]
            </summary>
        </member>
        <member name="T:OpenCvSharp.NormType">
            <summary>
            정규화의 타입
            </summary>
        </member>
        <member name="F:OpenCvSharp.NormType.C">
            <summary>
            배열의 C-norm(절대치의 최대치)를 정규화 
            [CV_C]
            </summary>
        </member>
        <member name="F:OpenCvSharp.NormType.L1">
            <summary>
            배열의 L1-norm(절대치의 합계)를 정규화 
            [CV_L1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.NormType.L2">
            <summary>
            배열의 L2-norm(Euclid 거리)를 정규화  
            [CV_L2]
            </summary>
        </member>
        <member name="F:OpenCvSharp.NormType.NormMask">
            <summary>
            [CV_NORM_MASK]
            </summary>
        </member>
        <member name="F:OpenCvSharp.NormType.Relative">
            <summary> 
            [CV_RELATIVE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.NormType.Diff">
            <summary>
            [CV_DIFF]
            </summary>
        </member>
        <member name="F:OpenCvSharp.NormType.MinMax">
            <summary>
            배열의 값이 지정의 범위에 들어가도록 스케일링과 시프트를 실시한다 
            [CV_MINMAX]
            </summary>
        </member>
        <member name="T:OpenCvSharp.NodeType">
            <summary>
            노드의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.NodeType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.NodeType.Integer">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.NodeType.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.NodeType.String">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.NodeType.Red">
            <summary>
            not used
            </summary>
        </member>
        <member name="F:OpenCvSharp.NodeType.Seq">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.NodeType.Map">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.NodeType.Flow">
            <summary>
            used only for writing structures to YAML format
            </summary>
        </member>
        <member name="F:OpenCvSharp.NodeType.User">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.NodeType.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.NodeType.Named">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.FontFace">
            <summary>
            폰트명의 식별자.현재는 Hershey fonts의 일부만 서포트되고 있다. 
            폰트명의 플래그에는 이탤릭 플래그(Italic)를 합성할 수 있다.
            </summary>
        </member>
        <member name="F:OpenCvSharp.FontFace.HersheySimplex">
            <summary>
            보통 사이즈의 sans-serif 폰트 
            [CV_FONT_HERSHEY_SIMPLEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FontFace.HersheyPlain">
            <summary>
            작은 사이즈의 sans-serif 폰트
            [CV_FONT_HERSHEY_PLAIN]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FontFace.HersheyDuplex">
            <summary>
            보통 사이즈의 sans-serif 폰트(HersheySimplex보다 복잡)
            [CV_FONT_HERSHEY_DUPLEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FontFace.HersheyComplex">
            <summary>
            보통 사이즈의 serif 폰트 
            [CV_FONT_HERSHEY_COMPLEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FontFace.HersheyTriplex">
            <summary>
            보통 사이즈의 serif 폰트(HersheyComplex보다 복잡)
            [CV_FONT_HERSHEY_TRIPLEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FontFace.HersheyComplexSmall">
            <summary>
            HersheyComplex가 작은 버젼 
            [CV_FONT_HERSHEY_COMPLEX_SMALL]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FontFace.HersheyScriptSimplex">
            <summary>
            자필 스타일의 폰트 
            [CV_FONT_HERSHEY_SCRIPT_SIMPLEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FontFace.HersheyScriptComplex">
            <summary>
            HersheyScriptSimplex의 복잡한 버젼 
            [CV_FONT_HERSHEY_SCRIPT_COMPLEX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.FontFace.Italic">
            <summary>
            이탤릭 플래그 
            [CV_FONT_ITALIC]
            </summary>
        </member>
        <member name="T:OpenCvSharp.DisparityMode">
            <summary>
            시차를 계산하기 위한 알고리즘
            </summary>
        </member>
        <member name="F:OpenCvSharp.DisparityMode.Birchfield">
            <summary>
            [CV_DISPARITY_BIRCHFIELD]
            </summary>
        </member>
        <member name="T:OpenCvSharp.ArrComparison">
            <summary>
            cvCmp, cvCmpS등의 메소드로 이용하는 CvArr의 비교 방법
            </summary>
        </member>
        <member name="F:OpenCvSharp.ArrComparison.EQ">
            <summary>
            src1(I)와 value 는 동일하다 
            [CV_CMP_EQ]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ArrComparison.GT">
            <summary>
            src1(I)는 value 보다 크다 
            [CV_CMP_GT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ArrComparison.GE">
            <summary>
            src1(I)는 value 보다 크거나 동일하다 
            [CV_CMP_GE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ArrComparison.LT">
            <summary>
            src1(I)는 value 보다 작다 
            [CV_CMP_LT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ArrComparison.LE">
            <summary>
            src1(I)는 value 보다 작거나 동일하다 
            [CV_CMP_LE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ArrComparison.NE">
            <summary>
            src1(I)와 value 는 동일하지 않다 
            [CV_CMP_NE]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvRandState">
            <summary>
            CvRandState
            </summary>
            <remarks>
            typedef struct CvRandState
            {
                CvRNG     state;    /* RNG state (the current seed and carry)*/
                int       disttype; /* distribution type */
                CvScalar  param[2]; /* parameters of RNG */
            }
            CvRandState;
            </remarks>
        </member>
        <member name="M:OpenCvSharp.CvRandState.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvRandState.#ctor(System.Double,System.Double,System.Int32)">
            <summary>
            
            </summary>
            <param name="param1"></param>
            <param name="param2"></param>
            <param name="seed"></param>
        </member>
        <member name="M:OpenCvSharp.CvRandState.#ctor(System.Double,System.Double,System.Int32,OpenCvSharp.DistributionType)">
            <summary>
            
            </summary>
            <param name="param1"></param>
            <param name="param2"></param>
            <param name="seed"></param>
            <param name="disttype"></param>
        </member>
        <member name="M:OpenCvSharp.CvRandState.#ctor(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.CvRandState.Set(OpenCvSharp.CvRandState)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenCvSharp.CvRandState.Rand(OpenCvSharp.CvArr)">
            <summary>
            배열을 랜덤인 값으로 묻는다
            </summary>
            <param name="arr"></param>
        </member>
        <member name="M:OpenCvSharp.CvRandState.RandInit(System.Double,System.Double,System.Int32)">
            <summary>
            
            </summary>
            <param name="param1"></param>
            <param name="param2"></param>
            <param name="seed"></param>
        </member>
        <member name="M:OpenCvSharp.CvRandState.RandInit(System.Double,System.Double,System.Int32,OpenCvSharp.DistributionType)">
            <summary>
            
            </summary>
            <param name="param1"></param>
            <param name="param2"></param>
            <param name="seed"></param>
            <param name="disttype"></param>
        </member>
        <member name="M:OpenCvSharp.CvRandState.RandSetRange(System.Double,System.Double)">
            <summary>
            Changes RNG range while preserving RNG state
            </summary>
            <param name="param1"></param>
            <param name="param2"></param>
        </member>
        <member name="M:OpenCvSharp.CvRandState.RandSetRange(System.Double,System.Double,System.Int32)">
            <summary>
            Changes RNG range while preserving RNG state
            </summary>
            <param name="param1"></param>
            <param name="param2"></param>
            <param name="index"></param>
        </member>
        <member name="P:OpenCvSharp.CvRandState.State">
            <summary>
            RNG state (the current seed and carry)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvRandState.DistType">
            <summary>
            distribution type
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvRandState.Param">
            <summary>
            parameters of RNG
            </summary>
        </member>
        <member name="T:OpenCvSharp.PointerAccessor1D_Int16">
            <summary>
            Int16* 를 배열과 같이 액세스 할 수 있도록 하기 위한 클래스
            </summary>
        </member>
        <member name="F:OpenCvSharp.PointerAccessor1D_Int16.ptr">
            <summary>
            Pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Int16.#ctor(System.IntPtr)">
            <summary>
            IntPtr 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Int16.#ctor(System.Int16*)">
            <summary>
            Int16* 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Int16.Get(System.Int32)">
            <summary>
            지정한 인덱스의 배열의 요소를 취득한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Int16.Set(System.Int32,System.Int16)">
            <summary>
            지정한 인덱스의 배열의 요소를 설정한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D_Int16.Ptr">
            <summary>
            내부에서 보관 유지하고 있는 포인터 (Int16*)
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D_Int16.Item(System.Int32)">
            <summary>
            배열의 요소에 액세스 하는 인덱스
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="T:OpenCvSharp.IplImage">
            <summary>
            IPL 화상 헤더
            </summary>
        </member>
        <member name="F:OpenCvSharp.IplImage.SizeOf">
            <summary>
            sizeof(IplImage) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.IplImage._data">
            <summary>
            C++/CLI wrapper in order to access a native structure
            </summary>
        </member>
        <member name="M:OpenCvSharp.IplImage.#ctor(System.String)">
            <summary>
            화상 파일로부터 초기화
            </summary>
            <param name="filename">파일명</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.#ctor(System.String,OpenCvSharp.LoadMode)">
            <summary>
            화상 파일로부터 초기화
            </summary>
            <param name="filename">파일명</param>
            <param name="flags">읽어들이는 화상이 칼라/그레이 스케일의 어느 쪽인지, 라고 비트 심도를 지정한다</param>
            <returns>화상에의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.#ctor(OpenCvSharp.CvSize,OpenCvSharp.BitDepth,System.Int32)">
            <summary>
            비어 있는 화상으로 초기화. cvCreateImage 상당.
            </summary>
            <param name="size">사이즈</param>
            <param name="depth">비트 심도</param>
            <param name="channels">채널수</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.#ctor(System.Int32,System.Int32,OpenCvSharp.BitDepth,System.Int32)">
            <summary>
            비어 있는 화상으로 초기화.cvCreateImage 상당.
            </summary>
            <param name="width">화상의 폭</param>
            <param name="height">화상의 높이</param>
            <param name="depth">비트 심도</param>
            <param name="channels">채널수</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">IplImage*</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            포인터와 GC에 의한 자동 해제의 참거짓을 지정하고 나서 초기화
            </summary>
            <param name="ptr"></param>
            <param name="isEnabledDispose"></param>
        </member>
        <member name="M:OpenCvSharp.IplImage.Dispose">
            <summary>
            헤더와 화상 데이터를 해제한다 (cvReleaseImage)
            </summary>
        </member>
        <member name="M:OpenCvSharp.IplImage.FromFile(System.String)">
            <summary>
            화상 파일로부터 IplImage를 생성한다
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.FromFile(System.String,OpenCvSharp.LoadMode)">
            <summary>
            화상 파일로부터 IplImage를 생성한다.
            처음에 cvLoadImage로의 읽기를 시도해 실패했을 경우는 GDI+에 의한 읽기를 시도한다
            </summary>
            <param name="fileName"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.FromBitmap(System.Drawing.Bitmap)">
            <summary>
            System.Drawing.Bitmap의 인스턴스로부터 IplImage를 생성한다
            </summary>
            <param name="bmp"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_UnaryPlus(OpenCvSharp.IplImage)">
            <summary>
            행렬의 단항+연산자
            </summary>
            <param name="a">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_UnaryNegation(OpenCvSharp.IplImage)">
            <summary>
            행렬의 단항-연산자
            </summary>
            <param name="a">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_OnesComplement(OpenCvSharp.IplImage)">
            <summary>
            행렬의 단항 not 연산자
            </summary>
            <param name="a">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_Addition(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            행렬과 행렬의 가산 연산자. cvAdd에 의해 가산한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_Addition(OpenCvSharp.IplImage,OpenCvSharp.CvScalar)">
            <summary>
            행렬과 스칼라의 가산 연산자. cvAddS에 의해 가산한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_Subtraction(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            행렬과 행렬의 감산 연산자. cvSub에 의해 감산한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_Subtraction(OpenCvSharp.IplImage,OpenCvSharp.CvScalar)">
            <summary>
            행렬과 스칼라의 감산 연산자. cvSubS에 의해 가산한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_Multiply(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            행렬과 행렬의 곱셈 연산자. IplImageMul에 의해 곱셈한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_Multiply(OpenCvSharp.IplImage,System.Double)">
            <summary>
            행렬과 스칼라의 곱셈 연산자. a의 요소 마다 b를 걸친 결과를 cvAddWeighted에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_Division(OpenCvSharp.IplImage,System.Double)">
            <summary>
            행렬과 스칼라의 제산 연산자. a의 요소 마다 b로 나눈 결과를 cvAddWeighted에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_BitwiseAnd(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            행렬과 행렬의 and 연산자.cvAnd에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_BitwiseAnd(OpenCvSharp.IplImage,OpenCvSharp.CvScalar)">
            <summary>
            행렬과 스칼라의 and 연산자. cvAndS에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_BitwiseOr(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            행렬과 행렬의 or연산자. cvOr에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_BitwiseOr(OpenCvSharp.IplImage,OpenCvSharp.CvScalar)">
            <summary>
            행렬과 스칼라의 or연산자. cvOrS에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_ExclusiveOr(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            행렬과 행렬의 xor 연산자.cvXor에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">행렬</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.op_ExclusiveOr(OpenCvSharp.IplImage,OpenCvSharp.CvScalar)">
            <summary>
            행렬과 스칼라의 xor 연산자.cvXorS에 의해 요구한다.
            </summary>
            <param name="a">행렬</param>
            <param name="b">스칼라</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.Clone">
            <summary>
            헤더, ROI, 데이터를 포함한 화상의 완전한 카피를 작성한다(cvCloneImage 상당)
            </summary>
            <returns>이 화상의 완전한 카피</returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.CreateHeader(OpenCvSharp.CvSize,OpenCvSharp.BitDepth,System.Int32)">
            <summary>
            메모리 확보와 초기화를 실시한다
            </summary>
            <param name="size">화상의 폭과 높이</param>
            <param name="depth">화상 요소의 BitDepth</param>
            <param name="channels">요소(픽셀) 마다의 채널수.1,2,3,4 의 언젠가.이 채널은 인타리브드 된다.예를 들면, 통상의 칼라 화상의 데이터 레이아웃은, b0 g0 r0 b1 g1 r1 ...되고 있다.</param>
            <returns>화상 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.DeleteMoire">
            <summary>
            입력 화상의 moire를 삭제한다
            </summary>
        </member>
        <member name="M:OpenCvSharp.IplImage.GetCOI">
            <summary>
            화상의 COI(channel of interest)를 돌려준다.
            전채널이 선택되는 경우에는 0이 돌려주어진다).
            </summary>
            <returns>COI(channel of interest)를 돌려준다(전채널이 선택되는 경우에는 0 이 돌려주어진다).</returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.GetROI">
            <summary>
            화상의 ROI 좌표를 돌려준다. ROI 가 존재하지 않는 경우에는, 사각형 cvRect(0,0,image->width,image->height)가 돌려주어진다.
            </summary>
            <returns>ROI</returns>  
        </member>
        <member name="M:OpenCvSharp.IplImage.InitImageHeader(OpenCvSharp.CvSize,OpenCvSharp.BitDepth,System.Int32)">
            <summary>
            유저로부터 건네받은 참조가 가리키는, 유저에 의해서 확보된 화상의 헤더 구조체를 초기화해, 그 참조를 돌려준다
            </summary>
            <param name="size">화상의 폭과 높이</param>
            <param name="depth">화상의 컬러뎁스</param>
            <param name="channels">채널수</param>
            <returns>초기화된 화상 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.InitImageHeader(OpenCvSharp.CvSize,OpenCvSharp.BitDepth,System.Int32,OpenCvSharp.ImageOrigin)">
            <summary>
            유저로부터 건네받은 참조가 가리키는, 유저에 의해서 확보된 화상의 헤더 구조체를 초기화해, 그 참조를 돌려준다
            </summary>
            <param name="size">화상의 폭과 높이</param>
            <param name="depth">화상의 컬러뎁스</param>
            <param name="channels">채널수</param>
            <param name="origin">초기화되는 화상 헤더</param>
            <returns>초기화된 화상 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.InitImageHeader(OpenCvSharp.CvSize,OpenCvSharp.BitDepth,System.Int32,OpenCvSharp.ImageOrigin,System.Int32)">
            <summary>
            유저로부터 건네받은 참조가 가리키는, 유저에 의해서 확보된 화상의 헤더 구조체를 초기화해, 그 참조를 돌려준다
            </summary>
            <param name="size">화상의 폭과 높이</param>
            <param name="depth">화상의 컬러뎁스</param>
            <param name="channels">채널수</param>
            <param name="origin">초기화되는 화상 헤더</param>
            <param name="align">화상의 행의 얼라이먼트, 통상은 4, 혹은 8 바이트.</param>
            <returns>초기화된 화상 헤더</returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.PyrSegmentation(OpenCvSharp.IplImage,System.Int32,System.Double,System.Double)">
            <summary>
            화상 피라밋드에 의한 화상의 부분화를 실장한다.피라밋드는, level까지 작성한다.(out 인수의 comp가 필요 없을 때 버젼)
            </summary>
            <param name="dst">출력 화상</param>
            <param name="level">부분화를 위한 피라밋드의 최대 레벨</param>
            <param name="threshold1">링크 구축을 위한 오차 반응을 일으키는 임계치</param>
            <param name="threshold2">세그먼트(segment) 클러스터링을 위한 오차 반응을 일으키는 임계치</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.PyrSegmentation(OpenCvSharp.IplImage,OpenCvSharp.CvMemStorage,OpenCvSharp.CvSeq@,System.Int32,System.Double,System.Double)">
            <summary>
            화상 피라밋드에 의한 화상의 부분화를 실장한다. 피라밋드는, level까지 작성한다. 
            </summary>
            <param name="dst">출력 화상</param>
            <param name="storage">결과적으로 얻을 수 있는 연결 성분의 시퀀스를 보존하기 위한 영역</param>
            <param name="comp">부분화된 성분의 출력 시퀀스의 포인터</param>
            <param name="level">부분화를 위한 피라밋드의 최대 레벨</param>
            <param name="threshold1">링크 구축을 위한 오차 반응을 일으키는 임계치</param>
            <param name="threshold2">세그먼트(segment) 클러스터링을 위한 오차 반응을 일으키는 임계치</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.ResetROI">
            <summary>
            화상의 ROI 를 해제한다. 해제 후는 앞의 화상이 선택되고 있는 상태와 같게 된다.
            </summary>
        </member>
        <member name="M:OpenCvSharp.IplImage.SetImageCOI(System.Int32)">
            <summary>
            주어진 값을 channel of interest(COI)로서 세트 한다 (cvSetImageCOI).
            값 0은 모든 채널이 선택되고 있는 일을 의미해, 값 1 은 최초의 채널이 선택되고 있는 일을 의미한다.
            </summary>
            <param name="coi">COI（Channel of interest）</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.SetROI(OpenCvSharp.CvRect)">
            <summary>
            주어진 사각형을 화상의 ROI 로서 세트 한다.
            만약, ROI 가 NULL로, 파라미터 rect 의 값이 화상 전체가 아닌 경우에는, ROI 가 확보된다. 
            COI 과는 달리, OpenCV 의 함수의 대부분이 ROI를 서포트하고 있다.그리고, ROI 는 어느 의미, 다른 화상으로서 다루어진다
            (예를 들면, 모든 픽셀 좌표는 ROI 의 좌상 혹은 좌하(화상의 원점에 의존)로부터 카운트 된다).
            </summary>
            <param name="rect">ROI 를 나타내는 구형</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.SnakeImage(OpenCvSharp.CvPoint[],System.Single,System.Single,System.Single,OpenCvSharp.CvSize,OpenCvSharp.CvTermCriteria)">
            <summary>
            내부 에너지와 외부 에너지의 총화가 최소가 되도록 snake 를 갱신한다. 
            내부 에너지는 윤곽 형상에 의존한다(매끄러운 윤곽만큼 내부 에너지가 작다).
            외부 에너지는 에너지장에 의존해, 화상 기울기의 경우는 화상의 엣지에 대응하는 국소적인 에너지 극소치에 대해 최소가 된다.
            </summary>
            <param name="points">윤곽점. 여기에 보관되고 있는 점을 기초로 계산을 해, 결과도 여기에 들어간다</param>
            <param name="alpha">연속 에너지의 중량감.points와 같은 길이를 가지는 부동 소수점형 배열(각 바퀴곽점에 배열의 각 요소가 대응).</param>
            <param name="beta">곡율 에너지의 중량감.alpha 와 같이.</param>
            <param name="gamma">화상 에너지의 중량감.alpha 와 같이.</param>
            <param name="win">최소치를 탐색하는 각 점의 근방의 사이즈. Width 와 Height 는 홀수가 아니면 안된다.</param>
            <param name="criteria">종료 조건</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.SnakeImage(OpenCvSharp.CvPoint[],System.Single,System.Single,System.Single,OpenCvSharp.CvSize,OpenCvSharp.CvTermCriteria,System.Boolean)">
            <summary>
            내부 에너지와 외부 에너지의 총화가 최소가 되도록 snake 를 갱신한다. 
            내부 에너지는 윤곽 형상에 의존한다(매끄러운 윤곽만큼 내부 에너지가 작다).
            외부 에너지는 에너지장에 의존해, 화상 기울기의 경우는 화상의 엣지에 대응하는 국소적인 에너지 극소치에 대해 최소가 된다.
            </summary>
            <param name="points">윤곽점. 여기에 보관되고 있는 점을 기초로 계산을 해, 결과도 여기에 들어간다</param>
            <param name="alpha">연속 에너지의 중량감.points와 같은 길이를 가지는 부동 소수점형 배열(각 바퀴곽점에 배열의 각 요소가 대응).</param>
            <param name="beta">곡율 에너지의 중량감.alpha 와 같이.</param>
            <param name="gamma">화상 에너지의 중량감.alpha 와 같이.</param>
            <param name="win">최소치를 탐색하는 각 점의 근방의 사이즈. Width 와 Height 는 홀수가 아니면 안된다.</param>
            <param name="criteria">종료 조건</param>
            <param name="calc_gradient">기울기 플래그.true의 경우, 이 함수는 모든 화상 픽셀에 대한 기울기의 힘을 계산해, 이것을 에너지장이라고 본다. false의 경우는, 입력 화상 자체가 에너지장이라고 보여진다.</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.SnakeImage(OpenCvSharp.CvPoint[],System.Single[],System.Single[],System.Single[],OpenCvSharp.CvSize,OpenCvSharp.CvTermCriteria)">
            <summary>
            내부 에너지와 외부 에너지의 총화가 최소가 되도록 snake 를 갱신한다. 
            내부 에너지는 윤곽 형상에 의존한다(매끄러운 윤곽만큼 내부 에너지가 작다).
            외부 에너지는 에너지장에 의존해, 화상 기울기의 경우는 화상의 엣지에 대응하는 국소적인 에너지 극소치에 대해 최소가 된다.
            </summary>
            <param name="points">윤곽점. 여기에 보관되고 있는 점을 기초로 계산을 해, 결과도 여기에 들어간다</param>
            <param name="alpha">연속 에너지의 중량감.points와 같은 길이를 가지는 부동 소수점형 배열(각 바퀴곽점에 배열의 각 요소가 대응).</param>
            <param name="beta">곡율 에너지의 중량감.alpha 와 같이.</param>
            <param name="gamma">화상 에너지의 중량감.alpha 와 같이.</param>
            <param name="win">최소치를 탐색하는 각 점의 근방의 사이즈. Width 와 Height 는 홀수가 아니면 안된다.</param>
            <param name="criteria">종료 조건</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.SnakeImage(OpenCvSharp.CvPoint[],System.Single[],System.Single[],System.Single[],OpenCvSharp.CvSize,OpenCvSharp.CvTermCriteria,System.Boolean)">
            <summary>
            내부 에너지와 외부 에너지의 총화가 최소가 되도록 snake 를 갱신한다. 
            내부 에너지는 윤곽 형상에 의존한다(매끄러운 윤곽만큼 내부 에너지가 작다).
            외부 에너지는 에너지장에 의존해, 화상 기울기의 경우는 화상의 엣지에 대응하는 국소적인 에너지 극소치에 대해 최소가 된다.
            </summary>
            <param name="points">윤곽점. 여기에 보관되고 있는 점을 기초로 계산을 해, 결과도 여기에 들어간다</param>
            <param name="alpha">연속 에너지의 중량감.points와 같은 길이를 가지는 부동 소수점형 배열(각 바퀴곽점에 배열의 각 요소가 대응).</param>
            <param name="beta">곡율 에너지의 중량감.alpha 와 같이.</param>
            <param name="gamma">화상 에너지의 중량감.alpha 와 같이.</param>
            <param name="win">최소치를 탐색하는 각 점의 근방의 사이즈. Width 와 Height 는 홀수가 아니면 안된다.</param>
            <param name="criteria">종료 조건</param>
            <param name="calc_gradient">기울기 플래그.true의 경우, 이 함수는 모든 화상 픽셀에 대한 기울기의 힘을 계산해, 이것을 에너지장이라고 본다. false의 경우는, 입력 화상 자체가 에너지장이라고 보여진다.</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.Split">
            <summary>
            멀티 채널의 배열을 복수의 싱글 채널의 배열에 분할한다.
            </summary>
            <returns>각 채널마다의 배열</returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.CopyFrom(System.Drawing.Bitmap)">
            <summary>
            System.Drawing.Bitmap로부터 이 인스턴스에 데이터를 카피한다
            </summary>
            <param name="bmp"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.ToBitmap">
            <summary>
            OpenCV의 IplImage를 System.Drawing.Bitmap로 변환한다
            </summary>
            <returns>System.Drawing.Bitmap</returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.ToBitmap(System.Drawing.Imaging.PixelFormat)">
            <summary>
            OpenCV의 IplImage를 System.Drawing.Bitmap로 변환한다
            </summary>
            <param name="pf">픽셀 심도</param>
            <returns>System.Drawing.Bitmap</returns>
        </member>
        <member name="M:OpenCvSharp.IplImage.ToBitmap(System.Drawing.Bitmap)">
            <summary>
            OpenCV의 IplImage를 지정한 출력 끝에 System.Drawing.Bitmap으로서 변환한다
            </summary>
            <param name="dst">출력처의 System.Drawing.Bitmap</param>
        </member>
        <member name="M:OpenCvSharp.IplImage.DrawToHDC(System.IntPtr,OpenCvSharp.CvRect)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="dstRect"></param>
        </member>
        <member name="M:OpenCvSharp.IplImage.DrawToHDC(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="w"></param>
            <param name="h"></param>
            <param name="from_x"></param>
            <param name="from_y"></param>
        </member>
        <member name="M:OpenCvSharp.IplImage.DrawToGraphics(System.Drawing.Graphics,OpenCvSharp.CvRect)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="dstRect"></param>
        </member>
        <member name="M:OpenCvSharp.IplImage.DrawToGraphics(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="w"></param>
            <param name="h"></param>
            <param name="from_x"></param>
            <param name="from_y"></param>
        </member>
        <member name="P:OpenCvSharp.IplImage.Align">
            <summary>
            화상의 행의 얼라이먼트(4 혹은 8)를 취득한다.
            OpenCV 는 이것을 무시하고, 대신에 widthStep 를 사용한다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.AlphaChannel">
            <summary>
            OpenCV에서는 무시된다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.BorderMode">
            <summary>
            OpenCV에서는 무시된다.．
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.BorderConst">
            <summary>
            OpenCV에서는 무시된다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.ColorModel">
            <summary>
            OpenCV에서는 무시된다.．
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.ChannelSeq">
            <summary>
            OpenCV에서는 무시된다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.DataOrder">
            <summary>
            0 - interleaved color channels, 1 - 분리 칼라 채널,
            cvCreateImage 를 작성할 수 있는 것은, interleaved 화상만
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.Depth">
            <summary>
            픽셀의 색심도의 비트수를 취득한다 Pixel Depth in bits
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.Height">
            <summary>
            화상의 픽셀 높이를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.ID">
            <summary>
            버젼 (=0)을 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.ImageData">
            <summary>
            얼라이먼트가 조정된 화상 데이터에의 포인터를 취득한다. 이것을 통해 픽셀 데이타에 액세스 할 수 있다.
            이용할 때는 System.Byte* 에 캐스트 할 것.
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.ImageDataPtr">
            <summary>
            얼라이먼트가 조정된 화상 데이터의 byte*에 캐스트 끝난 포인터를 취득한다. 이것을 통해 픽셀 데이타에 액세스 할 수 있다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.ImageDataOrigin">
             <summary>
             오리지날 화상 데이터의 포인터를 취득한다
            (얼라이먼트가 조정되고 있다고는 할 수 없다)- 이것은 화상을 올바르게 해제하기 위해서 필요
             </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.ImageSize">
            <summary>
            화상 데이터의 바이트사이즈를 취득한다
            (interleaved 데이타의 경우는, =image->height*image->widthStep)
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.MaskROI">
            <summary>
            OpenCV에서는 반드시 NULL
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.NChannels">
            <summary>
            채널수를을 취득한다. OpenCV 의 대부분의 함수가, 1,2,3 및 4 채널을 서포트한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.NSize">
            <summary>
            sizeof(IplImage)
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.Origin">
            <summary>
            화상의 원점을을 취득한다. 
            0 - 좌상 원점, 1 - 좌하 원점(Windows의 비트 맵 형식)
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.ROIPointer">
            <summary>
            화상 ROI 의 사각형 포인터를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.Width">
            <summary>
            화상의 픽셀폭을 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.WidthStep">
            <summary>
            얼라이먼트가 조정된 화상의 행의 바이트사이즈를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.Size">
            <summary>
            화상의 사이즈를 취득한다 (ROI의 사이즈가 아니고, 원래의 사이즈)
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.COI">
            <summary>
            COI (channel of interest)를 취득·설정한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.ROI">
            <summary>
            화상 ROI 의 사각형을 취득·설정한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.Dims">
            <summary>
            배열의 차원수를 취득한다 (2 고정)
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplImage.Bpp">
            <summary>
            화상의 색심도 (Bits per pixel)
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvVideoWriter">
            <summary>
            AVI 비디오를 출력하기 위한 라이터
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvVideoWriter.#ctor(System.String,System.String,System.Double,OpenCvSharp.CvSize)">
            <summary>
            비디오 라이터를 작성해, 돌려준다.
            </summary>
            <param name="filename">출력하는 비디오 파일의 이름</param>
            <param name="fourcc">
            프레임을 압축하기 위한 코덱을 나타내는 4 문자.예를 들면,"PIM1" 는, MPEG-1 코덱, "MJPG" 는, motion-jpeg 코덱이다. 
            Win32 환경하에서는, null 를 건네주어 다이얼로그로부터 압축 방법과 압축의 파라미터를 선택할 수 있게 된다. 
            </param>
            <param name="fps">작성된 비디오 스트림의 frame rate</param>
            <param name="frame_size">비디오 프레임의 사이즈</param>
            <returns>CvVideoWriter</returns>
        </member>
        <member name="M:OpenCvSharp.CvVideoWriter.#ctor(System.String,System.String,System.Double,OpenCvSharp.CvSize,System.Boolean)">
            <summary>
            비디오 라이터를 작성해, 돌려준다.
            </summary>
            <param name="filename">출력하는 비디오 파일의 이름</param>
            <param name="fourcc">
            프레임을 압축하기 위한 코덱을 나타내는 4 문자.예를 들면,"PIM1" 는, MPEG-1 코덱, "MJPG" 는, motion-jpeg 코덱이다. 
            Win32 환경하에서는, null 를 건네주어 다이얼로그로부터 압축 방법과 압축의 파라미터를 선택할 수 있게 된다. 
            </param>
            <param name="fps">작성된 비디오 스트림의 frame rate</param>
            <param name="frame_size">비디오 프레임의 사이즈</param>
            <param name="is_color">true의 경우, 엔코더는 칼라 프레임으로서 encode 한다. false의 경우, 그레이 스케일 프레임으로서 동작한다(현재로서는, 이 플래그는 Windows 에서만 이용할 수 있다).</param>
            <returns>CvVideoWriter</returns>
        </member>
        <member name="M:OpenCvSharp.CvVideoWriter.#ctor(System.IntPtr)">
            <summary>
            포인터로 초기화
            </summary>
            <param name="ptr">CvVideoWriter*</param>
        </member>
        <member name="M:OpenCvSharp.CvVideoWriter.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvVideoWriter.WriteFrame(OpenCvSharp.IplImage)">
            <summary>
            하나의 프레임을 비디오 파일에 쓰기 또는 추가한다
            </summary>
            <param name="image">쓰여질 이미지</param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvVideoWriter.FileName">
            <summary>
            출력하는 비디오 파일의 이름을 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvVideoWriter.FourCC">
            <summary>
            프레임을 압축하기 위한 코덱을 나타내는 4 문자를 취득한다.
            예를 들면,"PIM1" 는, MPEG-1 코덱, "MJPG" 는, motion-jpeg 코덱이다. 
            Win32 환경하에서는, null 를 건네주어 다이얼로그로부터 압축 방법과 압축의 파라미터를 선택할 수 있게 된다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvVideoWriter.Fps">
            <summary>
            작성된 비디오 스트림의 frame rate를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvVideoWriter.FrameSize">
            <summary>
            비디오 프레임의 사이즈를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvVideoWriter.IsColor">
            <summary>
            칼라 프레임인지 어떤지의 값을 취득한다
            </summary>
        </member>
        <member name="T:OpenCvSharp.SVDFlag">
            <summary>
            cvSVD의 조작 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.SVDFlag.Zero">
            <summary>
            플래그 지정 없음 [0]
            [0]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SVDFlag.ModifyA">
            <summary>
            계산중에 행렬 A의 변경을 실시할 수 있다.이 플래그의 지정은 처리 속도를 향상시킨다.[CV_SVD_MODIFY_A]
            [CV_SVD_MODIFY_A]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SVDFlag.U_T">
            <summary>
            U의 전치행렬을 돌려주는 것을 의미한다.이 플래그의 지정은 처리 속도를 향상시킨다.[CV_SVD_U_T]
            [CV_SVD_U_T]
            </summary>
        </member>
        <member name="F:OpenCvSharp.SVDFlag.V_T">
            <summary>
            V의 전치행렬을 돌려주는 것을 의미한다.이 플래그의 지정은 처리 속도를 향상시킨다.[CV_SVD_V_T]
            [CV_SVD_V_T]
            </summary>
        </member>
        <member name="T:OpenCvSharp.SortFlag">
            <summary>
            cvSort로 이용하는, 배열의 줄 순서 지정
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvStringHashNode">
            <summary>
            All the keys (names) of elements in the read file storage are stored in the hash to speed up the lookup operations
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStringHashNode.SizeOf">
            <summary>
            sizeof(CvStringHashNode)를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvStringHashNode._data">
            <summary>
            C++/CLI측에서 포인터에 액세스 하는 오브젝트
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvStringHashNode.#ctor(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">struct CvStringHashNode*</param>
        </member>
        <member name="P:OpenCvSharp.CvStringHashNode.HashVal">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStringHashNode.Str">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvStringHashNode.Next">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvContourScanner">
            <summary>
            윤곽 스캐너.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.#ctor(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상. 8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.#ctor(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상. 8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size"></param>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.#ctor(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상.8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀸스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.#ctor(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상.8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀸스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
            <param name="method">근사 수법.cvFindContours와 같이, 단 CV_LINK_RUNS 는 사용 불가. </param>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.#ctor(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain,OpenCvSharp.CvPoint)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상.8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀸스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
            <param name="method">근사 수법.cvFindContours와 같이, 단 CV_LINK_RUNS 는 사용 불가. </param>
            <param name="offset">ROI의 오프셋.cvFindContours를 참조. </param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.Initialize(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain,OpenCvSharp.CvPoint)">
            <summary>
            Initializes contour scanning process
            </summary>
            <param name="image">The source 8-bit single channel binary image. </param>
            <param name="storage">Container of the retrieved contours.</param>
            <param name="header_size">Size of the sequence header, >=sizeof(CvChain) if method=CV_CHAIN_CODE, and >=sizeof(CvContour) otherwise. </param>
            <param name="mode">Retrieval mode; see cvFindContours. </param>
            <param name="method">Approximation method. It has the same meaning as in cvFindContours, but CV_LINK_RUNS can not be used here. </param>
            <param name="offset">ROI offset; see cvFindContours. </param>
            <returns>CvContourScanner</returns>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.Initialize">
            <summary>
            Initializes contour scanning process
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.StartFindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상. 8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.StartFindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상. 8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size"></param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.StartFindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상.8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀸스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.StartFindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상.8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀸스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
            <param name="method">근사 알고리즘. cvFindContours와 같이, 단 CV_LINK_RUNS 는 사용 불가. </param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.StartFindContours(OpenCvSharp.CvArr,OpenCvSharp.CvMemStorage,System.Int32,OpenCvSharp.ContourRetrieval,OpenCvSharp.ContourChain,OpenCvSharp.CvPoint)">
            <summary>
            윤곽 주사 처리의 초기화를 실시한다
            </summary>
            <param name="image">입력 화상.8비트 싱글 채널의 2진화 화상. </param>
            <param name="storage">추출된 윤곽 데이터의 보존 영역. </param>
            <param name="header_size">시퀸스 헤더의 사이즈. method=CV_CHAIN_CODE때, >=sizeof(CvChain) , 그 이외의 경우 >=sizeof(CvContour). </param>
            <param name="mode">추출 모드.</param>
            <param name="method">근사 알고리즘. cvFindContours와 같이, 단 CV_LINK_RUNS 는 사용 불가. </param>
            <param name="offset">ROI의 오프셋.cvFindContours를 참조. </param>
            <returns>윤곽 스캐너의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.Dispose">
            <summary>
            = cvEndFindContours
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.EndFindContours">
            <summary>
            윤곽 주사 처리를 종료한다
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.FindNextContour">
            <summary>
            화상중의 다음의 윤곽을 검색한다
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.SubstituteContour(OpenCvSharp.CvSeq{OpenCvSharp.CvPoint})">
            <summary>
            추출된 윤곽을 옮겨놓는다
            </summary>
            <param name="new_contour">새롭게 옮겨놓는 윤곽</param>
        </member>
        <member name="M:OpenCvSharp.CvContourScanner.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.PointerAccessor1D_Byte">
            <summary>
            Byte* 를 배열과 같이 액세스 할 수 있도록 하기 위한 클래스
            </summary>
        </member>
        <member name="F:OpenCvSharp.PointerAccessor1D_Byte.ptr">
            <summary>
            Pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Byte.#ctor(System.IntPtr)">
            <summary>
            IntPtr초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Byte.#ctor(System.Byte*)">
            <summary>
            Byte* 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Byte.Get(System.Int32)">
            <summary>
            지정한 인덱스의 배열의 요소를 취득한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Byte.Set(System.Int32,System.Byte)">
            <summary>
            지정한 인덱스의 배열의 요소를 설정한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D_Byte.Ptr">
            <summary>
            내부에서 보관 유지하고 있는 포인터 (Single*)
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D_Byte.Item(System.Int32)">
            <summary>
            배열의 요소에 액세스 하는 인덱스
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="T:OpenCvSharp.CvSize2D32f">
            <summary>
            사각형의 서브픽셀의 정확한 사이즈
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSize2D32f.SizeOf">
            <summary>
            sizeof(CvSize2D32f)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSize2D32f.Width">
            <summary>
            사각형의 폭
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSize2D32f.Height">
            <summary>
            사각형의 높이
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSize2D32f.#ctor(System.Single,System.Single)">
            <summary>
            초기화
            </summary>
            <param name="width">사각형의 폭</param>
            <param name="height">사각형의 높이</param>
        </member>
        <member name="M:OpenCvSharp.CvSize2D32f.op_Implicit(OpenCvSharp.CvSize2D32f)~System.Drawing.SizeF">
            <summary>
            System.Drawing.SizeF에의 묵시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSize2D32f.op_Explicit(System.Drawing.SizeF)~OpenCvSharp.CvSize2D32f">
            <summary>
            System.Drawing.Size로부터의 명시적 캐스트
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSize2D32f.op_Implicit(OpenCvSharp.CvSize2D32f)~OpenCvSharp.CvSize">
            <summary>
            CvSize에의 묵시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSize2D32f.op_Explicit(OpenCvSharp.CvSize)~OpenCvSharp.CvSize2D32f">
            <summary>
            CvSize로부터의 명시적 캐스트
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSize2D32f.Equals(OpenCvSharp.CvSize2D32f)">
            <summary>
            지정한 CvSize2D32f의 좌표와 동일하면 true를 돌려준다 
            </summary>
            <param name="cs">비교 대상</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvSize2D32f.op_Equality(OpenCvSharp.CvSize2D32f,OpenCvSharp.CvSize2D32f)">
            <summary>
            == 연산자의 overload.x,y좌표치가 동일하면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvSize2D32f.op_Inequality(OpenCvSharp.CvSize2D32f,OpenCvSharp.CvSize2D32f)">
            <summary>
            != 연산자의 overload.x,y좌표치가 동일하지 않으면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvSize2D32f.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSize2D32f.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSize2D32f.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.CvSubdiv2DEdge">
            <summary>
            4변 중의 하나. 실체는 UInt32이며, 묵시적 캐스트가 정의되고 있다.
            하위 2비트는 인덱스(0...3)으로, 상위 비트는 4변에의 포인터.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSubdiv2DEdge.Value">
            <summary>
            실체 데이터
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2DEdge.#ctor(System.UInt32)">
            <summary>
            초기화
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2DEdge.op_Implicit(OpenCvSharp.CvSubdiv2DEdge)~System.UInt32">
            <summary>
            CvSubdiv2DEdge로부터 uint의 묵시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2DEdge.op_Implicit(System.UInt32)~OpenCvSharp.CvSubdiv2DEdge">
            <summary>
            uint로부터 CvSubdiv2DEdge에의 묵시적 캐스트
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2DEdge.GetEdge(OpenCvSharp.CvNextEdgeType)">
            <summary>
            입력된 엣지에 관련된 엣지를 한개 돌려준다 (cvSubdiv2DGetEdge 해당)
            </summary>
            <param name="type">반환값으로 하는 엣지의 조건</param>
            <returns>주어진 엣지에 관계있는 하나의 엣지</returns>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2DEdge.Dst">
            <summary>
            엣지의 종점을 돌려준다. 
            엣지의  dual subdivision이고 가상점의 좌표가 아직 계산되어 있지 않은 경우는, null를 돌려준다. 
            가상점은 함수 cvCalcSubdivVoronoi2D 를 이용해 계산된다
            </summary>
            <returns> 엣지의 종점. 엣지가 dual subdivision이고 가상 점의 좌표가 아직 계산되지 않은 경우에는 null을 반환한다. </returns> 
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2DEdge.Org">
            <summary>
            엣지의 시작점을 돌려준다 (cvSubdiv2DEdgeOrg). 
            엣지가 dual subdivision이고  가상점의 좌표가 아직 계산되어 있지 않은 경우는, null를 돌려준다. 
            가상점은 함수 cvCalcSubdivVoronoi2D 를 이용해 계산된다
            </summary>
            <returns> 엣지의 시작점. 엣지가 dual subdivision이고 가상 점의 좌표가 아직 계산되지 않은 경우에는 null을 반환한다. </returns> 
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2DEdge.RotateEdge(OpenCvSharp.RotateEdgeFlag)">
            <summary>
            입력된 엣지를 포함한 quad-edge중의 엣지의 하나를 돌려준다 (cvSubdiv2DRotateEdge 상당).
            </summary>
            <param name="rotate">관계의 지정(입력된 엣지와 같은 quad-edge의 어느 엣지를 돌려주는지를 지정)</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSubdiv2DEdge.ToString">
            <summary>
            문자열 형식을 돌려준다
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CvCapture">
            <summary>
            비디오 캡쳐
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvCapture.captureType">
            <summary>
            캡쳐의 종류 (File or Camera)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvCapture.#ctor(System.Int32)">
            <summary>
            카메라로부터의 비디오 캡쳐를 초기화한다.
            Windows 에서는, 다음의 두 개의 카메라 인터페이스를 이용할 수 있는：Video for Windows(VFW), Matrox Imaging Library(MIL). 
            Linux 에서는, 다음의 두 개 카메라 인터페이스를 이용할 수 있는：Video for Linux(V4L), FireWire(IEEE1394). 
            </summary>
            <param name="index">사용되는 카메라의 인덱스.사용하는 카메라가 1대 때, 혹은, 몇대의 카메라를 사용할지가 중요하지 않을 때는,-1 그렇지만 문제 없는 경우도 있다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.#ctor(OpenCvSharp.CaptureDevice)">
            <summary>
            카메라로부터의 비디오 캡쳐를 초기화한다.
            Windows 에서는, 다음의 두 개의 카메라 인터페이스를 이용할 수 있다：Video for Windows(VFW), Matrox Imaging Library(MIL). 
            Linux 에서는, 다음의 두 개 카메라 인터페이스를 이용할 수 있는：Video for Linux(V4L), FireWire(IEEE1394). 
            </summary>
            <param name="device">사용되는 카메라의 종류</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.#ctor(OpenCvSharp.CaptureDevice,System.Int32)">
            <summary>
            카메라로부터의 비디오 캡쳐를 초기화한다.
            Windows 에서는, 다음의 두 개의 카메라 인터페이스를 이용할 수 있다：Video for Windows(VFW), Matrox Imaging Library(MIL). 
            Linux 에서는, 다음의 두 개 카메라 인터페이스를 이용할 수 있다：Video for Linux(V4L), FireWire(IEEE1394). 
            </summary>
            <param name="device">사용되는 카메라의 종류</param>
            <param name="index">사용되는 카메라의 인덱스.사용하는 카메라가 1대 때, 혹은, 몇대의 카메라를 사용할지가 중요하지 않을 때는,-1 그렇지만 문제 없는 경우도 있다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.FromCamera(System.Int32)">
            <summary>
            카메라로부터의 비디오 캡쳐를 초기화한다.
            Windows 에서는, 다음의 두 개의 카메라 인터페이스를 이용할 수 있는：Video for Windows(VFW), Matrox Imaging Library(MIL). 
            Linux 에서는, 다음의 두 개 카메라 인터페이스를 이용할 수 있는：Video for Linux(V4L), FireWire(IEEE1394). 
            </summary>
            <param name="index">사용되는 카메라의 인덱스.사용하는 카메라가 1대 때, 혹은, 몇대의 카메라를 사용할지가 중요하지 않을 때는 -1 로해도 문제 없는 경우도 있다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.FromCamera(OpenCvSharp.CaptureDevice)">
            <summary>
            카메라로부터의 비디오 캡쳐를 초기화한다.
            Windows 에서는, 다음의 두 개의 카메라 인터페이스를 이용할 수 있다：Video for Windows(VFW), Matrox Imaging Library(MIL). 
            Linux 에서는, 다음의 두 개 카메라 인터페이스를 이용할 수 있다：Video for Linux(V4L), FireWire(IEEE1394). 
            </summary>
            <param name="device">사용되는 카메라의 종류</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.FromCamera(OpenCvSharp.CaptureDevice,System.Int32)">
            <summary>
            카메라로부터의 비디오 캡쳐를 초기화한다.
            Windows 에서는, 다음의 두 개의 카메라 인터페이스를 이용할 수 있는：Video for Windows(VFW), Matrox Imaging Library(MIL). 
            Linux 에서는, 다음의 두 개 카메라 인터페이스를 이용할 수 있는：Video for Linux(V4L), FireWire(IEEE1394). 
            </summary>
            <param name="device">사용되는 카메라의 종류</param>
            <param name="index">사용되는 카메라의 인덱스.사용하는 카메라가 1대 때, 혹은, 몇대의 카메라를 사용할지가 중요하지 않을 때는,-1 그렇지만 문제 없는 경우도 있다.</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.#ctor(System.String)">
            <summary>
            파일로부터의 비디오 캡쳐를 초기화한다
            </summary>
            <param name="filename">비디오 파일명</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.FromFile(System.String)">
            <summary>
            파일로부터의 비디오 캡쳐를 초기화한다
            </summary>
            <param name="filename">비디오 파일명</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.#ctor(System.IntPtr)">
            <summary>
            포인터의 초기화
            </summary>
            <param name="ptr">CvCapture*</param>
        </member>
        <member name="M:OpenCvSharp.CvCapture.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvCapture.GetCaptureProperty(OpenCvSharp.CaptureProperty)">
            <summary>
            비디오 캡쳐의 프롭퍼티를 취득한다
            </summary>
            <param name="property_id">프롭퍼티 ID</param>
            <returns>프롭퍼티의 값</returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.GrabFrame">
            <summary>
            카메라나 파일로부터 프레임을 꺼낸다.꺼내진 프레임은 내부적으로 보존된다.
            꺼내진 프레임을 유저측에서 이용하기 위해서는, cvRetrieveFrame 를 이용해야 한다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.QueryFrame">
            <summary>
            카메라나 비디오 파일로부터 하나의 프레임을 꺼내, 그것을 전개해 돌려준다.
            이 함수는, 단순하게 cvGrabFrame 와 cvRetrieveFrame 를 정리해 호출하고 있다.
            돌려주어진 화상은, 유저가 해제하거나 변경하거나 해서는 안된다.
            </summary>
            <returns>1 프레임의 화상 (GC금지 플래그가 서있다). 캡쳐 할 수 없는 경우는 null.</returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.RetrieveFrame">
            <summary>
            GrabFrame 함수에 의해서 꺼내진 화상의 참조를 돌려준다.
            돌려주어진 화상은, 유저가 해제하거나 변경하거나 해서는 안된다.
            </summary>
            <returns>1 프레임의 화상 (GC금지 플래그가 서있다). 캡쳐 할 수 없는 경우는 null.</returns>
        </member>
        <member name="M:OpenCvSharp.CvCapture.SetCaptureProperty(OpenCvSharp.CaptureProperty,System.Double)">
            <summary>
            비디오 캡쳐의 프롭퍼티를 세트 한다
            </summary>
            <param name="property_id">프롭퍼티 ID</param>
            <param name="value">프롭퍼티의 값</param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvCapture.CaptureType">
            <summary>
            캡쳐의 종류 (File or Camera)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvCapture.PosMsec">
            <summary>
            파일중의 현재의 위치(밀리 세컨드 단위), 혹은 비디오 캡쳐의 타임 스탬프치를 취득·설정한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvCapture.PosFrames">
            <summary>
            다음에 디코드/캡쳐 되는 프레임의 인덱스(0에서는 글자 만)를 취득·설정한다(설정은 비디오 파일만)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvCapture.PosAviRatio">
            <summary>
            비디오 파일내의 상대적인 위치를 취득·설정한다(설정은 비디오 파일만)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvCapture.FrameWidth">
            <summary>
            비디오 스트림중의 프레임의 폭을 취득·설정한다(설정은 카메라만)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvCapture.FrameHeight">
            <summary>
            비디오 스트림중의 프레임의 높이를 취득·설정한다(설정은 카메라만)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvCapture.Fps">
            <summary>
            frame rate를 취득·설정한다(설정은 카메라만)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvCapture.FourCC">
            <summary>
            코덱을 나타내는 4 문자를 취득·설정한다(설정은 카메라만).
            예를 들면,"PIM1" 는, MPEG-1 코덱, "MJPG" 는, motion-jpeg 코덱이다. 
            Win32 환경하에서는, null 를 건네주어 다이얼로그로부터 압축 방법과 압축의 파라미터를 선택할 수 있게 된다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvCapture.FrameCount">
            <summary>
            비디오 파일중의 프레임수를 취득한다
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvCapture.IntBytes">
            <summary>
            Int32의 각 바이트에 액세스 하기 쉽게하기 위한 공용체
            </summary>
        </member>
        <member name="T:OpenCvSharp.ThresholdType">
            <summary>
            이진화의 종류
            </summary>
        </member>
        <member name="F:OpenCvSharp.ThresholdType.Binary">
            <summary>
            [CV_THRESH_BINARY]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ThresholdType.BinaryInv">
            <summary>
            [CV_THRESH_BINARY_INV]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ThresholdType.Truncate">
            <summary>
            [CV_THRESH_TRUNC]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ThresholdType.ToZero">
            <summary>
            [CV_THRESH_TOZERO]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ThresholdType.ToZeroInv">
            <summary>
            [CV_THRESH_TOZERO_INV]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ThresholdType.Mask">
            <summary>
            [CV_THRESH_MASK]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ThresholdType.Otsu">
            <summary>
            오츠 알고리즘
            [CV_THRESH_OTSU]
            </summary>
        </member>
        <member name="T:OpenCvSharp.ReduceDimension">
            <summary>
            cvReduce로, 배열을 어떻게 축소하는지를 나타내는 인덱스
            </summary>
        </member>
        <member name="F:OpenCvSharp.ReduceDimension.Row">
            <summary>
            행렬을 1행 벡터에 축소한다
            [= 0]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ReduceDimension.Column">
            <summary>
            행렬을 1 열에 축소한다
            [= 1]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ReduceDimension.Auto">
            <summary>
            출력 행렬의 사이즈로부터 차원을 해석해, 자동적으로 선택한다
            [= -1]
            </summary>
        </member>
        <member name="T:OpenCvSharp.HaarDetectionType">
            <summary>
            cvHaarDetectObjects의 처리 모드
            </summary>
        </member>
        <member name="F:OpenCvSharp.HaarDetectionType.Zero">
            <summary>
            = 0
            </summary>
        </member>
        <member name="F:OpenCvSharp.HaarDetectionType.DoCannyPruning">
            <summary>
            이것이 세트 되면, 함수는 Canny 엣지 검출기를 매우 많은 엣지를 포함한(혹은 매우 적은 엣지 밖에 포함하지 않는다) 화상 영역을,
            탐색 오브젝트를 포함하지 않는 영역이라고 봐 기각한다. 얼굴 검출용으로는 임계치 조정되고 있어 이 경우, 가지 베어에 의해 처리가 고속화된다.
            [CV_HAAR_DO_CANNY_PRUNING]
            </summary>
        </member>
        <member name="F:OpenCvSharp.HaarDetectionType.ScaleImage">
            <summary>
            스케일링 될 때마다, 함수는, 분류 캐스케이드중의 특징의 좌표계를 「확대」하는 것이 아니라, 반대로 화상을 축소한다. 
            현재는, 단독으로만 이용할 수 있는 옵션이다. 즉, 이 플래그는 다른 것과 병용은 할 수 없다.
            [CV_HAAR_SCALE_IMAGE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.HaarDetectionType.FindBiggestObject">
            <summary>
            이것이 세트 되면, 함수는, (만약 존재하면) 화상중의 최대의 오브젝트를 검출한다. 즉, 출력 순서는 한 개(혹은 0)의 엘리먼트를 가진다.
            [CV_HAAR_FIND_BIGGEST_OBJECT]
            </summary>
        </member>
        <member name="F:OpenCvSharp.HaarDetectionType.DoRoughSearch">
            <summary>
            FindBiggestObject 가 세트 되고 있어 min_neighbors > 0 인 경우에게만 이용 되는 것이 당연하다.
            이 플래그가 세트 되면, 함수는, 현재의 스케일에 대하고, 오브젝트가 검출(한편, 그 근방에 충분히 후보가 검출)된 후에,
            그것보다 작은 사이즈의 후보를 탐색하지 않게 된다. min_neighbors 가 고정되고 있으면, 대체로의 경우, 이 모드는 통상의 싱글 오브젝트 모드
            (flags=FindBiggestObject)보다 부정확한(약간 크다) 오브젝트 구형을 돌려준다. 그러나, 이 모드는 쭉 고속으로  있어, 최대로 10배 정도의 속도차이가 된다.
            정확함을 늘리기 위해서, min_neighbors 에 큰 값을 지정할 수 있다. 
            [CV_HAAR_DO_ROUGH_SEARCH]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvSparseMat">
            <summary>
            다차원, 다채널의 희소 행렬
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSparseMat.SizeOf">
            <summary>
            sizeof(CvSparseMat)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvSparseMat._data">
            <summary>
            C++/CLI wrapper in order to access a native structure
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSparseMat.#ctor(System.IntPtr)">
            <summary>
            포인터 초기화
            </summary>
            <param name="ptr">vSparseMat*</param>
        </member>
        <member name="M:OpenCvSharp.CvSparseMat.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            포인터와 자동 해제의 가부를 지정해 초기화
            </summary>
            <param name="ptr"></param>
            <param name="isEnabledDispose"></param>
        </member>
        <member name="M:OpenCvSharp.CvSparseMat.#ctor(System.Int32,System.Int32[],OpenCvSharp.MatrixType)">
            <summary>
            sizeof(CvSparseMat)의 분의 메모리의 할당만 가서, GC금지 설정으로 초기화
            </summary>
            <param name="dims">배열의 차원수. 조밀한 행렬과는 반대로 차원수는 실질적으로는 무제한이다(2^16 까지).</param>
            <param name="sizes">차원 사이즈의 배열.</param>
            <param name="type">배열 요소의 종류.</param>
        </member>
        <member name="M:OpenCvSharp.CvSparseMat.Dispose">
            <summary>
            자원의 해제(cvReleaseSparseMat)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvSparseMat.Clone">
            <summary>
            희소 배열의 완전한 카피를 작성한다
            </summary>
            <returns>카피된 행렬</returns>
        </member>
        <member name="M:OpenCvSharp.CvSparseMat.NodeIdx(OpenCvSharp.CvSparseNode)">
            <summary>
            CV_NODE_IDX
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvSparseMat.NodeVal``1(OpenCvSharp.CvSparseNode)">
            <summary>
            CV_NODE_VAL
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvSparseMat.Dims">
            <summary>
            배열의 차원수를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSparseMat.Type">
            <summary>
            CvMat 서명 (CV_MAT_MAGIC_VAL). 요소의 형태와 플래그 (CvSparseMat signature (CV_SPARSE_MAT_MAGIC_VAL), element type and flags)
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSparseMat.HashSize">
            <summary>
            해쉬 테이블의 사이즈를 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSparseMat.HashTable">
            <summary>
            해쉬 테이블
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSparseMat.Heap">
            <summary>
            해쉬 테이블 노드의 보존 영역(풀)을 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSparseMat.IdxOffset">
            <summary>
            배열 노드의 인덱스의 오프셋(바이트 단위)을 취득한다 
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSparseMat.ValOffset">
            <summary>
            배열 노드의 값의 오프셋(바이트 단위)을 취득한다
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvSparseMat.Size">
            <summary>
            배열 노드의 값의 오프셋(바이트 단위)을 취득한다
            </summary>
        </member>
        <member name="T:OpenCvSharp.Binarizer">
            <summary>
            여러가지 2진화 방법을 모은 클래스 (OpenCV의 함수가 아니고, OpenCvSharp이 독자적으로 만든 것임. 안전을 보증하지 않음.)
            </summary>
        </member>
        <member name="M:OpenCvSharp.Binarizer.Niblack(OpenCvSharp.IplImage,OpenCvSharp.IplImage,System.Int32,System.Double)">
            <summary>
            Niblack의 방법에 따르는 2진화 처리를 실시한다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="size">국소 영역의 사이즈</param>
            <param name="k">계수</param>
        </member>
        <member name="M:OpenCvSharp.Binarizer.Sauvola(OpenCvSharp.IplImage,OpenCvSharp.IplImage,System.Int32,System.Double,System.Double)">
            <summary>
            Sauvola의 방법에 따르는 2진화 처리를 실시한다.
            </summary>
            <param name="src">입력 화상</param>
            <param name="dst">출력 화상</param>
            <param name="size">국소 영역의 사이즈</param>
            <param name="k">계수</param>
            <param name="r">계수</param>
        </member>
        <member name="M:OpenCvSharp.Binarizer.MeanStddev(OpenCvSharp.IplImage,System.Int32,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            주목 화소의 주변 화소의 평균치로 표준 편차를 요구한다
            </summary>
            <param name="img">화상의 화소 데이터</param>
            <param name="x">x좌표</param>
            <param name="y">y좌표</param>
            <param name="size">주변 화소의 탐색 사이즈.홀수가 아니면 안된다</param>
            <param name="mean">출력되는 평균</param>
            <param name="stddev">출력되는 표준 편차</param>
        </member>
        <member name="T:OpenCvSharp.IplConvKernel">
            <summary>
            팽창·수축 처리에 이용되는 구조 요소
            </summary>
        </member>
        <member name="F:OpenCvSharp.IplConvKernel.SizeOf">
            <summary>
            sizeof(IplConvKernel) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.IplConvKernel._data">
            <summary>
            C++/CLI wrapper of native pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.IplConvKernel.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.ElementShape)">
            <summary>
            팽창·수축처리에 이용하는 구조 요소를 생성한다
            </summary>
            <param name="cols">구조 요소의 열수</param>
            <param name="rows">구조 요소의 행수</param>
            <param name="anchor_x">구조 요소의 원점의 x좌표</param>
            <param name="anchor_y">구조 요소의 원점의 y좌표</param>
            <param name="shape">구조 요소의 형상</param>
            <returns>구조 요소</returns>
        </member>
        <member name="M:OpenCvSharp.IplConvKernel.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.ElementShape,System.Int32[0:,0:])">
            <summary>
            팽창·수축 처리에 이용하는 구조 요소를 생성한다
            </summary>
            <param name="cols">구조 요소의 렬수</param>
            <param name="rows">구조 요소의 행수</param>
            <param name="anchor_x">구조 요소의 원점의 x좌표</param>
            <param name="anchor_y">구조 요소의 원점의 y좌표</param>
            <param name="shape">구조 요소의 형상</param>
            <param name="values">구조 요소 데이터에의 포인터.이 파라미터는 형상이 CV_SHAPE_CUSTOM 때 마셔 유효</param>
            <returns>구조 요소</returns>
        </member>
        <member name="M:OpenCvSharp.IplConvKernel.#ctor(System.IntPtr)">
            <summary>
            포인터로 초기화
            </summary>
            <param name="ptr">IplConvKernel*</param>
        </member>
        <member name="M:OpenCvSharp.IplConvKernel.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplConvKernel.NCols">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplConvKernel.NRows">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplConvKernel.AnchorX">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplConvKernel.AnchorY">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplConvKernel.Values">
            <summary>
            int*
            </summary>
        </member>
        <member name="P:OpenCvSharp.IplConvKernel.NShiftR">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvConnectedComp">
            <summary>
            연결 컴퍼넌트
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvConnectedComp.SizeOf">
            <summary>
            sizeof(CvConnectedComp)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvConnectedComp._data">
            <summary>
            C++/CLI wrapper of native data pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvConnectedComp.#ctor">
            <summary>
            공백으로 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvConnectedComp.#ctor(System.IntPtr)">
            <summary>
            초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvConnectedComp.FromPtr(System.IntPtr)">
            <summary>
            포인터로 부터 CvConnectedComp 생성
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvConnectedComp.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConnectedComp.Area">
            <summary>
            부분화된 연결 컴퍼넌트의 면적
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConnectedComp.Value">
            <summary>
            부분화된 연결 컴퍼넌트의 그레이 스케일치
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConnectedComp.Rect">
            <summary>
            부분화된 연결 컴퍼넌트의 ROI
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvConnectedComp.Contour">
            <summary>
            optional component boundary (the contour might have child contours corresponding to the holes)
            </summary>
        </member>
        <member name="T:OpenCvSharp.ConvexHullOrientation">
            <summary>
            凸를 구성하는 데이터의 줄
            </summary>
        </member>
        <member name="F:OpenCvSharp.ConvexHullOrientation.Clockwise">
            <summary>
            시계회전
            [CV_CLOCKWISE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ConvexHullOrientation.Counterclockwise">
            <summary>
            반시계회전
            [CV_COUNTER_CLOCKWISE]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvTreeNodeIterator`1">
            <summary>
            트리노드의 Iterator를 위한 클래스
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator`1.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator`1.#ctor(System.IntPtr,System.Int32)">
            <summary>
            Construct by cvInitTreeNodeIterator
            </summary>
            <param name="first"></param>
            <param name="max_level"></param>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator`1.#ctor(OpenCvSharp.CvArr,System.Int32)">
            <summary>
            Construct by cvInitTreeNodeIterator
            </summary>
            <param name="first"></param>
            <param name="max_level"></param>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator`1.#ctor(OpenCvSharp.CvTreeNodeIterator)">
            <summary>
            Convert to generic class
            </summary>
            <param name="it"></param>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator`1.NextTreeNode">
            <summary>
            현재의 노드를 돌려주어, 이테레이타를 다음의 노드에 이동시킨다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator`1.PrevTreeNode">
            <summary>
            현재의 노드를 돌려주어, 이테레이타를 전의 노드에 이동시킨다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator`1.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvTreeNodeIterator`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CvBox2D">
            <summary>
            회전이 고려된 2 차원의 박스
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvBox2D.SizeOf">
            <summary>
            sizeof(CvBox2D)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvBox2D.Center">
            <summary>
            사각형의 중심
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvBox2D.Size">
            <summary>
            사각형의 폭과 높이
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvBox2D.Angle">
            <summary>
            수평축과 첫번째 사이드(높이 방향의 사이드)의 각도
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvBox2D.#ctor(OpenCvSharp.CvPoint2D32f,OpenCvSharp.CvSize2D32f,System.Single)">
            <summary>
            초기화
            </summary>
            <param name="center">사각형의 중심</param>
            <param name="size">사각형의 폭과 높이</param>
            <param name="angle">수평축과 첫번째 사이드(높이 방향의 사이드)의 각도</param>
        </member>
        <member name="M:OpenCvSharp.CvBox2D.BoxPoints(OpenCvSharp.CvPoint2D32f[]@)">
            <summary>
            사각형의 정점을 찾아낸다
            </summary>
            <param name="pt">정점의 배열</param>
        </member>
        <member name="T:OpenCvSharp.PointerAccessor1D_Single">
            <summary>
            Single* 를 배열과 같이 액세스 할 수 있도록 하기 위한 클래스
            </summary>
        </member>
        <member name="F:OpenCvSharp.PointerAccessor1D_Single.ptr">
            <summary>
            Pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Single.#ctor(System.IntPtr)">
            <summary>
            IntPtr초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Single.#ctor(System.Single*)">
            <summary>
            Single* 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Single.Get(System.Int32)">
            <summary>
            지정한 인덱스의 배열의 요소를 취득한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.PointerAccessor1D_Single.Set(System.Int32,System.Single)">
            <summary>
            지정한 인덱스의 배열의 요소를 설정한다
            </summary>
            <param name="index">배열의 인덱스</param>
            <param name="value">할당하는 값</param>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D_Single.Ptr">
            <summary>
            내부에서 보관 유지하고 있는 포인터 (Single*)
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.PointerAccessor1D_Single.Item(System.Int32)">
            <summary>
            배열의 요소에 액세스 하는 인덱스
            </summary>
            <param name="index">배열의 인덱스</param>
            <returns>요소의 값</returns>
        </member>
        <member name="T:OpenCvSharp.WindowMode">
            <summary>
            cvNamedWindow로 사용하는 윈도우의 플래그
            </summary>
        </member>
        <member name="F:OpenCvSharp.WindowMode.AutoSize">
            <summary>
            표시되는 화상 사이즈에 맞추어 윈도우사이즈가 자동적으로 조정되는 [CV_WINDOW_AUTOSIZE]
            [CV_WINDOW_AUTOSIZE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.WindowMode.StretchImage">
            <summary>
            윈도우사이즈에 맞추어 표시 화상 사이즈가 변경된다
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvPoint2D64f">
            <summary>
            부동 소수점형(배정도) 좌표계에 의한 2 차원의 점
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint2D64f.SizeOf">
            <summary>
            sizeof(CvPoint2D64f)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint2D64f.X">
            <summary>
            x좌표
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvPoint2D64f.Y">
            <summary>
            y좌표
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.#ctor(System.Double,System.Double)">
            <summary>
            초기화 
            </summary>
            <param name="x">x좌표</param>
            <param name="y">y좌표</param>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.op_Explicit(OpenCvSharp.CvPoint2D64f)~System.Drawing.Point">
            <summary>
            System.Drawing.Pointへの明示的なキャスト
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.op_Implicit(System.Drawing.Point)~OpenCvSharp.CvPoint2D64f">
            <summary>
            System.Drawing.Point의 묵시적 캐스트
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.op_Explicit(OpenCvSharp.CvPoint2D64f)~System.Drawing.PointF">
            <summary>
            System.Drawing.PointF의 명시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.op_Implicit(System.Drawing.PointF)~OpenCvSharp.CvPoint2D64f">
            <summary>
            System.Drawing.PointF의 묵시적 캐스트
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.op_Implicit(OpenCvSharp.CvPoint2D64f)~OpenCvSharp.CvPoint">
            <summary>
            CvPoint의 묵시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.op_Explicit(OpenCvSharp.CvPoint)~OpenCvSharp.CvPoint2D64f">
            <summary>
            CvPoint의 명시적 캐스트
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.op_Implicit(OpenCvSharp.CvPoint2D64f)~OpenCvSharp.CvPoint2D32f">
            <summary>
            CvPoint2D32f의 묵시적 캐스트
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.op_Explicit(OpenCvSharp.CvPoint2D32f)~OpenCvSharp.CvPoint2D64f">
            <summary>
            CvPoint2D32f의 명시적 캐스트
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.Equals(OpenCvSharp.CvPoint2D64f)">
             <summary>
            지정한 CvPoint2D64f의 좌표와 동일하면 true를 돌려준다 
             </summary>
             <param name="cs">비교 대상</param>
             <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.op_Equality(OpenCvSharp.CvPoint2D64f,OpenCvSharp.CvPoint2D64f)">
            <summary>
            == 연산자의 overload.x,y좌표치가 동일하면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.op_Inequality(OpenCvSharp.CvPoint2D64f,OpenCvSharp.CvPoint2D64f)">
            <summary>
            != 연산자의 overload.x,y좌표치가 동일하지 않으면 true를 돌려준다 
            </summary>
            <param name="lhs">좌변치</param>
            <param name="rhs">우변치</param>
            <returns>동일하지 않으면 true</returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.Equals(System.Object)">
            <summary>
            Equals의 오버라이드(override)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.GetHashCode">
            <summary>
            GetHashCode의 오버라이드(override)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvPoint2D64f.ToString">
            <summary>
            문자열 형식을 돌려준다 
            </summary>
            <returns>문자열 형식</returns>
        </member>
        <member name="T:OpenCvSharp.CvFilter">
            <summary>
             pyramid decomposition 사용하는 필터
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvFilter.Gaussian5x5">
            <summary>
            [CV_GAUSSIAN_5x5]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvMemStorage">
            <summary>
            동적으로 확장 가능한 메모리스토레이지
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMemStorage.SizeOf">
            <summary>
            sizeof(CvMemStorage)를 취득한다
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvMemStorage._data">
            <summary>
            C++/CLI wrapper of native pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMemStorage.#ctor">
            <summary>
            메모리스토레이지를 생성해, 그 참조를 돌려줌 [block_size=0 (64K)]. 초기 상태에서는 스토리지는 비어있다. 
            block_size를 제외한 헤더의 필드는 모두 0으로 설정되어 있다.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMemStorage.#ctor(System.Int32)">
            <summary>
            초기화.초기 상태에서는 스토리지는 비어있다. 
            block_size를 제외한 헤더의 필드는 모두 0으로 설정되어 있다.
            </summary>
            <param name="block_size">스토리지 블록의 바이트 단위의 사이즈. 0의 경우 디폴트값(현재는 64 K)이 사용된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvMemStorage.#ctor(System.IntPtr)">
            <summary>
            포인터로 초기화
            </summary>
            <param name="ptr">struct CvMemStorage*</param>
        </member>
        <member name="M:OpenCvSharp.CvMemStorage.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            포인터와 자동 해제의 가부를 지정해 초기화
            </summary>
            <param name="ptr">struct CvMemStorage*</param>
            <param name="isEnabledDispose">자동적으로 GC로 해방해도 좋은지 어떤지</param>
        </member>
        <member name="M:OpenCvSharp.CvMemStorage.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMemStorage.Alloc(System.UInt32)">
            <summary>
            스토리지내에 메모리버퍼를 확보한다. 버퍼사이즈는 스토리지의 블록 사이즈를 넘어선 안 된다.
            넘었을 경우에는 런타임 에러가 발생한다. 버퍼 주소는 CV_STRUCT_ALIGN(현시점에서는 =sizeof(double)) 바이트에 얼라이먼트 된다.
            </summary>
            <param name="size">버퍼 사이즈</param>
        </member>
        <member name="M:OpenCvSharp.CvMemStorage.AllocString(System.String)">
            <summary>
            스토리지내에 텍스트 문자열을 확보한다 (cvMemStorageAllocString).
            </summary>
            <param name="str">문자열</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvMemStorage.Clear">
            <summary>
            스토리지의 선두(빈영역의 경계)를 제일 최초로 되돌린다.
            이 함수는 메모리를 해제하지 않는다. 만약 스토리지가 부모를 가지는 경우 이 함수는 부모에게 모든 블록을 돌려준다.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMemStorage.CreateChild">
            <summary>
            메모리 확보/해제기구의 차이를 제외하고, 단순한 메모리스토레이지를 닮은 차일드 메모리스토레이지를 생성한다.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvMemStorage.RestorePos(OpenCvSharp.CvMemStoragePos)">
            <summary>
            메모리스토레이지의 위치를 복원한다 (cvRestoreMemStoragePos).
            </summary>
            <param name="pos">새로운 스토리지의 선두 위치</param>
        </member>
        <member name="M:OpenCvSharp.CvMemStorage.SavePos">
            <summary>
            메모리스토레이지의 위치를 보존한다 (cvSaveMemStoragePos).
            </summary>
            <returns>스토리지 선두의 위치.</returns>
        </member>
        <member name="P:OpenCvSharp.CvMemStorage.Signature">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMemStorage.Bottom">
            <summary>
            최초로 확보된 블록
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMemStorage.Top">
            <summary>
            새로운 블록을 확보하는 장소
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMemStorage.Parent">
            <summary>
            현재의 메모리 블록 － 스택의 선두
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMemStorage.BlockSize">
            <summary>
            블록의 크기
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvMemStorage.FreeSpace">
            <summary>
            top 블록내의 자유 영역(바이트 단위)
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvRNG">
            <summary>
            난수 생성기. 실체는 UInt64.
            </summary>
            <remarks>typedef uint64 CvRNG</remarks>
        </member>
        <member name="F:OpenCvSharp.CvRNG.Seed">
            <summary>
            이 인스턴스가 나타내 보이는 UInt64치(난수의 종류)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvRNG.#ctor">
            <summary>
            seed = -1 로 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvRNG.#ctor(System.UInt64)">
            <summary>
            seed를 지정해 초기화 
            </summary>
            <param name="seed">랜덤시퀀스를 시작하기 위해서 사용되는 64비트의 값</param>
        </member>
        <member name="M:OpenCvSharp.CvRNG.#ctor(System.Int64)">
            <summary>
            seed를 지정해 초기화 
            </summary>
            <param name="seed">랜덤시퀀스를 시작하기 위해서 사용되는 64비트의 값</param>
        </member>
        <member name="M:OpenCvSharp.CvRNG.#ctor(System.DateTime)">
            <summary>
            특정한 시간값으로 초기화
            </summary>
            <param name="time">시각 데이터. Tick 프롭퍼티의 값이 사용된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvRNG.op_Explicit(OpenCvSharp.CvRNG)~System.UInt64">
            <summary>
            CvRNG로부터 UInt64에의 명시적인 변환
            </summary>
            <param name="self">CvRNG</param>
            <returns>UInt64</returns>
        </member>
        <member name="M:OpenCvSharp.CvRNG.op_Explicit(System.UInt64)~OpenCvSharp.CvRNG">
            <summary>
            UInt64로부터 CvRNG에의 명시적인 변환
            </summary>
            <param name="v">UInt64</param>
            <returns>CvRNG</returns>
        </member>
        <member name="M:OpenCvSharp.CvRNG.RandArr(OpenCvSharp.CvArr,OpenCvSharp.DistributionType,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar)">
            <summary>
            한가지 모양 또는 정규 분포의 난수로 출력 배열을 묻는다 
            </summary>
            <param name="arr">출력 배열</param>
            <param name="dist_type">분포의 타입</param>
            <param name="param1">분포의 제일 파라미터. 한가지 모양 분포에서는, 발생하는 난수의 하한치(이 값을 포함한다)이다. 정규 분포에서는, 난수의 평균치이다.</param>
            <param name="param2">분포의 제2 파라미터.한가지 모양 분포에서는, 발생하는 난수의 상한치(이 값은 포함하지 않는다)이다. 정규 분포에서는, 난수의 표준 편차이다.</param>
        </member>
        <member name="M:OpenCvSharp.CvRNG.RandInt">
            <summary>
            한가지 모양 분포한 32비트 부호 없는 정수형의 난수를 돌려주어, RNG 상태를 갱신한다.
            </summary>
            <returns>32비트 부호 없는 정수</returns>
        </member>
        <member name="M:OpenCvSharp.CvRNG.RandInt(System.UInt32)">
            <summary>
            한가지 모양으로 분포한 32비트 부호 없는 정수형의 난수를 돌려주어, RNG 상태를 갱신한다 (cvRandInt 상당).
            </summary>
            <param name="max">생성되는 난수의 배타적 상한치. 즉 0으로부터 이 값미만의 난수가 돌려주어진다.</param>
            <returns>32비트 부호 없는 정수</returns>
        </member>
        <member name="M:OpenCvSharp.CvRNG.RandInt(System.UInt32,System.UInt32)">
            <summary>
            한가지 모양으로 분포한 32비트 부호 없는 정수형의 난수를 돌려주어, RNG 상태를 갱신한다 (cvRandInt 상당).
            </summary>
            <param name="min">생성되는 난수의 포괄적 하한치. 즉 이 값이상의 난수가 돌려주어진다.</param>
            <param name="max">생성되는 난수의 배타적 상한치. 즉 이 값미만의 난수가 돌려주어진다.</param>
            <returns>32비트 부호 없는 정수</returns>
        </member>
        <member name="M:OpenCvSharp.CvRNG.RandReal">
            <summary>
            0에서 1(1은 포함되지 않는다)의 범위에 한가지 모양 분포하는 부동 소수점형의 난수를 돌려준다.
            </summary>
            <returns>0에서 1(1은 포함되지 않는다)의 범위에 한가지 모양 분포하는 부동 소수점형</returns>
        </member>
        <member name="T:OpenCvSharp.CvHistogram">
            <summary>
            다차원 히스토그램의 구조체
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvHistogram.SizeOf">
            <summary>
            sizeof(CvHistogram)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvHistogram._data">
            <summary>
            C++/CLI측에서 포인터에 액세스 하는 오브젝트
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.#ctor">
            <summary>
            CvHistogram 구조체 분의 메모리 공간을 확보하고 초기화
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.#ctor(System.IntPtr)">
            <summary>
             포인터로부터 히스토그램 생성
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.#ctor(System.Int32[],OpenCvSharp.HistogramFormat)">
            <summary>
            지정 사이즈의 히스토그램을 생성해, 그 히스토그램의 참조를 돌려준다. 
            </summary>
            <param name="dims">히스토그램 각 차원의 사이즈를 나타내는 배열</param>
            <param name="type">히스토그램 표현 포맷</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.#ctor(System.Int32[],OpenCvSharp.HistogramFormat,System.Single[][])">
            <summary>
            지정 사이즈의 히스토그램을 생성해, 그 히스토그램의 참조를 돌려준다. 
            </summary>
            <param name="dims">히스토그램 각 차원의 사이즈를 나타내는 배열</param>
            <param name="type">히스토그램 표현 포맷</param>
            <param name="ranges">히스토그램의 빈(bin)(치역)를 나타내는 배열. 이 파라미터의 의미는 파라미터 uniform에 의존하고 있다.
            이 레인지는, 히스토그램을 계산하거나 또 어느 히스토그램의 빈이 입력 화상의 어느 값이나 어느 데이터 요소에 대응할까를 결정하기 위한 백 프로젝션으로 이용된다.
            null 의 경우는, 나중에 함수 cvSetHistBinRanges 를 이용해 결정된다.</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.#ctor(System.Int32[],OpenCvSharp.HistogramFormat,System.Single[][],System.Boolean)">
            <summary>
            지정 사이즈의 히스토그램을 생성해, 그 히스토그램의 참조를 돌려준다. 
            </summary>
            <param name="dims">히스토그램 각 차원의 사이즈를 나타내는 배열</param>
            <param name="type">히스토그램 표현 포맷</param>
            <param name="ranges">히스토그램의 빈(bin)(치역)를 나타내는 배열. 이 파라미터의 의미는 파라미터 uniform에 의존하고 있다.
            이 레인지는, 히스토그램을 계산하거나 또 어느 히스토그램의 빈이 입력 화상의 어느 값이나 어느 데이터 요소에 대응할까를 결정하기 위한 백 프로젝션으로 이용된다.
            null 의 경우는, 나중에 함수 cvSetHistBinRanges 를 이용해 결정된다.</param>
            <param name="uniform">일 모양성에 관한 플래그</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Dispose">
            <summary>
            자원의 해제 (cvReleaseHist)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.CalcArr(OpenCvSharp.CvArr)">
            <summary>
            1개의 배열의 히스토그램을 계산한다 (cvCalcArrHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.CalcArr(OpenCvSharp.CvArr,System.Boolean)">
            <summary>
            1개의 배열의 히스토그램을 계산한다 (cvCalcArrHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다.</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.CalcArr(OpenCvSharp.CvArr,System.Boolean,OpenCvSharp.CvArr)">
            <summary>
            1개의 배열의 히스토그램을 계산한다 (cvCalcArrHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다.</param>
            <param name="mask">처리 마스크.입력 화상중의 어느 픽셀을 카운트 할까를 결정한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.CalcArr(OpenCvSharp.CvArr[])">
            <summary>
            배열군의 히스토그램을 계산한다 (cvCalcArrHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열군.모두 같은 사이즈·타입.</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.CalcArr(OpenCvSharp.CvArr[],System.Boolean)">
            <summary>
            배열군의 히스토그램을 계산한다 (cvCalcArrHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열군.모두 같은 사이즈·타입.</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다. </param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.CalcArr(OpenCvSharp.CvArr[],System.Boolean,OpenCvSharp.CvArr)">
            <summary>
            배열군의 히스토그램을 계산한다 (cvCalcArrHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="arr">입력 배열군.모두 같은 사이즈·타입.</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다. </param>
            <param name="mask">처리 마스크.입력 화상중의 어느 피크셀을 카운트 할까를 결정한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Calc(OpenCvSharp.IplImage)">
            <summary>
            1개의 화상의 히스토그램을 계산한다 (cvCalcHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 타풀의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Calc(OpenCvSharp.IplImage,System.Boolean)">
            <summary>
            1개의 화상의 히스토그램을 계산한다 (cvCalcHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 타풀의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다. </param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Calc(OpenCvSharp.IplImage,System.Boolean,OpenCvSharp.CvArr)">
            <summary>
            1개의 화상의 히스토그램을 계산한다 (cvCalcHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다.</param>
            <param name="mask">처리 마스크.입력 화상중의 어느 피크셀을 카운트 할까를 결정한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Calc(OpenCvSharp.IplImage[])">
            <summary>
            화상군의 히스토그램을 계산한다 (cvCalcHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상군.모두 같은 사이즈·타입.</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Calc(OpenCvSharp.IplImage[],System.Boolean)">
            <summary>
            화상군의 히스토그램을 계산한다 (cvCalcHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상군.모두 같은 사이즈·타입.</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다. </param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Calc(OpenCvSharp.IplImage[],System.Boolean,OpenCvSharp.CvArr)">
            <summary>
            화상군의 히스토그램을 계산한다 (cvCalcHist 상당).
            히스토그램의 빈을 증가(인크리먼트(increment))하기 위해서 이용되는 tuple의 각 요소는, 대응하는 입력 화상군의 같은 장소로부터 꺼내진다.
            </summary>
            <param name="image">입력 화상군.모두 같은 사이즈·타입.</param>
            <param name="accumulate">계산 플래그.세트 되고 있는 경우는, 히스토그램은 처리전에는 최초로 클리어 되지 않는다. </param>
            <param name="mask">처리 마스크.입력 화상중의 어느 픽셀을 카운트 할까를 결정한다.</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.CalcBayesianProb(OpenCvSharp.CvHistogram[],OpenCvSharp.CvHistogram[])">
            <summary>
            Calculates bayesian probabilistic histograms
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.CalcProbDensity(OpenCvSharp.CvHistogram,OpenCvSharp.CvHistogram,OpenCvSharp.CvHistogram)">
            <summary>
            하나의 히스토그램을 다른 히스토그램으로 나눈다 (cvCalcProbDensity 해당).
            </summary>
            <param name="hist1">첫번째의 히스토그램(제수)</param>
            <param name="hist2">두번째의 히스토그램</param>
            <param name="dst_hist">출력 히스토그램</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.CalcProbDensity(OpenCvSharp.CvHistogram,OpenCvSharp.CvHistogram,OpenCvSharp.CvHistogram,System.Double)">
            <summary>
            하나의 히스토그램을 다른 히스토그램으로 나눈다 (cvCalcProbDensity 해당).
            </summary>
            <param name="hist1">첫번째의 히스토그램(제수)</param>
            <param name="hist2">두번째의 히스토그램</param>
            <param name="dst_hist">출력 히스토그램</param>
            <param name="scale">출력 히스토그램의 스케일 계수</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Clear">
            <summary>
            히스토그램을 클리어 한다 (cvClearHist).
            dense 히스토그램의 경우, 모든 히스토그램의 빈을 0에 세트 한다, 또 희소 히스토그램의 경우는 모든 히스토그램의 빈을 삭제한다.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Compare(OpenCvSharp.CvHistogram,OpenCvSharp.HistogramComparison)">
            <summary>
            2개의 dense 히스토그램을 비교한다 (cvCompareHist 상당).
            희소 히스토그램 혹은 중요 된 점이 모인 것 같은, 보다 일반적인 구조를 비교하기 위해서는, 함수 cvCalcEMD2 를 이용하는 편이 좋은 경우도 있다.
            </summary>
            <param name="hist">비교 대상의 조밀한 히스토그램</param>
            <param name="method">비교 알고리즘</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Copy(OpenCvSharp.CvHistogram)">
            <summary>
            히스토그램의 카피를 작성한다 (cvCopyHist 해당).
            카피 타겟의 히스토그램에의 포인터 dst가 null의 경우는, src와 같은 사이즈의 새로운 히스토그램이 작성된다.
            그 이외의 경우는, 두 개의 히스토그램은 동일 타입, 사이즈가 아니면 안 된다.
            이 함수는 카피소스의 히스토그램의 빈의 값을, 카피 끝에 카피해, src내에 정의되고 있는 것과 같은 빈의 치역을 세트 한다.
            </summary>
            <param name="dst">카피 타겟의 히스토그램에의 포인터. </param>        
        </member>
        <member name="M:OpenCvSharp.CvHistogram.GetValue1D(System.Int32)">
            <summary>
            1 차원 히스토그램의 지정된 빈의 포인터를 돌려준다. 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는 이 함수가 새로운 빈을 작성해 0에 세트 한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.GetValue2D(System.Int32,System.Int32)">
            <summary>
            2 차원 히스토그램의 지정된 빈의 포인터를 돌려준다. 
            희소 히스토그램의 경우로 이미 빈이 존재하고 있는 경우 이외는 이 함수가 새로운 빈을 작성해 0에 세트 한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.GetValue3D(System.Int32,System.Int32,System.Int32)">
            <summary>
            3 차원 히스토그램의 지정된 빈의 포인터를 돌려준다. 
            희소 히스토그램의 경우로 이미 빈이 존재하고 있는 경우 이외는 이 함수가 새로운 빈을 작성해 0에 세트 한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.GetValueND(System.Int32[])">
            <summary>
            n차원 히스토그램의 지정된 빈의 포인터를 돌려준다. 
            희소 히스토그램의 경우로 이미 빈이 존재하고 있는 경우 이외는 이 함수가 새로운 빈을 작성해 0에 세트 한다.
            </summary>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
            <returns>지정한 요소의 포인터</returns>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.GetMinMaxValue(System.Single@,System.Single@)">
            <summary>
            히스토그램의 빈의 최소치/최대치를 요구한다 (cvGetMinMaxHistValue 상당). 
            같은 값의 최대치나 최소치가 복수 존재하는 경우, 사전순서에 늘어놓았을 때에 가장 선두가 되는 인덱스가 돌려주어진다. 
            </summary>
            <param name="min_value">히스토그램의 최소치의 출력</param>
            <param name="max_value">히스토그램의 최대치의 출력</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.GetMinMaxValue(System.Single@,System.Single@,System.Int32[]@,System.Int32[]@)">
            <summary>
            히스토그램의 빈의 최소치/최대치와 그러한 장소를 요구한다 (cvGetMinMaxHistValue 상당). 
            같은 값의 최대치나 최소치가 복수 존재하는 경우, 사전순서에 늘어놓았을 때에 가장 선두가 되는 인덱스가 돌려주어진다. 
            </summary>
            <param name="min_value">히스토그램의 최소치의 출력</param>
            <param name="max_value">히스토그램의 최대치의 출력</param>
            <param name="min_idx">최소치의 배열중의 인덱스의 출력</param>
            <param name="max_idx">최대치의 배열중의 인덱스의 출력</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Normalize(System.Double)">
            <summary>
            히스토그램의 정규화를 실시한다 (cvNormalizeHist 해당).
            빈의 값의 합계가 factor 에 동일해지도록(듯이) 스케일링 하는 일로, 히스토그램의 빈을 정규화한다.
            </summary>
            <param name="factor">정규화 계수</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.QueryValue1D(System.Int32)">
            <summary>
            1 차원 히스토그램의 지정된 빈의 값을 돌려준다 (cvQueryHistValue_1 D상당). 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.QueryValue2D(System.Int32,System.Int32)">
            <summary>
            2 차원 히스토그램의 지정된 빈의 값을 돌려준다 (cvQueryHistValue_2 D상당). 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.QueryValue3D(System.Int32,System.Int32,System.Int32)">
            <summary>
            3 차원 히스토그램의 지정된 빈의 값을 돌려준다 (cvQueryHistValue_3 D상당). 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="idx0">요소 인덱스의, 0을 기준으로 한 제1 성분.</param>
            <param name="idx1">요소 인덱스의, 0을 기준으로 한 제2 성분.</param>
            <param name="idx2">요소 인덱스의, 0을 기준으로 한 제3 성분.</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.QueryValueND(System.Int32[])">
            <summary>
            n차원 히스토그램의 지정된 빈의 값을 돌려준다 (cvQueryHistValue_ND상당). 
            희소 히스토그램의 경우로, 이미 빈이 존재하고 있는 경우 이외는, 이 함수가 새로운 빈을 작성해, 0에 세트 한다.
            </summary>
            <param name="idx">요소 인덱스의 배열(가변장 인수)</param>
            <returns>지정한 요소의 값</returns>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.SetBinRanges(System.Single[][])">
            <summary>
            히스토그램의 빈의 레인지를 세트 한다 (cvSetHistBinRanges 해당).
            </summary>
            <param name="ranges">빈의 레인지의 배열</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.SetBinRanges(System.Single[][],System.Boolean)">
            <summary>
            히스토그램의 빈의 레인지를 세트 한다 (cvSetHistBinRanges 해당).
            </summary>
            <param name="ranges">빈의 레인지의 배열</param>
            <param name="uniform">Uniformity 플래그</param>
        </member>
        <member name="M:OpenCvSharp.CvHistogram.Thresh(System.Double)">
            <summary>
            히스토그램의 쓰레스홀드를 실시한다 (cvThreshHist 상당).
            지정한 쓰레스홀드 이하의 히스토그램의 빈을 클리어 한다.
            </summary>
            <param name="threshold">쓰레스홀드 레벨</param>
        </member>
        <member name="P:OpenCvSharp.CvHistogram.Type">
            <summary>
            히스토그램 표현 포맷을 취득한다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHistogram.Bins">
            <summary>
            히스토그램의 빈(치역)을 취득한다.
            Type가 Array라면 CvMatND, Sparse라면 CvSparseMat가 돌려주어진다.
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvHistogram.Dim">
            <summary>
            히스토그램의 차원
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvContourTree">
            <summary>
            윤곽 데이터의 2분목
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvContourTree.SizeOf">
            <summary>
            sizeof(CvContourTree) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CvContourTree._data">
            <summary>
            C++/CLI access to object's pointer
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvContourTree.#ctor(System.IntPtr)">
            <summary>
            네이티브의 데이터 포인터로부터 초기화
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.CvContourTree.#ctor(OpenCvSharp.CvSeq,OpenCvSharp.CvMemStorage,System.Double)">
            <summary>
            윤곽의 계층적 표현을 생성한다
            </summary>
            <param name="contour">입력 윤곽</param>
            <param name="storage">결과의 트리의 출력처</param>
            <param name="threshold">근사 정도</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CvContourTree.Dispose">
            <summary>
            자원의 해제
            </summary>
        </member>
        <member name="M:OpenCvSharp.CvContourTree.ContourFromContourTree(OpenCvSharp.CvMemStorage,OpenCvSharp.CvTermCriteria)">
            <summary>
            트리로부터 윤곽을 복원한다
            </summary>
            <param name="storage">복원한 윤곽의 출력처</param>
            <param name="criteria">복원을 멈추는 기준</param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CvContourTree.P1">
            <summary>
            The first point of the binary tree root segment
            </summary>
        </member>
        <member name="P:OpenCvSharp.CvContourTree.P2">
            <summary>
            The last point of the binary tree root segment
            </summary>
        </member>
        <member name="T:OpenCvSharp.ErrMode">
            <summary>
            Error mode
            </summary>
        </member>
        <member name="F:OpenCvSharp.ErrMode.CV_ErrModeLeaf">
            <summary>
            프로그램은 에러 핸들러를 호출한 후, 도중 종료한다.디폴트.
            에러 발생 후, 즉시 통지되므로, 디버그시에 유효. 
            그러나, 제품(완성판의) 시스템에서는, 다른 두 개의 모드의 사용이 제어하기 쉽기 때문에 바람직하다. 
            [CV_ErrModeLeaf]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ErrMode.CV_ErrModeParent">
            <summary>
            프로그램은 도중 종료하지 않지만, 에러 핸들러가 불려 간다.
            스택은 해방되지 않는다(C++의 예외 처리를 이용하지 않기 때문에).
            유저는 CxCore의 함수 cvGetErrStatus를 호출해, 에러 코드를 체크해, 대처를 실시하지 않으면 안 된다. 
            [CV_ErrModeParent]
            </summary>
        </member>
        <member name="F:OpenCvSharp.ErrMode.CV_ErrModeSilent">
            <summary>
            Parent 모드와 거의 같지만, 에러 핸들러는 불려 가지 않는다
            [CV_ErrModeSilent]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CvIsInstanceFunc">
            <summary>
            
            </summary>
            <param name="struct_ptr"></param>
            <returns></returns>
        </member>
    </members>
</doc>
